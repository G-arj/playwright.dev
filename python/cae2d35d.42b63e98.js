(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{131:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return p})),n.d(t,"metadata",(function(){return i})),n.d(t,"toc",(function(){return b})),n.d(t,"default",(function(){return c}));var a=n(3),r=n(7),o=(n(0),n(147)),p={id:"class-keyboard",title:"Keyboard"},i={unversionedId:"api/class-keyboard",id:"api/class-keyboard",isDocsHomePage:!1,title:"Keyboard",description:"Keyboard provides an api for managing a virtual keyboard. The high level api is keyboard.type(text, **options), which takes raw characters and generates proper keydown, keypress/input, and keyup events on your page.",source:"@site/docs/api/class-keyboard.md",slug:"/api/class-keyboard",permalink:"/python/docs/api/class-keyboard",version:"current",sidebar:"api",previous:{title:"JSHandle",permalink:"/python/docs/api/class-jshandle"},next:{title:"Mouse",permalink:"/python/docs/api/class-mouse"}},b=[{value:"keyboard.down(key)",id:"keyboarddownkey",children:[]},{value:"keyboard.insert_text(text)",id:"keyboardinsert_texttext",children:[]},{value:"keyboard.press(key, **options)",id:"keyboardpresskey-options",children:[]},{value:"keyboard.type(text, **options)",id:"keyboardtypetext-options",children:[]},{value:"keyboard.up(key)",id:"keyboardupkey",children:[]}],l={toc:b};function c(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Keyboard provides an api for managing a virtual keyboard. The high level api is ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/python/docs/api/class-keyboard#keyboardtypetext-options"}),"keyboard.type(text, **options)"),", which takes raw characters and generates proper keydown, keypress/input, and keyup events on your page."),Object(o.b)("p",null,"For finer control, you can use ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/python/docs/api/class-keyboard#keyboarddownkey"}),"keyboard.down(key)"),", ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/python/docs/api/class-keyboard#keyboardupkey"}),"keyboard.up(key)"),", and ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/python/docs/api/class-keyboard#keyboardinsert_texttext"}),"keyboard.insert_text(text)")," to manually fire events as if they were generated from a real keyboard."),Object(o.b)("p",null,"An example of holding down ",Object(o.b)("inlineCode",{parentName:"p"},"Shift")," in order to select and delete some text:"),Object(o.b)("p",null,"An example of pressing uppercase ",Object(o.b)("inlineCode",{parentName:"p"},"A")),Object(o.b)("p",null,"An example to trigger select-all with the keyboard"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"/python/docs/api/class-keyboard#keyboarddownkey"}),"keyboard.down(key)")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"/python/docs/api/class-keyboard#keyboardinsert_texttext"}),"keyboard.insert_text(text)")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"/python/docs/api/class-keyboard#keyboardpresskey-options"}),"keyboard.press(key, **options)")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"/python/docs/api/class-keyboard#keyboardtypetext-options"}),"keyboard.type(text, **options)")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"/python/docs/api/class-keyboard#keyboardupkey"}),"keyboard.up(key)"))),Object(o.b)("h2",{id:"keyboarddownkey"},"keyboard.down(key)"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"key")," <",Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"https://docs.python.org/3/library/stdtypes.html#text-sequence-type-str",title:"str"}),"str"),"> Name of the key to press or a character to generate, such as ",Object(o.b)("inlineCode",{parentName:"li"},"ArrowLeft")," or ",Object(o.b)("inlineCode",{parentName:"li"},"a"),".")),Object(o.b)("p",null,"Dispatches a ",Object(o.b)("inlineCode",{parentName:"p"},"keydown")," event."),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"key")," can specify the intended ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key"}),"keyboardEvent.key")," value or a single character to generate the text for. A superset of the ",Object(o.b)("inlineCode",{parentName:"p"},"key")," values can be found ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values"}),"here"),". Examples of the keys are:"),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"F1")," - ",Object(o.b)("inlineCode",{parentName:"p"},"F12"),", ",Object(o.b)("inlineCode",{parentName:"p"},"Digit0"),"- ",Object(o.b)("inlineCode",{parentName:"p"},"Digit9"),", ",Object(o.b)("inlineCode",{parentName:"p"},"KeyA"),"- ",Object(o.b)("inlineCode",{parentName:"p"},"KeyZ"),", ",Object(o.b)("inlineCode",{parentName:"p"},"Backquote"),", ",Object(o.b)("inlineCode",{parentName:"p"},"Minus"),", ",Object(o.b)("inlineCode",{parentName:"p"},"Equal"),", ",Object(o.b)("inlineCode",{parentName:"p"},"Backslash"),", ",Object(o.b)("inlineCode",{parentName:"p"},"Backspace"),", ",Object(o.b)("inlineCode",{parentName:"p"},"Tab"),", ",Object(o.b)("inlineCode",{parentName:"p"},"Delete"),", ",Object(o.b)("inlineCode",{parentName:"p"},"Escape"),", ",Object(o.b)("inlineCode",{parentName:"p"},"ArrowDown"),", ",Object(o.b)("inlineCode",{parentName:"p"},"End"),", ",Object(o.b)("inlineCode",{parentName:"p"},"Enter"),", ",Object(o.b)("inlineCode",{parentName:"p"},"Home"),", ",Object(o.b)("inlineCode",{parentName:"p"},"Insert"),", ",Object(o.b)("inlineCode",{parentName:"p"},"PageDown"),", ",Object(o.b)("inlineCode",{parentName:"p"},"PageUp"),", ",Object(o.b)("inlineCode",{parentName:"p"},"ArrowRight"),", ",Object(o.b)("inlineCode",{parentName:"p"},"ArrowUp"),", etc."),Object(o.b)("p",null,"Following modification shortcuts are also supported: ",Object(o.b)("inlineCode",{parentName:"p"},"Shift"),", ",Object(o.b)("inlineCode",{parentName:"p"},"Control"),", ",Object(o.b)("inlineCode",{parentName:"p"},"Alt"),", ",Object(o.b)("inlineCode",{parentName:"p"},"Meta"),", ",Object(o.b)("inlineCode",{parentName:"p"},"ShiftLeft"),"."),Object(o.b)("p",null,"Holding down ",Object(o.b)("inlineCode",{parentName:"p"},"Shift")," will type the text that corresponds to the ",Object(o.b)("inlineCode",{parentName:"p"},"key")," in the upper case."),Object(o.b)("p",null,"If ",Object(o.b)("inlineCode",{parentName:"p"},"key")," is a single character, it is case-sensitive, so the values ",Object(o.b)("inlineCode",{parentName:"p"},"a")," and ",Object(o.b)("inlineCode",{parentName:"p"},"A")," will generate different respective texts."),Object(o.b)("p",null,"If ",Object(o.b)("inlineCode",{parentName:"p"},"key")," is a modifier key, ",Object(o.b)("inlineCode",{parentName:"p"},"Shift"),", ",Object(o.b)("inlineCode",{parentName:"p"},"Meta"),", ",Object(o.b)("inlineCode",{parentName:"p"},"Control"),", or ",Object(o.b)("inlineCode",{parentName:"p"},"Alt"),", subsequent key presses will be sent with that modifier active. To release the modifier key, use ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/python/docs/api/class-keyboard#keyboardupkey"}),"keyboard.up(key)"),"."),Object(o.b)("p",null,"After the key is pressed once, subsequent calls to ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/python/docs/api/class-keyboard#keyboarddownkey"}),"keyboard.down(key)")," will have ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/repeat"}),"repeat")," set to true. To release the key, use ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/python/docs/api/class-keyboard#keyboardupkey"}),"keyboard.up(key)"),"."),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},Object(o.b)("strong",{parentName:"p"},"NOTE")," Modifier keys DO influence ",Object(o.b)("inlineCode",{parentName:"p"},"keyboard.down"),". Holding down ",Object(o.b)("inlineCode",{parentName:"p"},"Shift")," will type the text in upper case.")),Object(o.b)("h2",{id:"keyboardinsert_texttext"},"keyboard.insert_text(text)"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"text")," <",Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"https://docs.python.org/3/library/stdtypes.html#text-sequence-type-str",title:"str"}),"str"),"> Sets input to the specified text value.")),Object(o.b)("p",null,"Dispatches only ",Object(o.b)("inlineCode",{parentName:"p"},"input")," event, does not emit the ",Object(o.b)("inlineCode",{parentName:"p"},"keydown"),", ",Object(o.b)("inlineCode",{parentName:"p"},"keyup")," or ",Object(o.b)("inlineCode",{parentName:"p"},"keypress")," events."),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},Object(o.b)("strong",{parentName:"p"},"NOTE")," Modifier keys DO NOT effect ",Object(o.b)("inlineCode",{parentName:"p"},"keyboard.insertText"),". Holding down ",Object(o.b)("inlineCode",{parentName:"p"},"Shift")," will not type the text in upper case.")),Object(o.b)("h2",{id:"keyboardpresskey-options"},"keyboard.press(key, **options)"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"key")," <",Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"https://docs.python.org/3/library/stdtypes.html#text-sequence-type-str",title:"str"}),"str"),"> Name of the key to press or a character to generate, such as ",Object(o.b)("inlineCode",{parentName:"li"},"ArrowLeft")," or ",Object(o.b)("inlineCode",{parentName:"li"},"a"),"."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"delay")," <",Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"https://docs.python.org/3/library/stdtypes.html#numeric-types-int-float-complex",title:"float"}),"float"),"> Time to wait between ",Object(o.b)("inlineCode",{parentName:"li"},"keydown")," and ",Object(o.b)("inlineCode",{parentName:"li"},"keyup")," in milliseconds. Defaults to 0.")),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"key")," can specify the intended ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key"}),"keyboardEvent.key")," value or a single character to generate the text for. A superset of the ",Object(o.b)("inlineCode",{parentName:"p"},"key")," values can be found ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values"}),"here"),". Examples of the keys are:"),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"F1")," - ",Object(o.b)("inlineCode",{parentName:"p"},"F12"),", ",Object(o.b)("inlineCode",{parentName:"p"},"Digit0"),"- ",Object(o.b)("inlineCode",{parentName:"p"},"Digit9"),", ",Object(o.b)("inlineCode",{parentName:"p"},"KeyA"),"- ",Object(o.b)("inlineCode",{parentName:"p"},"KeyZ"),", ",Object(o.b)("inlineCode",{parentName:"p"},"Backquote"),", ",Object(o.b)("inlineCode",{parentName:"p"},"Minus"),", ",Object(o.b)("inlineCode",{parentName:"p"},"Equal"),", ",Object(o.b)("inlineCode",{parentName:"p"},"Backslash"),", ",Object(o.b)("inlineCode",{parentName:"p"},"Backspace"),", ",Object(o.b)("inlineCode",{parentName:"p"},"Tab"),", ",Object(o.b)("inlineCode",{parentName:"p"},"Delete"),", ",Object(o.b)("inlineCode",{parentName:"p"},"Escape"),", ",Object(o.b)("inlineCode",{parentName:"p"},"ArrowDown"),", ",Object(o.b)("inlineCode",{parentName:"p"},"End"),", ",Object(o.b)("inlineCode",{parentName:"p"},"Enter"),", ",Object(o.b)("inlineCode",{parentName:"p"},"Home"),", ",Object(o.b)("inlineCode",{parentName:"p"},"Insert"),", ",Object(o.b)("inlineCode",{parentName:"p"},"PageDown"),", ",Object(o.b)("inlineCode",{parentName:"p"},"PageUp"),", ",Object(o.b)("inlineCode",{parentName:"p"},"ArrowRight"),", ",Object(o.b)("inlineCode",{parentName:"p"},"ArrowUp"),", etc."),Object(o.b)("p",null,"Following modification shortcuts are also supported: ",Object(o.b)("inlineCode",{parentName:"p"},"Shift"),", ",Object(o.b)("inlineCode",{parentName:"p"},"Control"),", ",Object(o.b)("inlineCode",{parentName:"p"},"Alt"),", ",Object(o.b)("inlineCode",{parentName:"p"},"Meta"),", ",Object(o.b)("inlineCode",{parentName:"p"},"ShiftLeft"),"."),Object(o.b)("p",null,"Holding down ",Object(o.b)("inlineCode",{parentName:"p"},"Shift")," will type the text that corresponds to the ",Object(o.b)("inlineCode",{parentName:"p"},"key")," in the upper case."),Object(o.b)("p",null,"If ",Object(o.b)("inlineCode",{parentName:"p"},"key")," is a single character, it is case-sensitive, so the values ",Object(o.b)("inlineCode",{parentName:"p"},"a")," and ",Object(o.b)("inlineCode",{parentName:"p"},"A")," will generate different respective texts."),Object(o.b)("p",null,"Shortcuts such as ",Object(o.b)("inlineCode",{parentName:"p"},'key: "Control+o"')," or ",Object(o.b)("inlineCode",{parentName:"p"},'key: "Control+Shift+T"')," are supported as well. When speficied with the modifier, modifier is pressed and being held while the subsequent key is being pressed."),Object(o.b)("p",null,"Shortcut for ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/python/docs/api/class-keyboard#keyboarddownkey"}),"keyboard.down(key)")," and ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/python/docs/api/class-keyboard#keyboardupkey"}),"keyboard.up(key)"),"."),Object(o.b)("h2",{id:"keyboardtypetext-options"},"keyboard.type(text, **options)"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"text")," <",Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"https://docs.python.org/3/library/stdtypes.html#text-sequence-type-str",title:"str"}),"str"),"> A text to type into a focused element."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"delay")," <",Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"https://docs.python.org/3/library/stdtypes.html#numeric-types-int-float-complex",title:"float"}),"float"),"> Time to wait between key presses in milliseconds. Defaults to 0.")),Object(o.b)("p",null,"Sends a ",Object(o.b)("inlineCode",{parentName:"p"},"keydown"),", ",Object(o.b)("inlineCode",{parentName:"p"},"keypress"),"/",Object(o.b)("inlineCode",{parentName:"p"},"input"),", and ",Object(o.b)("inlineCode",{parentName:"p"},"keyup")," event for each character in the text."),Object(o.b)("p",null,"To press a special key, like ",Object(o.b)("inlineCode",{parentName:"p"},"Control")," or ",Object(o.b)("inlineCode",{parentName:"p"},"ArrowDown"),", use ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/python/docs/api/class-keyboard#keyboardpresskey-options"}),"keyboard.press(key, **options)"),"."),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},Object(o.b)("strong",{parentName:"p"},"NOTE")," Modifier keys DO NOT effect ",Object(o.b)("inlineCode",{parentName:"p"},"keyboard.type"),". Holding down ",Object(o.b)("inlineCode",{parentName:"p"},"Shift")," will not type the text in upper case.")),Object(o.b)("h2",{id:"keyboardupkey"},"keyboard.up(key)"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"key")," <",Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"https://docs.python.org/3/library/stdtypes.html#text-sequence-type-str",title:"str"}),"str"),"> Name of the key to press or a character to generate, such as ",Object(o.b)("inlineCode",{parentName:"li"},"ArrowLeft")," or ",Object(o.b)("inlineCode",{parentName:"li"},"a"),".")),Object(o.b)("p",null,"Dispatches a ",Object(o.b)("inlineCode",{parentName:"p"},"keyup")," event."))}c.isMDXComponent=!0},147:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return O}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function p(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?p(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):p(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function b(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=r.a.createContext({}),c=function(e){var t=r.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=c(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},y=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,l=b(e,["components","mdxType","originalType","parentName"]),s=c(n),y=a,O=s["".concat(p,".").concat(y)]||s[y]||d[y]||o;return n?r.a.createElement(O,i(i({ref:t},l),{},{components:n})):r.a.createElement(O,i({ref:t},l))}));function O(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,p=new Array(o);p[0]=y;var i={};for(var b in t)hasOwnProperty.call(t,b)&&(i[b]=t[b]);i.originalType=e,i.mdxType="string"==typeof e?e:a,p[1]=i;for(var l=2;l<o;l++)p[l]=n[l];return r.a.createElement.apply(null,p)}return r.a.createElement.apply(null,n)}y.displayName="MDXCreateElement"}}]);
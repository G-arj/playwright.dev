(window.webpackJsonp=window.webpackJsonp||[]).push([[245],{316:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return l})),n.d(t,"toc",(function(){return p})),n.d(t,"default",(function(){return b}));var a=n(3),r=n(7),o=(n(0),n(393)),c=n(396),s=n(397),i={id:"test-examples",title:"Examples"},l={unversionedId:"test-examples",id:"test-examples",isDocsHomePage:!1,title:"Examples",description:"- Multiple pages",source:"@site/docs/test-examples.mdx",slug:"/test-examples",permalink:"/docs/next/test-examples",version:"current",sidebar:"docs",previous:{title:"Test retry",permalink:"/docs/next/test-retries"},next:{title:"Advanced Fixtures",permalink:"/docs/next/test-fixtures"}},p=[{value:"Multiple pages",id:"multiple-pages",children:[]},{value:"Mobile emulation",id:"mobile-emulation",children:[]},{value:"Network mocking",id:"network-mocking",children:[]},{value:"Visual comparisons",id:"visual-comparisons",children:[{value:"Page object model",id:"page-object-model",children:[]}]}],u={toc:p};function b(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"#multiple-pages"}),"Multiple pages")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"#mobile-emulation"}),"Mobile emulation")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"#network-mocking"}),"Network mocking")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"#visual-comparisons"}),"Visual comparisons"))),Object(o.b)("h2",{id:"multiple-pages"},"Multiple pages"),Object(o.b)("p",null,"The default ",Object(o.b)("inlineCode",{parentName:"p"},"context")," argument is a ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/next/api/class-browsercontext",title:"BrowserContext"}),"BrowserContext"),". Browser contexts are isolated execution environments that can host multiple pages. See ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/next/multi-pages"}),"multi-page scenarios")," for more examples."),Object(o.b)(c.a,{groupId:"js-flavor",defaultValue:"js",values:[{label:"JavaScript",value:"js"},{label:"TypeScript",value:"ts"}],mdxType:"Tabs"},Object(o.b)(s.a,{value:"js",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"// example.spec.js\nconst { test } = require('playwright/test');\n\ntest('tests on multiple web pages', async ({ context }) => {\n  const pageFoo = await context.newPage();\n  const pageBar = await context.newPage();\n  // Test function\n});\n"))),Object(o.b)(s.a,{value:"ts",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts"}),"// example.spec.ts\nimport { test } from 'playwright/test';\n\ntest('tests on multiple web pages', async ({ context }) => {\n  const pageFoo = await context.newPage();\n  const pageBar = await context.newPage();\n  // Test function\n});\n")))),Object(o.b)("h2",{id:"mobile-emulation"},"Mobile emulation"),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"use")," section in the configuration file can be used to configure mobile emulation in the default ",Object(o.b)("inlineCode",{parentName:"p"},"context"),"."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'// config.ts\nimport { PlaywrightTestConfig } from "playwright/test";\nimport { devices } from "playwright";\n\nconst config: PlaywrightTestConfig = {\n  timeout: 30000,\n  projects: [\n    {\n      name: \'chromium\',\n      use: {\n        browserName: \'chromium\',\n        headless: true,\n        ...devices["Pixel 2"],\n      },\n    },\n  ],\n};\nexport default config;\n')),Object(o.b)("h2",{id:"network-mocking"},"Network mocking"),Object(o.b)("p",null,"Define a custom route that mocks network calls for a browser context."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'// In foo.spec.ts\nimport { test, expect } from "playwright/test";\n\ntest.beforeEach(async ({ context }) => {\n  // Block any css requests for each test in this file.\n  await context.route(/.css/, route => route.abort());\n});\n\ntest("loads page without css", async ({ page }) => {\n  // Alternatively, block any png requests just for this test.\n  await page.route(/.png/, route => route.abort());\n\n  // Test function code.\n  await page.goto("https://stackoverflow.com");\n});\n')),Object(o.b)("h2",{id:"visual-comparisons"},"Visual comparisons"),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"expect")," API supports visual comparisons with ",Object(o.b)("inlineCode",{parentName:"p"},"toMatchSnapshot"),". This uses the ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/mapbox/pixelmatch"}),"pixelmatch")," library, and you can pass ",Object(o.b)("inlineCode",{parentName:"p"},"threshold")," as an option."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'import { test, expect } from "playwright/test";\n\ntest("compares page screenshot", async ({ page }) => {\n  await page.goto("https://stackoverflow.com");\n  const screenshot = await page.screenshot();\n  expect(screenshot).toMatchSnapshot(`test.png`, { threshold: 0.2 });\n});\n')),Object(o.b)("p",null,"On first execution, this will generate golden snapshots. Subsequent runs will compare against the golden snapshots. To update golden snapshots with new actual values, run with the ",Object(o.b)("inlineCode",{parentName:"p"},"--update-snapshots")," flag."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-sh"}),"# Update golden snapshots when they differ from actual\nnpx playwright test --update-snapshots\n")),Object(o.b)("h3",{id:"page-object-model"},"Page object model"),Object(o.b)("p",null,"To introduce a Page Object for a particular page, create a class that will use the ",Object(o.b)("inlineCode",{parentName:"p"},"page")," object."),Object(o.b)("p",null,"Create a ",Object(o.b)("inlineCode",{parentName:"p"},"LoginPage")," helper class to encapsulate common operations on the login page."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'// login-page.ts\nimport type { Page } from "playwright";\n\nexport class LoginPage {\n  page: Page;\n\n  constructor(page: Page) {\n    this.page = page;\n  }\n\n  async goto() {\n    await this.page.goto("https://example.com/login");\n  }\n\n  async login() {\n    await this.page.fill("#username", TEST_USERNAME);\n    await this.page.fill("#password", TEST_PASSWORD);\n    await this.page.click("text=Login");\n  }\n}\n')),Object(o.b)("p",null,"Use the ",Object(o.b)("inlineCode",{parentName:"p"},"LoginPage")," class in the tests."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'// my.spec.ts\nimport { test, expect } from "playwright/test";\nimport { LoginPage } from "./login-page";\n\ntest(\'login works\', async ({ page }) => {\n  // Create the login page and perform operations.\n  const loginPage = new LoginPage(page);\n  await loginPage.goto();\n  await loginPage.login();\n\n  // Verify it worked.\n  expect(await page.textContent("#user-info")).toBe("Welcome, Test User!");\n});\n')))}b.isMDXComponent=!0},392:function(e,t,n){"use strict";function a(e){var t,n,r="";if("string"==typeof e||"number"==typeof e)r+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=a(e[t]))&&(r&&(r+=" "),r+=n);else for(t in e)e[t]&&(r&&(r+=" "),r+=t);return r}t.a=function(){for(var e,t,n=0,r="";n<arguments.length;)(e=arguments[n++])&&(t=a(e))&&(r&&(r+=" "),r+=t);return r}},393:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return g}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=r.a.createContext({}),p=function(e){var t=r.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=p(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),u=p(n),m=a,g=u["".concat(c,".").concat(m)]||u[m]||b[m]||o;return n?r.a.createElement(g,s(s({ref:t},l),{},{components:n})):r.a.createElement(g,s({ref:t},l))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,c=new Array(o);c[0]=m;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:a,c[1]=s;for(var l=2;l<o;l++)c[l]=n[l];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},394:function(e,t,n){"use strict";var a=n(0),r=n(395);t.a=function(){var e=Object(a.useContext)(r.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},395:function(e,t,n){"use strict";var a=n(0),r=Object(a.createContext)(void 0);t.a=r},396:function(e,t,n){"use strict";var a=n(0),r=n.n(a),o=n(394),c=n(392),s=n(55),i=n.n(s),l=37,p=39;t.a=function(e){var t=e.lazy,n=e.block,s=e.defaultValue,u=e.values,b=e.groupId,m=e.className,g=Object(o.a)(),f=g.tabGroupChoices,d=g.setTabGroupChoices,h=Object(a.useState)(s),j=h[0],O=h[1],w=a.Children.toArray(e.children);if(null!=b){var y=f[b];null!=y&&y!==j&&u.some((function(e){return e.value===y}))&&O(y)}var v=function(e){O(e),null!=b&&d(b,e)},x=[];return r.a.createElement("div",null,r.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(c.a)("tabs",{"tabs--block":n},m)},u.map((function(e){var t=e.value,n=e.label;return r.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":j===t,className:Object(c.a)("tabs__item",i.a.tabItem,{"tabs__item--active":j===t}),key:t,ref:function(e){return x.push(e)},onKeyDown:function(e){!function(e,t,n){switch(n.keyCode){case p:!function(e,t){var n=e.indexOf(t)+1;e[n]?e[n].focus():e[0].focus()}(e,t);break;case l:!function(e,t){var n=e.indexOf(t)-1;e[n]?e[n].focus():e[e.length-1].focus()}(e,t)}}(x,e.target,e)},onFocus:function(){return v(t)},onClick:function(){v(t)}},n)}))),t?Object(a.cloneElement)(w.filter((function(e){return e.props.value===j}))[0],{className:"margin-vert--md"}):r.a.createElement("div",{className:"margin-vert--md"},w.map((function(e,t){return Object(a.cloneElement)(e,{key:t,hidden:e.props.value!==j})}))))}},397:function(e,t,n){"use strict";var a=n(3),r=n(0),o=n.n(r);t.a=function(e){var t=e.children,n=e.hidden,r=e.className;return o.a.createElement("div",Object(a.a)({role:"tabpanel"},{hidden:n,className:r}),t)}}}]);
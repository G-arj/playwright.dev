{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[128],{185:function(e,t,n){\"use strict\";n.r(t),n.d(t,\"frontMatter\",(function(){return c})),n.d(t,\"metadata\",(function(){return o})),n.d(t,\"rightToc\",(function(){return l})),n.d(t,\"default\",(function(){return s}));var a=n(2),i=n(6),r=(n(0),n(866)),c={id:\"ci\",title:\"Continuous Integration\"},o={unversionedId:\"ci\",id:\"version-1.6.1/ci\",isDocsHomePage:!1,title:\"Continuous Integration\",description:\"Playwright tests can be executed in CI environments. We have created sample\",source:\"@site/versioned_docs/version-1.6.1/ci.md\",slug:\"/ci\",permalink:\"/playwright/docs/1.6.1/ci\",editUrl:\"https://github.com/facebook/docusaurus/edit/master/website/versioned_docs/version-1.6.1/ci.md\",version:\"1.6.1\",sidebar:\"version-1.6.1/docs\",previous:{title:\"Running Playwright in Docker\",permalink:\"/playwright/docs/1.6.1/docker/README\"},next:{title:\"Actionability\",permalink:\"/playwright/docs/1.6.1/actionability\"}},l=[{value:\"Introduction\",id:\"introduction\",children:[]},{value:\"CI configurations\",id:\"ci-configurations\",children:[{value:\"GitHub Actions\",id:\"github-actions\",children:[]},{value:\"Docker\",id:\"docker\",children:[]},{value:\"Azure Pipelines\",id:\"azure-pipelines\",children:[]},{value:\"Travis CI\",id:\"travis-ci\",children:[]},{value:\"CircleCI\",id:\"circleci\",children:[]},{value:\"Jenkins\",id:\"jenkins\",children:[]},{value:\"Bitbucket Pipelines\",id:\"bitbucket-pipelines\",children:[]},{value:\"GitLab CI\",id:\"gitlab-ci\",children:[]}]},{value:\"Caching browsers\",id:\"caching-browsers\",children:[]},{value:\"Debugging browser launches\",id:\"debugging-browser-launches\",children:[]},{value:\"Running headful\",id:\"running-headful\",children:[]}],b={rightToc:l};function s(e){var t=e.components,n=Object(i.a)(e,[\"components\"]);return Object(r.b)(\"wrapper\",Object(a.a)({},b,n,{components:t,mdxType:\"MDXLayout\"}),Object(r.b)(\"p\",null,\"Playwright tests can be executed in CI environments. We have created sample\\nconfigurations for common CI providers.\"),Object(r.b)(\"ul\",null,Object(r.b)(\"li\",{parentName:\"ul\"},Object(r.b)(\"a\",Object(a.a)({parentName:\"li\"},{href:\"#introduction\"}),\"Introduction\")),Object(r.b)(\"li\",{parentName:\"ul\"},Object(r.b)(\"a\",Object(a.a)({parentName:\"li\"},{href:\"#ci-configurations\"}),\"CI configurations\"),Object(r.b)(\"ul\",{parentName:\"li\"},Object(r.b)(\"li\",{parentName:\"ul\"},Object(r.b)(\"a\",Object(a.a)({parentName:\"li\"},{href:\"#github-actions\"}),\"GitHub Actions\")),Object(r.b)(\"li\",{parentName:\"ul\"},Object(r.b)(\"a\",Object(a.a)({parentName:\"li\"},{href:\"#docker\"}),\"Docker\")),Object(r.b)(\"li\",{parentName:\"ul\"},Object(r.b)(\"a\",Object(a.a)({parentName:\"li\"},{href:\"#azure-pipelines\"}),\"Azure Pipelines\")),Object(r.b)(\"li\",{parentName:\"ul\"},Object(r.b)(\"a\",Object(a.a)({parentName:\"li\"},{href:\"#travis-ci\"}),\"Travis CI\")),Object(r.b)(\"li\",{parentName:\"ul\"},Object(r.b)(\"a\",Object(a.a)({parentName:\"li\"},{href:\"#circleci\"}),\"CircleCI\")),Object(r.b)(\"li\",{parentName:\"ul\"},Object(r.b)(\"a\",Object(a.a)({parentName:\"li\"},{href:\"#jenkins\"}),\"Jenkins\")),Object(r.b)(\"li\",{parentName:\"ul\"},Object(r.b)(\"a\",Object(a.a)({parentName:\"li\"},{href:\"#bitbucket-pipelines\"}),\"Bitbucket Pipelines\")),Object(r.b)(\"li\",{parentName:\"ul\"},Object(r.b)(\"a\",Object(a.a)({parentName:\"li\"},{href:\"#gitlab-ci\"}),\"GitLab CI\")))),Object(r.b)(\"li\",{parentName:\"ul\"},Object(r.b)(\"a\",Object(a.a)({parentName:\"li\"},{href:\"#caching-browsers\"}),\"Caching browsers\"),Object(r.b)(\"ul\",{parentName:\"li\"},Object(r.b)(\"li\",{parentName:\"ul\"},Object(r.b)(\"a\",Object(a.a)({parentName:\"li\"},{href:\"#exception-node_modules-are-cached\"}),\"Exception: \",Object(r.b)(\"inlineCode\",{parentName:\"a\"},\"node_modules\"),\" are cached\")),Object(r.b)(\"li\",{parentName:\"ul\"},Object(r.b)(\"a\",Object(a.a)({parentName:\"li\"},{href:\"#directories-to-cache\"}),\"Directories to cache\")))),Object(r.b)(\"li\",{parentName:\"ul\"},Object(r.b)(\"a\",Object(a.a)({parentName:\"li\"},{href:\"#debugging-browser-launches\"}),\"Debugging browser launches\")),Object(r.b)(\"li\",{parentName:\"ul\"},Object(r.b)(\"a\",Object(a.a)({parentName:\"li\"},{href:\"#running-headful\"}),\"Running headful\"))),Object(r.b)(\"h2\",{id:\"introduction\"},\"Introduction\"),Object(r.b)(\"p\",null,\"3 steps to get your tests running on CI:\"),Object(r.b)(\"ol\",null,Object(r.b)(\"li\",{parentName:\"ol\"},Object(r.b)(\"strong\",{parentName:\"li\"},\"Ensure CI agent can run browsers\"),\": Use \",Object(r.b)(\"a\",Object(a.a)({parentName:\"li\"},{href:\"/playwright/docs/1.6.1/docker/README\"}),\"our Docker image\"),\"\\nin Linux agents. Windows and macOS agents do not require any additional dependencies.\"),Object(r.b)(\"li\",{parentName:\"ol\"},Object(r.b)(\"strong\",{parentName:\"li\"},\"Install Playwright\"),\": In most projects, this would be done with \",Object(r.b)(\"inlineCode\",{parentName:\"li\"},\"npm ci\"),\"\\n(or \",Object(r.b)(\"inlineCode\",{parentName:\"li\"},\"npm install\"),\"). Playwright would install the relevant browsers automatically.\"),Object(r.b)(\"li\",{parentName:\"ol\"},Object(r.b)(\"strong\",{parentName:\"li\"},\"Run your tests\"),\": Use \",Object(r.b)(\"inlineCode\",{parentName:\"li\"},\"npm test\"),\" or equivalent to execute your tests.\")),Object(r.b)(\"h2\",{id:\"ci-configurations\"},\"CI configurations\"),Object(r.b)(\"h3\",{id:\"github-actions\"},\"GitHub Actions\"),Object(r.b)(\"p\",null,\"The \",Object(r.b)(\"a\",Object(a.a)({parentName:\"p\"},{href:\"https://github.com/microsoft/playwright-github-action\"}),\"Playwright GitHub Action\"),\" can be used to run Playwright tests on GitHub Actions.\"),Object(r.b)(\"pre\",null,Object(r.b)(\"code\",Object(a.a)({parentName:\"pre\"},{className:\"language-yml\"}),\"steps:\\n  - uses: microsoft/playwright-github-action@v1\\n  - name: Run your tests\\n    run: npm test\\n\")),Object(r.b)(\"p\",null,\"We run \",Object(r.b)(\"a\",Object(a.a)({parentName:\"p\"},{href:\"/.github/workflows/tests.yml\"}),\"our tests\"),\" on GitHub Actions, across a matrix of 3 platforms (Windows, Linux, macOS) and 3 browsers (Chromium, Firefox, WebKit).\"),Object(r.b)(\"h3\",{id:\"docker\"},\"Docker\"),Object(r.b)(\"p\",null,\"We have a \",Object(r.b)(\"a\",Object(a.a)({parentName:\"p\"},{href:\"/playwright/docs/1.6.1/docker/README\"}),\"pre-built Docker image\"),\" which can either be used directly, or as a reference to update your existing Docker definitions.\"),Object(r.b)(\"p\",null,\"Suggested configuration\"),Object(r.b)(\"ol\",null,Object(r.b)(\"li\",{parentName:\"ol\"},Object(r.b)(\"p\",{parentName:\"li\"},\"By default, Docker runs a container with a \",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"/dev/shm\"),\" shared memory space 64MB.\\nThis is \",Object(r.b)(\"a\",Object(a.a)({parentName:\"p\"},{href:\"https://github.com/c0b/chrome-in-docker/issues/1\"}),\"typically too small\"),\" for Chromium\\nand will cause Chromium to crash when rendering large pages. To fix, run the container with\\n\",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"docker run --shm-size=1gb\"),\" to increase the size of \",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"/dev/shm\"),\". Since Chromium 65, this is no\\nlonger necessary. Instead, launch the browser with the \",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"--disable-dev-shm-usage\"),\" flag:\"),Object(r.b)(\"pre\",{parentName:\"li\"},Object(r.b)(\"code\",Object(a.a)({parentName:\"pre\"},{className:\"language-js\"}),\"const browser = await playwright.chromium.launch({\\n  args: ['--disable-dev-shm-usage']\\n});\\n\")),Object(r.b)(\"p\",{parentName:\"li\"},\"This will write shared memory files into \",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"/tmp\"),\" instead of \",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"/dev/shm\"),\". See\\n\",Object(r.b)(\"a\",Object(a.a)({parentName:\"p\"},{href:\"https://bugs.chromium.org/p/chromium/issues/detail?id=736452\"}),\"crbug.com/736452\"),\" for more details.\")),Object(r.b)(\"li\",{parentName:\"ol\"},Object(r.b)(\"p\",{parentName:\"li\"},\"Using \",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"--ipc=host\"),\" is also recommended when using Chromium\\u2014without it Chromium can run out of memory\\nand crash. Learn more about this option in \",Object(r.b)(\"a\",Object(a.a)({parentName:\"p\"},{href:\"https://docs.docker.com/engine/reference/run/#ipc-settings---ipc\"}),\"Docker docs\"),\".\")),Object(r.b)(\"li\",{parentName:\"ol\"},Object(r.b)(\"p\",{parentName:\"li\"},\"Seeing other weird errors when launching Chromium? Try running your container\\nwith \",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"docker run --cap-add=SYS_ADMIN\"),\" when developing locally.\")),Object(r.b)(\"li\",{parentName:\"ol\"},Object(r.b)(\"p\",{parentName:\"li\"},Object(r.b)(\"a\",Object(a.a)({parentName:\"p\"},{href:\"https://github.com/Yelp/dumb-init\"}),\"dumb-init\"),\" is worth checking out if you're\\nexperiencing a lot of zombies Chromium processes sticking around. There's special\\ntreatment for processes with PID=1, which makes it hard to terminate Chromium\\nproperly in some cases (e.g. in Docker).\"))),Object(r.b)(\"h3\",{id:\"azure-pipelines\"},\"Azure Pipelines\"),Object(r.b)(\"p\",null,\"For Windows or macOS agents, no additional configuration required, just install Playwright and run your tests.\"),Object(r.b)(\"p\",null,\"For Linux agents, you can use \",Object(r.b)(\"a\",Object(a.a)({parentName:\"p\"},{href:\"/playwright/docs/1.6.1/docker/README\"}),\"our Docker container\"),\" with Azure Pipelines support for \",Object(r.b)(\"a\",Object(a.a)({parentName:\"p\"},{href:\"https://docs.microsoft.com/en-us/azure/devops/pipelines/process/container-phases?view=azure-devops\"}),\"running containerized jobs\"),\". Alternatively, you can refer to the \",Object(r.b)(\"a\",Object(a.a)({parentName:\"p\"},{href:\"/playwright/docs/1.6.1/docker/README\"}),\"Dockerfile\"),\" to see additional dependencies that need to be installed on a Ubuntu agent.\"),Object(r.b)(\"pre\",null,Object(r.b)(\"code\",Object(a.a)({parentName:\"pre\"},{className:\"language-yml\"}),\"pool:\\n  vmImage: 'ubuntu-18.04'\\n\\ncontainer: mcr.microsoft.com/playwright:bionic\\n\\nsteps:\\n- script: npm install\\n- script: npm run test\\n\")),Object(r.b)(\"h3\",{id:\"travis-ci\"},\"Travis CI\"),Object(r.b)(\"p\",null,\"We run our tests on Travis CI over a Linux agent (Ubuntu 18.04).\"),Object(r.b)(\"p\",null,\"Suggested configuration\"),Object(r.b)(\"ol\",null,Object(r.b)(\"li\",{parentName:\"ol\"},Object(r.b)(\"a\",Object(a.a)({parentName:\"li\"},{href:\"http://man7.org/linux/man-pages/man7/user_namespaces.7.html\"}),\"User namespace cloning\"),\"\\nshould be enabled to support proper sandboxing\"),Object(r.b)(\"li\",{parentName:\"ol\"},Object(r.b)(\"a\",Object(a.a)({parentName:\"li\"},{href:\"https://en.wikipedia.org/wiki/Xvfb\"}),\"xvfb\"),\" should be launched in order to run\\nChromium in non-headless mode (e.g. to test Chrome Extensions)\"),Object(r.b)(\"li\",{parentName:\"ol\"},\"If your project does not have \",Object(r.b)(\"inlineCode\",{parentName:\"li\"},\"package-lock.json\"),\", Travis would be auto-caching\\n\",Object(r.b)(\"inlineCode\",{parentName:\"li\"},\"node_modules\"),\" directory. If you run \",Object(r.b)(\"inlineCode\",{parentName:\"li\"},\"npm install\"),\" (instead of \",Object(r.b)(\"inlineCode\",{parentName:\"li\"},\"npm ci\"),\"), it is\\npossible that the browser binaries are not downloaded. Fix this with \",Object(r.b)(\"a\",Object(a.a)({parentName:\"li\"},{href:\"#exception-node_modules-are-cached\"}),\"these steps\"),\" outlined below.\")),Object(r.b)(\"p\",null,\"To sum up, your \",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\".travis.yml\"),\" might look like this:\"),Object(r.b)(\"pre\",null,Object(r.b)(\"code\",Object(a.a)({parentName:\"pre\"},{className:\"language-yml\"}),'language: node_js\\ndist: bionic\\naddons:\\n  apt:\\n    packages:\\n    # These are required to run webkit\\n    - libwoff1\\n    - libopus0\\n    - libwebp6\\n    - libwebpdemux2\\n    - libenchant1c2a\\n    - libgudev-1.0-0\\n    - libsecret-1-0\\n    - libhyphen0\\n    - libgdk-pixbuf2.0-0\\n    - libegl1\\n    - libgles2\\n    - libevent-2.1-6\\n    - libnotify4\\n    - libxslt1.1\\n    - libvpx5\\n    # gstreamer and plugins to support video playback in WebKit.\\n    - gstreamer1.0-gl\\n    - gstreamer1.0-plugins-base\\n    - gstreamer1.0-plugins-good\\n    - gstreamer1.0-plugins-bad\\n    # This is required to run chromium\\n    - libgbm1\\n    # this is needed for running headful tests\\n    - xvfb\\n\\n# allow headful tests\\nbefore_install:\\n  # Enable user namespace cloning\\n  - \"sysctl kernel.unprivileged_userns_clone=1\"\\n  # Launch XVFB\\n  - \"export DISPLAY=:99.0\"\\n  - \"sh -e /etc/init.d/xvfb start\"\\n')),Object(r.b)(\"h3\",{id:\"circleci\"},\"CircleCI\"),Object(r.b)(\"p\",null,\"We run our tests on CircleCI, with our \",Object(r.b)(\"a\",Object(a.a)({parentName:\"p\"},{href:\"/playwright/docs/1.6.1/docker/README\"}),\"pre-built Docker image\"),\". Running Playwright smoothly on CircleCI requires the following steps:\"),Object(r.b)(\"ol\",null,Object(r.b)(\"li\",{parentName:\"ol\"},Object(r.b)(\"p\",{parentName:\"li\"},\"Use the pre-built \",Object(r.b)(\"a\",Object(a.a)({parentName:\"p\"},{href:\"/playwright/docs/1.6.1/docker/README\"}),\"Docker image\"),\" in your config like so:\"),Object(r.b)(\"pre\",{parentName:\"li\"},Object(r.b)(\"code\",Object(a.a)({parentName:\"pre\"},{className:\"language-yaml\"}),\"docker:\\n  - image: mcr.microsoft.com/playwright:bionic\\n    environment:\\n      NODE_ENV: development # Needed if playwright is in `devDependencies`\\n\"))),Object(r.b)(\"li\",{parentName:\"ol\"},Object(r.b)(\"p\",{parentName:\"li\"},\"If you\\u2019re using Playwright through Jest, then you may encounter an error spawning child processes:\"),Object(r.b)(\"pre\",{parentName:\"li\"},Object(r.b)(\"code\",Object(a.a)({parentName:\"pre\"},{}),\"[00:00.0]  jest args: --e2e --spec --max-workers=36\\nError: spawn ENOMEM\\n   at ChildProcess.spawn (internal/child_process.js:394:11)\\n\")),Object(r.b)(\"p\",{parentName:\"li\"},\"This is likely caused by Jest autodetecting the number of processes on the entire machine (\",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"36\"),\") rather than the number allowed to your container (\",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"2\"),\"). To fix this, set \",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"jest --maxWorkers=2\"),\" in your test command.\"))),Object(r.b)(\"h3\",{id:\"jenkins\"},\"Jenkins\"),Object(r.b)(\"p\",null,\"Jenkins supports Docker agents for pipelines. Use the \",Object(r.b)(\"a\",Object(a.a)({parentName:\"p\"},{href:\"/playwright/docs/1.6.1/docker/README\"}),\"Playwright Docker image\"),\"\\nto run tests on Jenkins.\"),Object(r.b)(\"pre\",null,Object(r.b)(\"code\",Object(a.a)({parentName:\"pre\"},{className:\"language-groovy\"}),\"pipeline {\\n   agent { docker { image 'mcr.microsoft.com/playwright:bionic' } }\\n   stages {\\n      stage('e2e-tests') {\\n         steps {\\n            sh 'npm install'\\n            sh 'npm run test'\\n         }\\n      }\\n   }\\n}\\n\")),Object(r.b)(\"h3\",{id:\"bitbucket-pipelines\"},\"Bitbucket Pipelines\"),Object(r.b)(\"p\",null,\"Bitbucket Pipelines can use public \",Object(r.b)(\"a\",Object(a.a)({parentName:\"p\"},{href:\"https://confluence.atlassian.com/bitbucket/use-docker-images-as-build-environments-792298897.html\"}),\"Docker images as build environments\"),\". To run Playwright tests on Bitbucket, use our public Docker image (\",Object(r.b)(\"a\",Object(a.a)({parentName:\"p\"},{href:\"/playwright/docs/1.6.1/docker/README\"}),\"see Dockerfile\"),\").\"),Object(r.b)(\"pre\",null,Object(r.b)(\"code\",Object(a.a)({parentName:\"pre\"},{className:\"language-yml\"}),\"image: mcr.microsoft.com/playwright:bionic\\n\")),Object(r.b)(\"p\",null,\"While the Docker image supports sandboxing for Chromium, it does not work in the Bitbucket Pipelines environment. To launch Chromium on Bitbucket Pipelines, use the \",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"chromiumSandbox: false\"),\" launch argument.\"),Object(r.b)(\"pre\",null,Object(r.b)(\"code\",Object(a.a)({parentName:\"pre\"},{className:\"language-js\"}),\"const { chromium } = require('playwright');\\nconst browser = await chromium.launch({ chromiumSandbox: false });\\n\")),Object(r.b)(\"h3\",{id:\"gitlab-ci\"},\"GitLab CI\"),Object(r.b)(\"p\",null,\"To run Playwright tests on GitLab, use our public Docker image (\",Object(r.b)(\"a\",Object(a.a)({parentName:\"p\"},{href:\"/playwright/docs/1.6.1/docker/README\"}),\"see Dockerfile\"),\").\"),Object(r.b)(\"pre\",null,Object(r.b)(\"code\",Object(a.a)({parentName:\"pre\"},{className:\"language-yml\"}),\"stages:\\n  - test\\n\\ntests:\\n  stage: test\\n  image: mcr.microsoft.com/playwright:bionic\\n  script:\\n    - npm install # This should install playwright\\n    - npm run test\\n\")),Object(r.b)(\"h2\",{id:\"caching-browsers\"},\"Caching browsers\"),Object(r.b)(\"p\",null,\"By default, Playwright downloads browser binaries when the Playwright NPM package\\nis installed. The NPM packages have a \",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"postinstall\"),\" hook that downloads the browser\\nbinaries. This behavior can be \",Object(r.b)(\"a\",Object(a.a)({parentName:\"p\"},{href:\"/playwright/docs/1.6.1/installation\"}),\"customized with environment variables\"),\".\"),Object(r.b)(\"p\",null,\"Caching browsers on CI is \",Object(r.b)(\"strong\",{parentName:\"p\"},\"strictly optional\"),\": The \",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"postinstall\"),\" hooks should\\nexecute and download the browser binaries on every run.\"),Object(r.b)(\"h4\",{id:\"exception-node_modules-are-cached\"},\"Exception: \",Object(r.b)(\"inlineCode\",{parentName:\"h4\"},\"node_modules\"),\" are cached\"),Object(r.b)(\"p\",null,\"Most CI providers cache the \",Object(r.b)(\"a\",Object(a.a)({parentName:\"p\"},{href:\"https://docs.npmjs.com/cli-commands/cache.html\"}),\"npm-cache\"),\"\\ndirectory (located at \",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"$HOME/.npm\"),\"). If your CI pipelines caches the \",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"node_modules\"),\"\\ndirectory and you run \",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"npm install\"),\" (instead of \",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"npm ci\"),\"), the default configuration\\n\",Object(r.b)(\"strong\",{parentName:\"p\"},\"will not work\"),\". This is because the \",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"npm install\"),\" step will find the Playwright NPM\\npackage on disk and not execute the \",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"postinstall\"),\" step.\"),Object(r.b)(\"blockquote\",null,Object(r.b)(\"p\",{parentName:\"blockquote\"},\"Travis CI automatically caches \",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"node_modules\"),\" if your repo does not have a\\n\",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"package-lock.json\"),\" file.\")),Object(r.b)(\"p\",null,\"This behavior can be fixed with one of the following approaches:\"),Object(r.b)(\"ol\",null,Object(r.b)(\"li\",{parentName:\"ol\"},\"Move to caching \",Object(r.b)(\"inlineCode\",{parentName:\"li\"},\"$HOME/.npm\"),\" or the npm-cache directory. (This is the default\\nbehavior in most CI providers.)\"),Object(r.b)(\"li\",{parentName:\"ol\"},\"Set \",Object(r.b)(\"inlineCode\",{parentName:\"li\"},\"PLAYWRIGHT_BROWSERS_PATH=0\"),\" as the environment variable before running\\n\",Object(r.b)(\"inlineCode\",{parentName:\"li\"},\"npm install\"),\". This will download the browser binaries in the \",Object(r.b)(\"inlineCode\",{parentName:\"li\"},\"node_modules\"),\"\\ndirectory and cache them with the package code. See \",Object(r.b)(\"a\",Object(a.a)({parentName:\"li\"},{href:\"/playwright/docs/1.6.1/installation\"}),\"installation docs\"),\".\"),Object(r.b)(\"li\",{parentName:\"ol\"},\"Use \",Object(r.b)(\"inlineCode\",{parentName:\"li\"},\"npm ci\"),\" (instead of \",Object(r.b)(\"inlineCode\",{parentName:\"li\"},\"npm install\"),\") which forces a clean install: by\\nremoving the existing \",Object(r.b)(\"inlineCode\",{parentName:\"li\"},\"node_modules\"),\" directory. See \",Object(r.b)(\"a\",Object(a.a)({parentName:\"li\"},{href:\"https://docs.npmjs.com/cli/ci.html\"}),\"npm docs\"),\".\"),Object(r.b)(\"li\",{parentName:\"ol\"},\"Cache the browser binaries, with the steps below.\")),Object(r.b)(\"h4\",{id:\"directories-to-cache\"},\"Directories to cache\"),Object(r.b)(\"p\",null,\"With the default behavior, Playwright downloads the browser binaries in the following\\ndirectories:\"),Object(r.b)(\"ul\",null,Object(r.b)(\"li\",{parentName:\"ul\"},Object(r.b)(\"inlineCode\",{parentName:\"li\"},\"%USERPROFILE%\\\\AppData\\\\Local\\\\ms-playwright\"),\" on Windows\"),Object(r.b)(\"li\",{parentName:\"ul\"},Object(r.b)(\"inlineCode\",{parentName:\"li\"},\"~/Library/Caches/ms-playwright\"),\" on MacOS\"),Object(r.b)(\"li\",{parentName:\"ul\"},Object(r.b)(\"inlineCode\",{parentName:\"li\"},\"~/.cache/ms-playwright\"),\" on Linux\")),Object(r.b)(\"p\",null,\"To cache the browser downloads between CI runs, cache this location in your CI\\nconfiguration, against a hash of the Playwright version.\"),Object(r.b)(\"h2\",{id:\"debugging-browser-launches\"},\"Debugging browser launches\"),Object(r.b)(\"p\",null,\"Playwright supports the \",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"DEBUG\"),\" environment variable to output debug logs during execution. Setting it to \",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"pw:browser*\"),\" is helpful while debugging \",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"Error: Failed to launch browser\"),\" errors.\"),Object(r.b)(\"pre\",null,Object(r.b)(\"code\",Object(a.a)({parentName:\"pre\"},{}),\"DEBUG=pw:browser* npm run test\\n\")),Object(r.b)(\"h2\",{id:\"running-headful\"},\"Running headful\"),Object(r.b)(\"p\",null,\"By default, Playwright launches browsers in headless mode. This can be changed by passing a flag when the browser is launched.\"),Object(r.b)(\"pre\",null,Object(r.b)(\"code\",Object(a.a)({parentName:\"pre\"},{className:\"language-js\"}),\"// Works across chromium, firefox and webkit\\nconst { chromium } = require('playwright');\\nconst browser = await chromium.launch({ headless: false });\\n\")),Object(r.b)(\"p\",null,\"On Linux agents, headful execution requires \",Object(r.b)(\"a\",Object(a.a)({parentName:\"p\"},{href:\"https://en.wikipedia.org/wiki/Xvfb\"}),\"Xvfb\"),\" to be installed. Our \",Object(r.b)(\"a\",Object(a.a)({parentName:\"p\"},{href:\"/playwright/docs/1.6.1/docker/README\"}),\"Docker image\"),\" and GitHub Action have Xvfb pre-installed. To run browsers in headful mode with Xvfb, add \",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"xvfb-run\"),\" before the Node.js command.\"),Object(r.b)(\"pre\",null,Object(r.b)(\"code\",Object(a.a)({parentName:\"pre\"},{}),\"xvfb-run node index.js\\n\")))}s.isMDXComponent=!0},866:function(e,t,n){\"use strict\";n.d(t,\"a\",(function(){return p})),n.d(t,\"b\",(function(){return d}));var a=n(0),i=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var b=i.a.createContext({}),s=function(e){var t=i.a.useContext(b),n=t;return e&&(n=\"function\"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=s(e.components);return i.a.createElement(b.Provider,{value:t},e.children)},u={inlineCode:\"code\",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},m=i.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,c=e.parentName,b=l(e,[\"components\",\"mdxType\",\"originalType\",\"parentName\"]),p=s(n),m=a,d=p[\"\".concat(c,\".\").concat(m)]||p[m]||u[m]||r;return n?i.a.createElement(d,o(o({ref:t},b),{},{components:n})):i.a.createElement(d,o({ref:t},b))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if(\"string\"==typeof e||a){var r=n.length,c=new Array(r);c[0]=m;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType=\"string\"==typeof e?e:a,c[1]=o;for(var b=2;b<r;b++)c[b]=n[b];return i.a.createElement.apply(null,c)}return i.a.createElement.apply(null,n)}m.displayName=\"MDXCreateElement\"}}]);","name":"237edf4b.e171310a.js","input":"(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[128],{\n\n/***/ 185:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"frontMatter\", function() { return frontMatter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"metadata\", function() { return metadata; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"rightToc\", function() { return rightToc; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return MDXContent; });\n/* harmony import */ var _home_runner_work_playwright_dev_playwright_dev_v2_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2);\n/* harmony import */ var _home_runner_work_playwright_dev_playwright_dev_v2_node_modules_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(0);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(866);\nvar frontMatter={id:'ci',title:'Continuous Integration'};var metadata={\"unversionedId\":\"ci\",\"id\":\"version-1.6.1/ci\",\"isDocsHomePage\":false,\"title\":\"Continuous Integration\",\"description\":\"Playwright tests can be executed in CI environments. We have created sample\",\"source\":\"@site/versioned_docs/version-1.6.1/ci.md\",\"slug\":\"/ci\",\"permalink\":\"/playwright/docs/1.6.1/ci\",\"editUrl\":\"https://github.com/facebook/docusaurus/edit/master/website/versioned_docs/version-1.6.1/ci.md\",\"version\":\"1.6.1\",\"sidebar\":\"version-1.6.1/docs\",\"previous\":{\"title\":\"Running Playwright in Docker\",\"permalink\":\"/playwright/docs/1.6.1/docker/README\"},\"next\":{\"title\":\"Actionability\",\"permalink\":\"/playwright/docs/1.6.1/actionability\"}};/* @jsxRuntime classic */ /* @jsx mdx */var rightToc=[{value:'Introduction',id:'introduction',children:[]},{value:'CI configurations',id:'ci-configurations',children:[{value:'GitHub Actions',id:'github-actions',children:[]},{value:'Docker',id:'docker',children:[]},{value:'Azure Pipelines',id:'azure-pipelines',children:[]},{value:'Travis CI',id:'travis-ci',children:[]},{value:'CircleCI',id:'circleci',children:[]},{value:'Jenkins',id:'jenkins',children:[]},{value:'Bitbucket Pipelines',id:'bitbucket-pipelines',children:[]},{value:'GitLab CI',id:'gitlab-ci',children:[]}]},{value:'Caching browsers',id:'caching-browsers',children:[]},{value:'Debugging browser launches',id:'debugging-browser-launches',children:[]},{value:'Running headful',id:'running-headful',children:[]}];var layoutProps={rightToc:rightToc};var MDXLayout=\"wrapper\";function MDXContent(_ref){var components=_ref.components,props=Object(_home_runner_work_playwright_dev_playwright_dev_v2_node_modules_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__[/* default */ \"a\"])(_ref,[\"components\"]);return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(MDXLayout,Object(_home_runner_work_playwright_dev_playwright_dev_v2_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({},layoutProps,props,{components:components,mdxType:\"MDXLayout\"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"Playwright tests can be executed in CI environments. We have created sample\\nconfigurations for common CI providers.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"ul\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",Object(_home_runner_work_playwright_dev_playwright_dev_v2_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"li\"},{\"href\":\"#introduction\"}),\"Introduction\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",Object(_home_runner_work_playwright_dev_playwright_dev_v2_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"li\"},{\"href\":\"#ci-configurations\"}),\"CI configurations\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"ul\",{parentName:\"li\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",Object(_home_runner_work_playwright_dev_playwright_dev_v2_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"li\"},{\"href\":\"#github-actions\"}),\"GitHub Actions\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",Object(_home_runner_work_playwright_dev_playwright_dev_v2_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"li\"},{\"href\":\"#docker\"}),\"Docker\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",Object(_home_runner_work_playwright_dev_playwright_dev_v2_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"li\"},{\"href\":\"#azure-pipelines\"}),\"Azure Pipelines\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",Object(_home_runner_work_playwright_dev_playwright_dev_v2_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"li\"},{\"href\":\"#travis-ci\"}),\"Travis CI\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",Object(_home_runner_work_playwright_dev_playwright_dev_v2_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"li\"},{\"href\":\"#circleci\"}),\"CircleCI\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",Object(_home_runner_work_playwright_dev_playwright_dev_v2_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"li\"},{\"href\":\"#jenkins\"}),\"Jenkins\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",Object(_home_runner_work_playwright_dev_playwright_dev_v2_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"li\"},{\"href\":\"#bitbucket-pipelines\"}),\"Bitbucket Pipelines\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",Object(_home_runner_work_playwright_dev_playwright_dev_v2_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"li\"},{\"href\":\"#gitlab-ci\"}),\"GitLab CI\")))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",Object(_home_runner_work_playwright_dev_playwright_dev_v2_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"li\"},{\"href\":\"#caching-browsers\"}),\"Caching browsers\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"ul\",{parentName:\"li\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",Object(_home_runner_work_playwright_dev_playwright_dev_v2_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"li\"},{\"href\":\"#exception-node_modules-are-cached\"}),\"Exception: \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"a\"},\"node_modules\"),\" are cached\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",Object(_home_runner_work_playwright_dev_playwright_dev_v2_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"li\"},{\"href\":\"#directories-to-cache\"}),\"Directories to cache\")))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",Object(_home_runner_work_playwright_dev_playwright_dev_v2_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"li\"},{\"href\":\"#debugging-browser-launches\"}),\"Debugging browser launches\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",Object(_home_runner_work_playwright_dev_playwright_dev_v2_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"li\"},{\"href\":\"#running-headful\"}),\"Running headful\"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"h2\",{\"id\":\"introduction\"},\"Introduction\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"3 steps to get your tests running on CI:\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"ol\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ol\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"strong\",{parentName:\"li\"},\"Ensure CI agent can run browsers\"),\": Use \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",Object(_home_runner_work_playwright_dev_playwright_dev_v2_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"li\"},{\"href\":\"/playwright/docs/1.6.1/docker/README\"}),\"our Docker image\"),\"\\nin Linux agents. Windows and macOS agents do not require any additional dependencies.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ol\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"strong\",{parentName:\"li\"},\"Install Playwright\"),\": In most projects, this would be done with \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"npm ci\"),\"\\n(or \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"npm install\"),\"). Playwright would install the relevant browsers automatically.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ol\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"strong\",{parentName:\"li\"},\"Run your tests\"),\": Use \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"npm test\"),\" or equivalent to execute your tests.\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"h2\",{\"id\":\"ci-configurations\"},\"CI configurations\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"h3\",{\"id\":\"github-actions\"},\"GitHub Actions\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"The \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",Object(_home_runner_work_playwright_dev_playwright_dev_v2_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"p\"},{\"href\":\"https://github.com/microsoft/playwright-github-action\"}),\"Playwright GitHub Action\"),\" can be used to run Playwright tests on GitHub Actions.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"code\",Object(_home_runner_work_playwright_dev_playwright_dev_v2_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"pre\"},{\"className\":\"language-yml\"}),\"steps:\\n  - uses: microsoft/playwright-github-action@v1\\n  - name: Run your tests\\n    run: npm test\\n\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"We run \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",Object(_home_runner_work_playwright_dev_playwright_dev_v2_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"p\"},{\"href\":\"/.github/workflows/tests.yml\"}),\"our tests\"),\" on GitHub Actions, across a matrix of 3 platforms (Windows, Linux, macOS) and 3 browsers (Chromium, Firefox, WebKit).\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"h3\",{\"id\":\"docker\"},\"Docker\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"We have a \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",Object(_home_runner_work_playwright_dev_playwright_dev_v2_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"p\"},{\"href\":\"/playwright/docs/1.6.1/docker/README\"}),\"pre-built Docker image\"),\" which can either be used directly, or as a reference to update your existing Docker definitions.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"Suggested configuration\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"ol\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ol\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",{parentName:\"li\"},\"By default, Docker runs a container with a \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"/dev/shm\"),\" shared memory space 64MB.\\nThis is \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",Object(_home_runner_work_playwright_dev_playwright_dev_v2_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"p\"},{\"href\":\"https://github.com/c0b/chrome-in-docker/issues/1\"}),\"typically too small\"),\" for Chromium\\nand will cause Chromium to crash when rendering large pages. To fix, run the container with\\n\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"docker run --shm-size=1gb\"),\" to increase the size of \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"/dev/shm\"),\". Since Chromium 65, this is no\\nlonger necessary. Instead, launch the browser with the \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"--disable-dev-shm-usage\"),\" flag:\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"pre\",{parentName:\"li\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"code\",Object(_home_runner_work_playwright_dev_playwright_dev_v2_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"pre\"},{\"className\":\"language-js\"}),\"const browser = await playwright.chromium.launch({\\n  args: ['--disable-dev-shm-usage']\\n});\\n\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",{parentName:\"li\"},\"This will write shared memory files into \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"/tmp\"),\" instead of \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"/dev/shm\"),\". See\\n\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",Object(_home_runner_work_playwright_dev_playwright_dev_v2_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"p\"},{\"href\":\"https://bugs.chromium.org/p/chromium/issues/detail?id=736452\"}),\"crbug.com/736452\"),\" for more details.\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ol\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",{parentName:\"li\"},\"Using \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"--ipc=host\"),\" is also recommended when using Chromium\\u2014without it Chromium can run out of memory\\nand crash. Learn more about this option in \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",Object(_home_runner_work_playwright_dev_playwright_dev_v2_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"p\"},{\"href\":\"https://docs.docker.com/engine/reference/run/#ipc-settings---ipc\"}),\"Docker docs\"),\".\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ol\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",{parentName:\"li\"},\"Seeing other weird errors when launching Chromium? Try running your container\\nwith \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"docker run --cap-add=SYS_ADMIN\"),\" when developing locally.\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ol\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",{parentName:\"li\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",Object(_home_runner_work_playwright_dev_playwright_dev_v2_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"p\"},{\"href\":\"https://github.com/Yelp/dumb-init\"}),\"dumb-init\"),\" is worth checking out if you're\\nexperiencing a lot of zombies Chromium processes sticking around. There's special\\ntreatment for processes with PID=1, which makes it hard to terminate Chromium\\nproperly in some cases (e.g. in Docker).\"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"h3\",{\"id\":\"azure-pipelines\"},\"Azure Pipelines\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"For Windows or macOS agents, no additional configuration required, just install Playwright and run your tests.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"For Linux agents, you can use \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",Object(_home_runner_work_playwright_dev_playwright_dev_v2_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"p\"},{\"href\":\"/playwright/docs/1.6.1/docker/README\"}),\"our Docker container\"),\" with Azure Pipelines support for \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",Object(_home_runner_work_playwright_dev_playwright_dev_v2_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"p\"},{\"href\":\"https://docs.microsoft.com/en-us/azure/devops/pipelines/process/container-phases?view=azure-devops\"}),\"running containerized jobs\"),\". Alternatively, you can refer to the \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",Object(_home_runner_work_playwright_dev_playwright_dev_v2_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"p\"},{\"href\":\"/playwright/docs/1.6.1/docker/README\"}),\"Dockerfile\"),\" to see additional dependencies that need to be installed on a Ubuntu agent.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"code\",Object(_home_runner_work_playwright_dev_playwright_dev_v2_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"pre\"},{\"className\":\"language-yml\"}),\"pool:\\n  vmImage: 'ubuntu-18.04'\\n\\ncontainer: mcr.microsoft.com/playwright:bionic\\n\\nsteps:\\n- script: npm install\\n- script: npm run test\\n\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"h3\",{\"id\":\"travis-ci\"},\"Travis CI\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"We run our tests on Travis CI over a Linux agent (Ubuntu 18.04).\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"Suggested configuration\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"ol\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ol\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",Object(_home_runner_work_playwright_dev_playwright_dev_v2_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"li\"},{\"href\":\"http://man7.org/linux/man-pages/man7/user_namespaces.7.html\"}),\"User namespace cloning\"),\"\\nshould be enabled to support proper sandboxing\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ol\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",Object(_home_runner_work_playwright_dev_playwright_dev_v2_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"li\"},{\"href\":\"https://en.wikipedia.org/wiki/Xvfb\"}),\"xvfb\"),\" should be launched in order to run\\nChromium in non-headless mode (e.g. to test Chrome Extensions)\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ol\"},\"If your project does not have \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"package-lock.json\"),\", Travis would be auto-caching\\n\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"node_modules\"),\" directory. If you run \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"npm install\"),\" (instead of \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"npm ci\"),\"), it is\\npossible that the browser binaries are not downloaded. Fix this with \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",Object(_home_runner_work_playwright_dev_playwright_dev_v2_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"li\"},{\"href\":\"#exception-node_modules-are-cached\"}),\"these steps\"),\" outlined below.\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"To sum up, your \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\".travis.yml\"),\" might look like this:\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"code\",Object(_home_runner_work_playwright_dev_playwright_dev_v2_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"pre\"},{\"className\":\"language-yml\"}),\"language: node_js\\ndist: bionic\\naddons:\\n  apt:\\n    packages:\\n    # These are required to run webkit\\n    - libwoff1\\n    - libopus0\\n    - libwebp6\\n    - libwebpdemux2\\n    - libenchant1c2a\\n    - libgudev-1.0-0\\n    - libsecret-1-0\\n    - libhyphen0\\n    - libgdk-pixbuf2.0-0\\n    - libegl1\\n    - libgles2\\n    - libevent-2.1-6\\n    - libnotify4\\n    - libxslt1.1\\n    - libvpx5\\n    # gstreamer and plugins to support video playback in WebKit.\\n    - gstreamer1.0-gl\\n    - gstreamer1.0-plugins-base\\n    - gstreamer1.0-plugins-good\\n    - gstreamer1.0-plugins-bad\\n    # This is required to run chromium\\n    - libgbm1\\n    # this is needed for running headful tests\\n    - xvfb\\n\\n# allow headful tests\\nbefore_install:\\n  # Enable user namespace cloning\\n  - \\\"sysctl kernel.unprivileged_userns_clone=1\\\"\\n  # Launch XVFB\\n  - \\\"export DISPLAY=:99.0\\\"\\n  - \\\"sh -e /etc/init.d/xvfb start\\\"\\n\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"h3\",{\"id\":\"circleci\"},\"CircleCI\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"We run our tests on CircleCI, with our \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",Object(_home_runner_work_playwright_dev_playwright_dev_v2_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"p\"},{\"href\":\"/playwright/docs/1.6.1/docker/README\"}),\"pre-built Docker image\"),\". Running Playwright smoothly on CircleCI requires the following steps:\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"ol\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ol\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",{parentName:\"li\"},\"Use the pre-built \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",Object(_home_runner_work_playwright_dev_playwright_dev_v2_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"p\"},{\"href\":\"/playwright/docs/1.6.1/docker/README\"}),\"Docker image\"),\" in your config like so:\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"pre\",{parentName:\"li\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"code\",Object(_home_runner_work_playwright_dev_playwright_dev_v2_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"pre\"},{\"className\":\"language-yaml\"}),\"docker:\\n  - image: mcr.microsoft.com/playwright:bionic\\n    environment:\\n      NODE_ENV: development # Needed if playwright is in `devDependencies`\\n\"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ol\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",{parentName:\"li\"},\"If you\\u2019re using Playwright through Jest, then you may encounter an error spawning child processes:\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"pre\",{parentName:\"li\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"code\",Object(_home_runner_work_playwright_dev_playwright_dev_v2_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"pre\"},{}),\"[00:00.0]  jest args: --e2e --spec --max-workers=36\\nError: spawn ENOMEM\\n   at ChildProcess.spawn (internal/child_process.js:394:11)\\n\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",{parentName:\"li\"},\"This is likely caused by Jest autodetecting the number of processes on the entire machine (\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"36\"),\") rather than the number allowed to your container (\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"2\"),\"). To fix this, set \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"jest --maxWorkers=2\"),\" in your test command.\"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"h3\",{\"id\":\"jenkins\"},\"Jenkins\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"Jenkins supports Docker agents for pipelines. Use the \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",Object(_home_runner_work_playwright_dev_playwright_dev_v2_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"p\"},{\"href\":\"/playwright/docs/1.6.1/docker/README\"}),\"Playwright Docker image\"),\"\\nto run tests on Jenkins.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"code\",Object(_home_runner_work_playwright_dev_playwright_dev_v2_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"pre\"},{\"className\":\"language-groovy\"}),\"pipeline {\\n   agent { docker { image 'mcr.microsoft.com/playwright:bionic' } }\\n   stages {\\n      stage('e2e-tests') {\\n         steps {\\n            sh 'npm install'\\n            sh 'npm run test'\\n         }\\n      }\\n   }\\n}\\n\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"h3\",{\"id\":\"bitbucket-pipelines\"},\"Bitbucket Pipelines\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"Bitbucket Pipelines can use public \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",Object(_home_runner_work_playwright_dev_playwright_dev_v2_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"p\"},{\"href\":\"https://confluence.atlassian.com/bitbucket/use-docker-images-as-build-environments-792298897.html\"}),\"Docker images as build environments\"),\". To run Playwright tests on Bitbucket, use our public Docker image (\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",Object(_home_runner_work_playwright_dev_playwright_dev_v2_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"p\"},{\"href\":\"/playwright/docs/1.6.1/docker/README\"}),\"see Dockerfile\"),\").\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"code\",Object(_home_runner_work_playwright_dev_playwright_dev_v2_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"pre\"},{\"className\":\"language-yml\"}),\"image: mcr.microsoft.com/playwright:bionic\\n\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"While the Docker image supports sandboxing for Chromium, it does not work in the Bitbucket Pipelines environment. To launch Chromium on Bitbucket Pipelines, use the \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"chromiumSandbox: false\"),\" launch argument.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"code\",Object(_home_runner_work_playwright_dev_playwright_dev_v2_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"pre\"},{\"className\":\"language-js\"}),\"const { chromium } = require('playwright');\\nconst browser = await chromium.launch({ chromiumSandbox: false });\\n\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"h3\",{\"id\":\"gitlab-ci\"},\"GitLab CI\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"To run Playwright tests on GitLab, use our public Docker image (\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",Object(_home_runner_work_playwright_dev_playwright_dev_v2_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"p\"},{\"href\":\"/playwright/docs/1.6.1/docker/README\"}),\"see Dockerfile\"),\").\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"code\",Object(_home_runner_work_playwright_dev_playwright_dev_v2_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"pre\"},{\"className\":\"language-yml\"}),\"stages:\\n  - test\\n\\ntests:\\n  stage: test\\n  image: mcr.microsoft.com/playwright:bionic\\n  script:\\n    - npm install # This should install playwright\\n    - npm run test\\n\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"h2\",{\"id\":\"caching-browsers\"},\"Caching browsers\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"By default, Playwright downloads browser binaries when the Playwright NPM package\\nis installed. The NPM packages have a \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"postinstall\"),\" hook that downloads the browser\\nbinaries. This behavior can be \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",Object(_home_runner_work_playwright_dev_playwright_dev_v2_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"p\"},{\"href\":\"/playwright/docs/1.6.1/installation\"}),\"customized with environment variables\"),\".\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"Caching browsers on CI is \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"strong\",{parentName:\"p\"},\"strictly optional\"),\": The \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"postinstall\"),\" hooks should\\nexecute and download the browser binaries on every run.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"h4\",{\"id\":\"exception-node_modules-are-cached\"},\"Exception: \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"h4\"},\"node_modules\"),\" are cached\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"Most CI providers cache the \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",Object(_home_runner_work_playwright_dev_playwright_dev_v2_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"p\"},{\"href\":\"https://docs.npmjs.com/cli-commands/cache.html\"}),\"npm-cache\"),\"\\ndirectory (located at \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"$HOME/.npm\"),\"). If your CI pipelines caches the \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"node_modules\"),\"\\ndirectory and you run \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"npm install\"),\" (instead of \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"npm ci\"),\"), the default configuration\\n\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"strong\",{parentName:\"p\"},\"will not work\"),\". This is because the \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"npm install\"),\" step will find the Playwright NPM\\npackage on disk and not execute the \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"postinstall\"),\" step.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"blockquote\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",{parentName:\"blockquote\"},\"Travis CI automatically caches \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"node_modules\"),\" if your repo does not have a\\n\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"package-lock.json\"),\" file.\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"This behavior can be fixed with one of the following approaches:\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"ol\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ol\"},\"Move to caching \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"$HOME/.npm\"),\" or the npm-cache directory. (This is the default\\nbehavior in most CI providers.)\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ol\"},\"Set \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"PLAYWRIGHT_BROWSERS_PATH=0\"),\" as the environment variable before running\\n\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"npm install\"),\". This will download the browser binaries in the \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"node_modules\"),\"\\ndirectory and cache them with the package code. See \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",Object(_home_runner_work_playwright_dev_playwright_dev_v2_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"li\"},{\"href\":\"/playwright/docs/1.6.1/installation\"}),\"installation docs\"),\".\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ol\"},\"Use \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"npm ci\"),\" (instead of \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"npm install\"),\") which forces a clean install: by\\nremoving the existing \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"node_modules\"),\" directory. See \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",Object(_home_runner_work_playwright_dev_playwright_dev_v2_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"li\"},{\"href\":\"https://docs.npmjs.com/cli/ci.html\"}),\"npm docs\"),\".\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ol\"},\"Cache the browser binaries, with the steps below.\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"h4\",{\"id\":\"directories-to-cache\"},\"Directories to cache\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"With the default behavior, Playwright downloads the browser binaries in the following\\ndirectories:\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"ul\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"%USERPROFILE%\\\\AppData\\\\Local\\\\ms-playwright\"),\" on Windows\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"~/Library/Caches/ms-playwright\"),\" on MacOS\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"~/.cache/ms-playwright\"),\" on Linux\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"To cache the browser downloads between CI runs, cache this location in your CI\\nconfiguration, against a hash of the Playwright version.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"h2\",{\"id\":\"debugging-browser-launches\"},\"Debugging browser launches\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"Playwright supports the \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"DEBUG\"),\" environment variable to output debug logs during execution. Setting it to \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"pw:browser*\"),\" is helpful while debugging \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"Error: Failed to launch browser\"),\" errors.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"code\",Object(_home_runner_work_playwright_dev_playwright_dev_v2_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"pre\"},{}),\"DEBUG=pw:browser* npm run test\\n\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"h2\",{\"id\":\"running-headful\"},\"Running headful\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"By default, Playwright launches browsers in headless mode. This can be changed by passing a flag when the browser is launched.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"code\",Object(_home_runner_work_playwright_dev_playwright_dev_v2_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"pre\"},{\"className\":\"language-js\"}),\"// Works across chromium, firefox and webkit\\nconst { chromium } = require('playwright');\\nconst browser = await chromium.launch({ headless: false });\\n\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"On Linux agents, headful execution requires \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",Object(_home_runner_work_playwright_dev_playwright_dev_v2_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"p\"},{\"href\":\"https://en.wikipedia.org/wiki/Xvfb\"}),\"Xvfb\"),\" to be installed. Our \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",Object(_home_runner_work_playwright_dev_playwright_dev_v2_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"p\"},{\"href\":\"/playwright/docs/1.6.1/docker/README\"}),\"Docker image\"),\" and GitHub Action have Xvfb pre-installed. To run browsers in headful mode with Xvfb, add \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"xvfb-run\"),\" before the Node.js command.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"code\",Object(_home_runner_work_playwright_dev_playwright_dev_v2_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"pre\"},{}),\"xvfb-run node index.js\\n\")));};MDXContent.isMDXComponent=true;\n\n/***/ }),\n\n/***/ 866:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export MDXContext */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return MDXProvider; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return createElement; });\n/* unused harmony export useMDXComponents */\n/* unused harmony export withMDXComponents */\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar isFunction = function isFunction(obj) {\n  return typeof obj === 'function';\n};\n\nvar MDXContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createContext({});\nvar withMDXComponents = function withMDXComponents(Component) {\n  return function (props) {\n    var allComponents = useMDXComponents(props.components);\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Component, _extends({}, props, {\n      components: allComponents\n    }));\n  };\n};\nvar useMDXComponents = function useMDXComponents(components) {\n  var contextComponents = react__WEBPACK_IMPORTED_MODULE_0___default.a.useContext(MDXContext);\n  var allComponents = contextComponents;\n\n  if (components) {\n    allComponents = isFunction(components) ? components(contextComponents) : _objectSpread2(_objectSpread2({}, contextComponents), components);\n  }\n\n  return allComponents;\n};\nvar MDXProvider = function MDXProvider(props) {\n  var allComponents = useMDXComponents(props.components);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(MDXContext.Provider, {\n    value: allComponents\n  }, props.children);\n};\n\nvar TYPE_PROP_NAME = 'mdxType';\nvar DEFAULTS = {\n  inlineCode: 'code',\n  wrapper: function wrapper(_ref) {\n    var children = _ref.children;\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, {}, children);\n  }\n};\nvar MDXCreateElement = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.forwardRef(function (props, ref) {\n  var propComponents = props.components,\n      mdxType = props.mdxType,\n      originalType = props.originalType,\n      parentName = props.parentName,\n      etc = _objectWithoutProperties(props, [\"components\", \"mdxType\", \"originalType\", \"parentName\"]);\n\n  var components = useMDXComponents(propComponents);\n  var type = mdxType;\n  var Component = components[\"\".concat(parentName, \".\").concat(type)] || components[type] || DEFAULTS[type] || originalType;\n\n  if (propComponents) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Component, _objectSpread2(_objectSpread2({\n      ref: ref\n    }, etc), {}, {\n      components: propComponents\n    }));\n  }\n\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Component, _objectSpread2({\n    ref: ref\n  }, etc));\n});\nMDXCreateElement.displayName = 'MDXCreateElement';\nfunction createElement (type, props) {\n  var args = arguments;\n  var mdxType = props && props.mdxType;\n\n  if (typeof type === 'string' || mdxType) {\n    var argsLength = args.length;\n    var createElementArgArray = new Array(argsLength);\n    createElementArgArray[0] = MDXCreateElement;\n    var newProps = {};\n\n    for (var key in props) {\n      if (hasOwnProperty.call(props, key)) {\n        newProps[key] = props[key];\n      }\n    }\n\n    newProps.originalType = type;\n    newProps[TYPE_PROP_NAME] = typeof type === 'string' ? type : mdxType;\n    createElementArgArray[1] = newProps;\n\n    for (var i = 2; i < argsLength; i++) {\n      createElementArgArray[i] = args[i];\n    }\n\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement.apply(null, createElementArgArray);\n  }\n\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement.apply(null, args);\n}\n\n\n\n\n/***/ })\n\n}]);","inputSourceMap":null}
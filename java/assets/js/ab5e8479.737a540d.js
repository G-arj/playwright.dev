"use strict";(self.webpackChunkplaywright_dev=self.webpackChunkplaywright_dev||[]).push([[2555],{3905:function(e,t,a){a.d(t,{Zo:function(){return u},kt:function(){return h}});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},s=Object.keys(e);for(r=0;r<s.length;r++)a=s[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)a=s[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=r.createContext({}),p=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},u=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,s=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=p(a),h=n,m=d["".concat(l,".").concat(h)]||d[h]||c[h]||s;return a?r.createElement(m,o(o({ref:t},u),{},{components:a})):r.createElement(m,o({ref:t},u))}));function h(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var s=a.length,o=new Array(s);o[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:n,o[1]=i;for(var p=2;p<s;p++)o[p]=a[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}d.displayName="MDXCreateElement"},8215:function(e,t,a){a.d(t,{Z:function(){return n}});var r=a(7294);function n(e){var t=e.children,a=e.hidden,n=e.className;return r.createElement("div",{role:"tabpanel",hidden:a,className:n},t)}},9877:function(e,t,a){a.d(t,{Z:function(){return u}});var r=a(7462),n=a(7294),s=a(2389),o=a(9366),i=a(6010),l="tabItem_LplD";function p(e){var t,a,s,p=e.lazy,u=e.block,c=e.defaultValue,d=e.values,h=e.groupId,m=e.className,k=n.Children.map(e.children,(function(e){if((0,n.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),f=null!=d?d:k.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),x=(0,o.lx)(f,(function(e,t){return e.value===t.value}));if(x.length>0)throw new Error('Docusaurus error: Duplicate values "'+x.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var q=null===c?c:null!=(t=null!=c?c:null==(a=k.find((function(e){return e.props.default})))?void 0:a.props.value)?t:null==(s=k[0])?void 0:s.props.value;if(null!==q&&!f.some((function(e){return e.value===q})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+q+'" but none of its children has the corresponding value. Available values are: '+f.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var v=(0,o.UB)(),g=v.tabGroupChoices,N=v.setTabGroupChoices,b=(0,n.useState)(q),P=b[0],R=b[1],T=[],y=(0,o.o5)().blockElementScrollPositionUntilNextRender;if(null!=h){var j=g[h];null!=j&&j!==P&&f.some((function(e){return e.value===j}))&&R(j)}var A=function(e){var t=e.currentTarget,a=T.indexOf(t),r=f[a].value;r!==P&&(y(t),R(r),null!=h&&N(h,r))},C=function(e){var t,a=null;switch(e.key){case"ArrowRight":var r=T.indexOf(e.currentTarget)+1;a=T[r]||T[0];break;case"ArrowLeft":var n=T.indexOf(e.currentTarget)-1;a=T[n]||T[T.length-1]}null==(t=a)||t.focus()};return n.createElement("div",{className:"tabs-container"},n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":u},m)},f.map((function(e){var t=e.value,a=e.label,s=e.attributes;return n.createElement("li",(0,r.Z)({role:"tab",tabIndex:P===t?0:-1,"aria-selected":P===t,key:t,ref:function(e){return T.push(e)},onKeyDown:C,onFocus:A,onClick:A},s,{className:(0,i.Z)("tabs__item",l,null==s?void 0:s.className,{"tabs__item--active":P===t})}),null!=a?a:t)}))),p?(0,n.cloneElement)(k.filter((function(e){return e.props.value===P}))[0],{className:"margin-vert--md"}):n.createElement("div",{className:"margin-vert--md"},k.map((function(e,t){return(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==P})}))))}function u(e){var t=(0,s.Z)();return n.createElement(p,(0,r.Z)({key:String(t)},e))}},1603:function(e,t,a){a.r(t),a.d(t,{assets:function(){return u},contentTitle:function(){return l},default:function(){return h},frontMatter:function(){return i},metadata:function(){return p},toc:function(){return c}});var r=a(7462),n=a(3366),s=(a(7294),a(3905)),o=(a(9877),a(8215),["components"]),i={id:"class-apirequestcontext",title:"APIRequestContext"},l=void 0,p={unversionedId:"api/class-apirequestcontext",id:"version-1.19/api/class-apirequestcontext",title:"APIRequestContext",description:"This API is used for the Web API testing. You can use it to trigger API endpoints, configure micro-services, prepare environment or the service to your e2e test. When used on [Page] or a [BrowserContext], this API will automatically use the cookies from the corresponding [BrowserContext]. This means that if you log in using this API, your e2e test will be logged in and vice versa.",source:"@site/versioned_docs/version-1.19/api/class-apirequestcontext.mdx",sourceDirName:"api",slug:"/api/class-apirequestcontext",permalink:"/java/docs/api/class-apirequestcontext",tags:[],version:"1.19",frontMatter:{id:"class-apirequestcontext",title:"APIRequestContext"},sidebar:"version-1.19/api",previous:{title:"APIRequest",permalink:"/java/docs/api/class-apirequest"},next:{title:"APIResponse",permalink:"/java/docs/api/class-apiresponse"}},u={},c=[{value:"APIRequestContext.delete(url, options)",id:"api-request-context-delete",level:2},{value:"APIRequestContext.dispose()",id:"api-request-context-dispose",level:2},{value:"APIRequestContext.fetch(urlOrRequest, options)",id:"api-request-context-fetch",level:2},{value:"APIRequestContext.get(url, options)",id:"api-request-context-get",level:2},{value:"APIRequestContext.head(url, options)",id:"api-request-context-head",level:2},{value:"APIRequestContext.patch(url, options)",id:"api-request-context-patch",level:2},{value:"APIRequestContext.post(url, options)",id:"api-request-context-post",level:2},{value:"APIRequestContext.put(url, options)",id:"api-request-context-put",level:2},{value:"APIRequestContext.storageState(options)",id:"api-request-context-storage-state",level:2}],d={toc:c};function h(e){var t=e.components,a=(0,n.Z)(e,o);return(0,s.kt)("wrapper",(0,r.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"This API is used for the Web API testing. You can use it to trigger API endpoints, configure micro-services, prepare environment or the service to your e2e test. When used on ",(0,s.kt)("a",{parentName:"p",href:"/java/docs/api/class-page",title:"Page"},"Page")," or a ",(0,s.kt)("a",{parentName:"p",href:"/java/docs/api/class-browsercontext",title:"BrowserContext"},"BrowserContext"),", this API will automatically use the cookies from the corresponding ",(0,s.kt)("a",{parentName:"p",href:"/java/docs/api/class-browsercontext",title:"BrowserContext"},"BrowserContext"),". This means that if you log in using this API, your e2e test will be logged in and vice versa."),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/java/docs/api/class-apirequestcontext#api-request-context-delete"},"APIRequestContext.delete(url[, options])")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/java/docs/api/class-apirequestcontext#api-request-context-dispose"},"APIRequestContext.dispose()")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/java/docs/api/class-apirequestcontext#api-request-context-fetch"},"APIRequestContext.fetch(urlOrRequest[, options])")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/java/docs/api/class-apirequestcontext#api-request-context-get"},"APIRequestContext.get(url[, options])")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/java/docs/api/class-apirequestcontext#api-request-context-head"},"APIRequestContext.head(url[, options])")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/java/docs/api/class-apirequestcontext#api-request-context-patch"},"APIRequestContext.patch(url[, options])")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/java/docs/api/class-apirequestcontext#api-request-context-post"},"APIRequestContext.post(url[, options])")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/java/docs/api/class-apirequestcontext#api-request-context-put"},"APIRequestContext.put(url[, options])")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/java/docs/api/class-apirequestcontext#api-request-context-storage-state"},"APIRequestContext.storageState([options])"))),(0,s.kt)("h2",{id:"api-request-context-delete"},"APIRequestContext.delete(url","[, options]",")"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"url"),(0,s.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"api-request-context-delete-option-url"})," ","<",(0,s.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html",title:"String"},"String"),">"," Target URL.",(0,s.kt)("a",{href:"#api-request-context-delete-option-url",class:"list-anchor"},"#")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"options"),(0,s.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"api-request-context-delete-option-params"})," ","<",(0,s.kt)("a",{parentName:"li",href:"/java/docs/api/class-requestoptions",title:"RequestOptions"},"RequestOptions"),">"," Optional request parameters.",(0,s.kt)("a",{href:"#api-request-context-delete-option-params",class:"list-anchor"},"#")),(0,s.kt)("li",{parentName:"ul"},"returns:",(0,s.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"api-request-context-delete-return"})," ","<",(0,s.kt)("a",{parentName:"li",href:"/java/docs/api/class-apiresponse",title:"APIResponse"},"APIResponse"),">",(0,s.kt)("a",{href:"#api-request-context-delete-return",class:"list-anchor"},"#"))),(0,s.kt)("p",null,"Sends HTTP(S) ",(0,s.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/DELETE"},"DELETE")," request and returns its response. The method will populate request cookies from the context and update context cookies from the response. The method will automatically follow redirects."),(0,s.kt)("h2",{id:"api-request-context-dispose"},"APIRequestContext.dispose()"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"returns:",(0,s.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"api-request-context-dispose-return"})," ","<",(0,s.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/tutorial/java/javaOO/methods.html",title:"void"},"void"),">",(0,s.kt)("a",{href:"#api-request-context-dispose-return",class:"list-anchor"},"#"))),(0,s.kt)("p",null,"All responses returned by ",(0,s.kt)("a",{parentName:"p",href:"/java/docs/api/class-apirequestcontext#api-request-context-get"},"APIRequestContext.get(url[, options])")," and similar methods are stored in the memory, so that you can later call ",(0,s.kt)("a",{parentName:"p",href:"/java/docs/api/class-apiresponse#api-response-body"},"APIResponse.body()"),". This method discards all stored responses, and makes ",(0,s.kt)("a",{parentName:"p",href:"/java/docs/api/class-apiresponse#api-response-body"},"APIResponse.body()"),' throw "Response disposed" error.'),(0,s.kt)("h2",{id:"api-request-context-fetch"},"APIRequestContext.fetch(urlOrRequest","[, options]",")"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"urlOrRequest"),(0,s.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"api-request-context-fetch-option-url-or-request"})," ","<",(0,s.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html",title:"String"},"String"),"|",(0,s.kt)("a",{parentName:"li",href:"/java/docs/api/class-request",title:"Request"},"Request"),">"," Target URL or Request to get all parameters from.",(0,s.kt)("a",{href:"#api-request-context-fetch-option-url-or-request",class:"list-anchor"},"#")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"options"),(0,s.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"api-request-context-fetch-option-params"})," ","<",(0,s.kt)("a",{parentName:"li",href:"/java/docs/api/class-requestoptions",title:"RequestOptions"},"RequestOptions"),">"," Optional request parameters.",(0,s.kt)("a",{href:"#api-request-context-fetch-option-params",class:"list-anchor"},"#")),(0,s.kt)("li",{parentName:"ul"},"returns:",(0,s.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"api-request-context-fetch-return"})," ","<",(0,s.kt)("a",{parentName:"li",href:"/java/docs/api/class-apiresponse",title:"APIResponse"},"APIResponse"),">",(0,s.kt)("a",{href:"#api-request-context-fetch-return",class:"list-anchor"},"#"))),(0,s.kt)("p",null,"Sends HTTP(S) request and returns its response. The method will populate request cookies from the context and update context cookies from the response. The method will automatically follow redirects."),(0,s.kt)("h2",{id:"api-request-context-get"},"APIRequestContext.get(url","[, options]",")"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"url"),(0,s.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"api-request-context-get-option-url"})," ","<",(0,s.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html",title:"String"},"String"),">"," Target URL.",(0,s.kt)("a",{href:"#api-request-context-get-option-url",class:"list-anchor"},"#")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"options"),(0,s.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"api-request-context-get-option-params"})," ","<",(0,s.kt)("a",{parentName:"li",href:"/java/docs/api/class-requestoptions",title:"RequestOptions"},"RequestOptions"),">"," Optional request parameters.",(0,s.kt)("a",{href:"#api-request-context-get-option-params",class:"list-anchor"},"#")),(0,s.kt)("li",{parentName:"ul"},"returns:",(0,s.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"api-request-context-get-return"})," ","<",(0,s.kt)("a",{parentName:"li",href:"/java/docs/api/class-apiresponse",title:"APIResponse"},"APIResponse"),">",(0,s.kt)("a",{href:"#api-request-context-get-return",class:"list-anchor"},"#"))),(0,s.kt)("p",null,"Sends HTTP(S) ",(0,s.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/GET"},"GET")," request and returns its response. The method will populate request cookies from the context and update context cookies from the response. The method will automatically follow redirects."),(0,s.kt)("h2",{id:"api-request-context-head"},"APIRequestContext.head(url","[, options]",")"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"url"),(0,s.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"api-request-context-head-option-url"})," ","<",(0,s.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html",title:"String"},"String"),">"," Target URL.",(0,s.kt)("a",{href:"#api-request-context-head-option-url",class:"list-anchor"},"#")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"options"),(0,s.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"api-request-context-head-option-params"})," ","<",(0,s.kt)("a",{parentName:"li",href:"/java/docs/api/class-requestoptions",title:"RequestOptions"},"RequestOptions"),">"," Optional request parameters.",(0,s.kt)("a",{href:"#api-request-context-head-option-params",class:"list-anchor"},"#")),(0,s.kt)("li",{parentName:"ul"},"returns:",(0,s.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"api-request-context-head-return"})," ","<",(0,s.kt)("a",{parentName:"li",href:"/java/docs/api/class-apiresponse",title:"APIResponse"},"APIResponse"),">",(0,s.kt)("a",{href:"#api-request-context-head-return",class:"list-anchor"},"#"))),(0,s.kt)("p",null,"Sends HTTP(S) ",(0,s.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/HEAD"},"HEAD")," request and returns its response. The method will populate request cookies from the context and update context cookies from the response. The method will automatically follow redirects."),(0,s.kt)("h2",{id:"api-request-context-patch"},"APIRequestContext.patch(url","[, options]",")"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"url"),(0,s.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"api-request-context-patch-option-url"})," ","<",(0,s.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html",title:"String"},"String"),">"," Target URL.",(0,s.kt)("a",{href:"#api-request-context-patch-option-url",class:"list-anchor"},"#")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"options"),(0,s.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"api-request-context-patch-option-params"})," ","<",(0,s.kt)("a",{parentName:"li",href:"/java/docs/api/class-requestoptions",title:"RequestOptions"},"RequestOptions"),">"," Optional request parameters.",(0,s.kt)("a",{href:"#api-request-context-patch-option-params",class:"list-anchor"},"#")),(0,s.kt)("li",{parentName:"ul"},"returns:",(0,s.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"api-request-context-patch-return"})," ","<",(0,s.kt)("a",{parentName:"li",href:"/java/docs/api/class-apiresponse",title:"APIResponse"},"APIResponse"),">",(0,s.kt)("a",{href:"#api-request-context-patch-return",class:"list-anchor"},"#"))),(0,s.kt)("p",null,"Sends HTTP(S) ",(0,s.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/PATCH"},"PATCH")," request and returns its response. The method will populate request cookies from the context and update context cookies from the response. The method will automatically follow redirects."),(0,s.kt)("h2",{id:"api-request-context-post"},"APIRequestContext.post(url","[, options]",")"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"url"),(0,s.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"api-request-context-post-option-url"})," ","<",(0,s.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html",title:"String"},"String"),">"," Target URL.",(0,s.kt)("a",{href:"#api-request-context-post-option-url",class:"list-anchor"},"#")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"options"),(0,s.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"api-request-context-post-option-params"})," ","<",(0,s.kt)("a",{parentName:"li",href:"/java/docs/api/class-requestoptions",title:"RequestOptions"},"RequestOptions"),">"," Optional request parameters.",(0,s.kt)("a",{href:"#api-request-context-post-option-params",class:"list-anchor"},"#")),(0,s.kt)("li",{parentName:"ul"},"returns:",(0,s.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"api-request-context-post-return"})," ","<",(0,s.kt)("a",{parentName:"li",href:"/java/docs/api/class-apiresponse",title:"APIResponse"},"APIResponse"),">",(0,s.kt)("a",{href:"#api-request-context-post-return",class:"list-anchor"},"#"))),(0,s.kt)("p",null,"Sends HTTP(S) ",(0,s.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/POST"},"POST")," request and returns its response. The method will populate request cookies from the context and update context cookies from the response. The method will automatically follow redirects."),(0,s.kt)("h2",{id:"api-request-context-put"},"APIRequestContext.put(url","[, options]",")"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"url"),(0,s.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"api-request-context-put-option-url"})," ","<",(0,s.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html",title:"String"},"String"),">"," Target URL.",(0,s.kt)("a",{href:"#api-request-context-put-option-url",class:"list-anchor"},"#")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"options"),(0,s.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"api-request-context-put-option-params"})," ","<",(0,s.kt)("a",{parentName:"li",href:"/java/docs/api/class-requestoptions",title:"RequestOptions"},"RequestOptions"),">"," Optional request parameters.",(0,s.kt)("a",{href:"#api-request-context-put-option-params",class:"list-anchor"},"#")),(0,s.kt)("li",{parentName:"ul"},"returns:",(0,s.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"api-request-context-put-return"})," ","<",(0,s.kt)("a",{parentName:"li",href:"/java/docs/api/class-apiresponse",title:"APIResponse"},"APIResponse"),">",(0,s.kt)("a",{href:"#api-request-context-put-return",class:"list-anchor"},"#"))),(0,s.kt)("p",null,"Sends HTTP(S) ",(0,s.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/PUT"},"PUT")," request and returns its response. The method will populate request cookies from the context and update context cookies from the response. The method will automatically follow redirects."),(0,s.kt)("h2",{id:"api-request-context-storage-state"},"APIRequestContext.storageState(","[options]",")"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"options")," ","<",(0,s.kt)("inlineCode",{parentName:"li"},"ApiRequestContext.StorageStateOptions"),">",(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"setPath"),(0,s.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"api-request-context-storage-state-option-path"})," ","<",(0,s.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/8/docs/api/java/nio/file/Path.html",title:"Path"},"Path"),">"," The file path to save the storage state to. If ",(0,s.kt)("inlineCode",{parentName:"li"},"path")," is a relative path, then it is resolved relative to current working directory. If no path is provided, storage state is still returned, but won't be saved to the disk.",(0,s.kt)("a",{href:"#api-request-context-storage-state-option-path",class:"list-anchor"},"#")))),(0,s.kt)("li",{parentName:"ul"},"returns:",(0,s.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"api-request-context-storage-state-return"})," ","<",(0,s.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html",title:"String"},"String"),">",(0,s.kt)("a",{href:"#api-request-context-storage-state-return",class:"list-anchor"},"#"))),(0,s.kt)("p",null,"Returns storage state for this request context, contains current cookies and local storage snapshot if it was passed to the constructor."))}h.isMDXComponent=!0}}]);
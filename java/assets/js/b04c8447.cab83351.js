"use strict";(self.webpackChunkplaywright_dev=self.webpackChunkplaywright_dev||[]).push([[390],{5834:function(t,e,a){a.r(e),a.d(e,{frontMatter:function(){return n},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return p},default:function(){return d}});var o=a(7462),s=a(3366),r=(a(7294),a(3905)),i=(a(6396),a(8215),["components"]),n={id:"test-assertions",title:"Assertions"},l=void 0,c={unversionedId:"test-assertions",id:"test-assertions",isDocsHomePage:!1,title:"Assertions",description:"Playwright gives you Web-First Assertions with convenience methods for creating assertions that will wait and retry until the expected condition is met.",source:"@site/docs/test-assertions.mdx",sourceDirName:".",slug:"/test-assertions",permalink:"/java/docs/next/test-assertions",tags:[],version:"current",frontMatter:{id:"test-assertions",title:"Assertions"},sidebar:"api",previous:{title:"APIResponse",permalink:"/java/docs/next/api/class-apiresponse"},next:{title:"Browser",permalink:"/java/docs/next/api/class-browser"}},p=[{value:"assertThat(locator).not()",id:"locator-assertions-not",children:[],level:2},{value:"assertThat(locator).isChecked(options)",id:"locator-assertions-to-be-checked",children:[],level:2},{value:"assertThat(locator).isDisabled(options)",id:"locator-assertions-to-be-disabled",children:[],level:2},{value:"assertThat(locator).isEditable(options)",id:"locator-assertions-to-be-editable",children:[],level:2},{value:"assertThat(locator).isEmpty(options)",id:"locator-assertions-to-be-empty",children:[],level:2},{value:"assertThat(locator).isEnabled(options)",id:"locator-assertions-to-be-enabled",children:[],level:2},{value:"assertThat(locator).isFocused(options)",id:"locator-assertions-to-be-focused",children:[],level:2},{value:"assertThat(locator).isHidden(options)",id:"locator-assertions-to-be-hidden",children:[],level:2},{value:"assertThat(locator).isVisible(options)",id:"locator-assertions-to-be-visible",children:[],level:2},{value:"assertThat(locator).containsText(expected, options)",id:"locator-assertions-to-contain-text",children:[],level:2},{value:"assertThat(locator).hasAttribute(name, value, options)",id:"locator-assertions-to-have-attribute",children:[],level:2},{value:"assertThat(locator).hasClass(expected, options)",id:"locator-assertions-to-have-class",children:[],level:2},{value:"assertThat(locator).hasCount(count, options)",id:"locator-assertions-to-have-count",children:[],level:2},{value:"assertThat(locator).hasCSS(name, value, options)",id:"locator-assertions-to-have-css",children:[],level:2},{value:"assertThat(locator).hasId(id, options)",id:"locator-assertions-to-have-id",children:[],level:2},{value:"assertThat(locator).hasJSProperty(name, value, options)",id:"locator-assertions-to-have-js-property",children:[],level:2},{value:"assertThat(locator).hasText(expected, options)",id:"locator-assertions-to-have-text",children:[],level:2},{value:"assertThat(locator).hasValue(value, options)",id:"locator-assertions-to-have-value",children:[],level:2},{value:"assertThat(page).not()",id:"page-assertions-not",children:[],level:2},{value:"assertThat(page).hasTitle(titleOrRegExp, options)",id:"page-assertions-to-have-title",children:[],level:2},{value:"assertThat(page).hasURL(urlOrRegExp, options)",id:"page-assertions-to-have-url",children:[],level:2},{value:"assertThat(apiResponse).not()",id:"api-response-assertions-not",children:[],level:2},{value:"assertThat(apiResponse).isOK()",id:"api-response-assertions-to-be-ok",children:[],level:2}],h={toc:p};function d(t){var e=t.components,a=(0,s.Z)(t,i);return(0,r.kt)("wrapper",(0,o.Z)({},h,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Playwright gives you Web-First Assertions with convenience methods for creating assertions that will wait and retry until the expected condition is met."),(0,r.kt)("p",null,"Consider the following example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'...\nimport static com.microsoft.playwright.assertions.PlaywrightAssertions.assertThat;\n\npublic class TestExample {\n  ...\n  @Test\n  void statusBecomesSubmitted() {\n    ...\n    page.click("#submit-button");\n    assertThat(page.locator(".status")).hasText("Submitted");\n  }\n}\n')),(0,r.kt)("p",null,"Playwright will be re-testing the node with the selector ",(0,r.kt)("inlineCode",{parentName:"p"},".status")," until fetched Node has the ",(0,r.kt)("inlineCode",{parentName:"p"},'"Submitted"')," text. It will be re-fetching the node and checking it over and over, until the condition is met or until the timeout is reached. You can pass this timeout as an option."),(0,r.kt)("p",null,"By default, the timeout for assertions is set to 5 seconds."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/java/docs/next/test-assertions#locator-assertions-to-be-checked"},"assertThat(locator).isChecked([options])")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/java/docs/next/test-assertions#locator-assertions-to-be-disabled"},"assertThat(locator).isDisabled([options])")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/java/docs/next/test-assertions#locator-assertions-to-be-editable"},"assertThat(locator).isEditable([options])")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/java/docs/next/test-assertions#locator-assertions-to-be-empty"},"assertThat(locator).isEmpty([options])")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/java/docs/next/test-assertions#locator-assertions-to-be-enabled"},"assertThat(locator).isEnabled([options])")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/java/docs/next/test-assertions#locator-assertions-to-be-focused"},"assertThat(locator).isFocused([options])")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/java/docs/next/test-assertions#locator-assertions-to-be-hidden"},"assertThat(locator).isHidden([options])")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/java/docs/next/test-assertions#locator-assertions-to-be-visible"},"assertThat(locator).isVisible([options])")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/java/docs/next/test-assertions#locator-assertions-to-contain-text"},"assertThat(locator).containsText(expected[, options])")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/java/docs/next/test-assertions#locator-assertions-to-have-attribute"},"assertThat(locator).hasAttribute(name, value[, options])")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/java/docs/next/test-assertions#locator-assertions-to-have-class"},"assertThat(locator).hasClass(expected[, options])")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/java/docs/next/test-assertions#locator-assertions-to-have-count"},"assertThat(locator).hasCount(count[, options])")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/java/docs/next/test-assertions#locator-assertions-to-have-css"},"assertThat(locator).hasCSS(name, value[, options])")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/java/docs/next/test-assertions#locator-assertions-to-have-id"},"assertThat(locator).hasId(id[, options])")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/java/docs/next/test-assertions#locator-assertions-to-have-js-property"},"assertThat(locator).hasJSProperty(name, value[, options])")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/java/docs/next/test-assertions#locator-assertions-to-have-text"},"assertThat(locator).hasText(expected[, options])")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/java/docs/next/test-assertions#locator-assertions-to-have-value"},"assertThat(locator).hasValue(value[, options])")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/java/docs/next/test-assertions#locator-assertions-not"},"assertThat(locator).not()")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/java/docs/next/test-assertions#page-assertions-to-have-title"},"assertThat(page).hasTitle(titleOrRegExp[, options])")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/java/docs/next/test-assertions#page-assertions-to-have-url"},"assertThat(page).hasURL(urlOrRegExp[, options])")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/java/docs/next/test-assertions#page-assertions-not"},"assertThat(page).not()")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/java/docs/next/test-assertions#api-response-assertions-to-be-ok"},"assertThat(apiResponse).isOK()")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/java/docs/next/test-assertions#api-response-assertions-not"},"assertThat(apiResponse).not()"))),(0,r.kt)("h2",{id:"locator-assertions-not"},"assertThat(locator).not()"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"returns: ","<",(0,r.kt)("a",{parentName:"li",href:"/java/docs/next/test-assertions",title:"LocatorAssertions"},"LocatorAssertions"),">")),(0,r.kt)("p",null,"Makes the assertion check for the opposite condition. For example, this code tests that the Locator doesn't contain text ",(0,r.kt)("inlineCode",{parentName:"p"},'"error"'),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'assertThat(locator).not().containsText("error");\n')),(0,r.kt)("h2",{id:"locator-assertions-to-be-checked"},"assertThat(locator).isChecked(","[options]",")"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"options")," ","<",(0,r.kt)("inlineCode",{parentName:"li"},"LocatorAssertions.IsCheckedOptions"),">",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"setChecked"),(0,r.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"locator-assertions-to-be-checked-option-checked"})," ","<",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html",title:"boolean"},"boolean"),">",(0,r.kt)("a",{href:"#locator-assertions-to-be-checked-option-checked",class:"list-anchor"},"#")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"setTimeout"),(0,r.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"locator-assertions-to-be-checked-option-timeout"})," ","<",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html",title:"double"},"double"),">"," Time to retry the assertion for.",(0,r.kt)("a",{href:"#locator-assertions-to-be-checked-option-timeout",class:"list-anchor"},"#")))),(0,r.kt)("li",{parentName:"ul"},"returns:",(0,r.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"locator-assertions-to-be-checked-return"})," ","<",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/tutorial/java/javaOO/methods.html",title:"void"},"void"),">",(0,r.kt)("a",{href:"#locator-assertions-to-be-checked-return",class:"list-anchor"},"#"))),(0,r.kt)("p",null,"Ensures the ",(0,r.kt)("a",{parentName:"p",href:"/java/docs/next/api/class-locator",title:"Locator"},"Locator")," points to a checked input."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'assertThat(page.locator(".subscribe")).isChecked();\n')),(0,r.kt)("h2",{id:"locator-assertions-to-be-disabled"},"assertThat(locator).isDisabled(","[options]",")"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"options")," ","<",(0,r.kt)("inlineCode",{parentName:"li"},"LocatorAssertions.IsDisabledOptions"),">",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"setTimeout"),(0,r.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"locator-assertions-to-be-disabled-option-timeout"})," ","<",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html",title:"double"},"double"),">"," Time to retry the assertion for.",(0,r.kt)("a",{href:"#locator-assertions-to-be-disabled-option-timeout",class:"list-anchor"},"#")))),(0,r.kt)("li",{parentName:"ul"},"returns:",(0,r.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"locator-assertions-to-be-disabled-return"})," ","<",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/tutorial/java/javaOO/methods.html",title:"void"},"void"),">",(0,r.kt)("a",{href:"#locator-assertions-to-be-disabled-return",class:"list-anchor"},"#"))),(0,r.kt)("p",null,"Ensures the ",(0,r.kt)("a",{parentName:"p",href:"/java/docs/next/api/class-locator",title:"Locator"},"Locator")," points to a disabled element."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'assertThat(page.locator("button.submit")).isDisabled();\n')),(0,r.kt)("h2",{id:"locator-assertions-to-be-editable"},"assertThat(locator).isEditable(","[options]",")"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"options")," ","<",(0,r.kt)("inlineCode",{parentName:"li"},"LocatorAssertions.IsEditableOptions"),">",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"setTimeout"),(0,r.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"locator-assertions-to-be-editable-option-timeout"})," ","<",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html",title:"double"},"double"),">"," Time to retry the assertion for.",(0,r.kt)("a",{href:"#locator-assertions-to-be-editable-option-timeout",class:"list-anchor"},"#")))),(0,r.kt)("li",{parentName:"ul"},"returns:",(0,r.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"locator-assertions-to-be-editable-return"})," ","<",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/tutorial/java/javaOO/methods.html",title:"void"},"void"),">",(0,r.kt)("a",{href:"#locator-assertions-to-be-editable-return",class:"list-anchor"},"#"))),(0,r.kt)("p",null,"Ensures the ",(0,r.kt)("a",{parentName:"p",href:"/java/docs/next/api/class-locator",title:"Locator"},"Locator")," points to an editable element."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'assertThat(page.locator("input")).isEditable();\n')),(0,r.kt)("h2",{id:"locator-assertions-to-be-empty"},"assertThat(locator).isEmpty(","[options]",")"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"options")," ","<",(0,r.kt)("inlineCode",{parentName:"li"},"LocatorAssertions.IsEmptyOptions"),">",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"setTimeout"),(0,r.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"locator-assertions-to-be-empty-option-timeout"})," ","<",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html",title:"double"},"double"),">"," Time to retry the assertion for.",(0,r.kt)("a",{href:"#locator-assertions-to-be-empty-option-timeout",class:"list-anchor"},"#")))),(0,r.kt)("li",{parentName:"ul"},"returns:",(0,r.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"locator-assertions-to-be-empty-return"})," ","<",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/tutorial/java/javaOO/methods.html",title:"void"},"void"),">",(0,r.kt)("a",{href:"#locator-assertions-to-be-empty-return",class:"list-anchor"},"#"))),(0,r.kt)("p",null,"Ensures the ",(0,r.kt)("a",{parentName:"p",href:"/java/docs/next/api/class-locator",title:"Locator"},"Locator")," points to an empty editable element or to a DOM node that has no text."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'assertThat(page.locator("div.warning")).isEmpty();\n')),(0,r.kt)("h2",{id:"locator-assertions-to-be-enabled"},"assertThat(locator).isEnabled(","[options]",")"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"options")," ","<",(0,r.kt)("inlineCode",{parentName:"li"},"LocatorAssertions.IsEnabledOptions"),">",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"setTimeout"),(0,r.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"locator-assertions-to-be-enabled-option-timeout"})," ","<",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html",title:"double"},"double"),">"," Time to retry the assertion for.",(0,r.kt)("a",{href:"#locator-assertions-to-be-enabled-option-timeout",class:"list-anchor"},"#")))),(0,r.kt)("li",{parentName:"ul"},"returns:",(0,r.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"locator-assertions-to-be-enabled-return"})," ","<",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/tutorial/java/javaOO/methods.html",title:"void"},"void"),">",(0,r.kt)("a",{href:"#locator-assertions-to-be-enabled-return",class:"list-anchor"},"#"))),(0,r.kt)("p",null,"Ensures the ",(0,r.kt)("a",{parentName:"p",href:"/java/docs/next/api/class-locator",title:"Locator"},"Locator")," points to an enabled element."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'assertThat(page.locator("button.submit")).isEnabled();\n')),(0,r.kt)("h2",{id:"locator-assertions-to-be-focused"},"assertThat(locator).isFocused(","[options]",")"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"options")," ","<",(0,r.kt)("inlineCode",{parentName:"li"},"LocatorAssertions.IsFocusedOptions"),">",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"setTimeout"),(0,r.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"locator-assertions-to-be-focused-option-timeout"})," ","<",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html",title:"double"},"double"),">"," Time to retry the assertion for.",(0,r.kt)("a",{href:"#locator-assertions-to-be-focused-option-timeout",class:"list-anchor"},"#")))),(0,r.kt)("li",{parentName:"ul"},"returns:",(0,r.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"locator-assertions-to-be-focused-return"})," ","<",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/tutorial/java/javaOO/methods.html",title:"void"},"void"),">",(0,r.kt)("a",{href:"#locator-assertions-to-be-focused-return",class:"list-anchor"},"#"))),(0,r.kt)("p",null,"Ensures the ",(0,r.kt)("a",{parentName:"p",href:"/java/docs/next/api/class-locator",title:"Locator"},"Locator")," points to a focused DOM node."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'assertThat(page.locator("input")).isFocused();\n')),(0,r.kt)("h2",{id:"locator-assertions-to-be-hidden"},"assertThat(locator).isHidden(","[options]",")"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"options")," ","<",(0,r.kt)("inlineCode",{parentName:"li"},"LocatorAssertions.IsHiddenOptions"),">",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"setTimeout"),(0,r.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"locator-assertions-to-be-hidden-option-timeout"})," ","<",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html",title:"double"},"double"),">"," Time to retry the assertion for.",(0,r.kt)("a",{href:"#locator-assertions-to-be-hidden-option-timeout",class:"list-anchor"},"#")))),(0,r.kt)("li",{parentName:"ul"},"returns:",(0,r.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"locator-assertions-to-be-hidden-return"})," ","<",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/tutorial/java/javaOO/methods.html",title:"void"},"void"),">",(0,r.kt)("a",{href:"#locator-assertions-to-be-hidden-return",class:"list-anchor"},"#"))),(0,r.kt)("p",null,"Ensures the ",(0,r.kt)("a",{parentName:"p",href:"/java/docs/next/api/class-locator",title:"Locator"},"Locator")," points to a hidden DOM node, which is the opposite of ",(0,r.kt)("a",{parentName:"p",href:"/java/docs/next/actionability#visible"},"visible"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'assertThat(page.locator(".my-element")).isHidden();\n')),(0,r.kt)("h2",{id:"locator-assertions-to-be-visible"},"assertThat(locator).isVisible(","[options]",")"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"options")," ","<",(0,r.kt)("inlineCode",{parentName:"li"},"LocatorAssertions.IsVisibleOptions"),">",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"setTimeout"),(0,r.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"locator-assertions-to-be-visible-option-timeout"})," ","<",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html",title:"double"},"double"),">"," Time to retry the assertion for.",(0,r.kt)("a",{href:"#locator-assertions-to-be-visible-option-timeout",class:"list-anchor"},"#")))),(0,r.kt)("li",{parentName:"ul"},"returns:",(0,r.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"locator-assertions-to-be-visible-return"})," ","<",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/tutorial/java/javaOO/methods.html",title:"void"},"void"),">",(0,r.kt)("a",{href:"#locator-assertions-to-be-visible-return",class:"list-anchor"},"#"))),(0,r.kt)("p",null,"Ensures the ",(0,r.kt)("a",{parentName:"p",href:"/java/docs/next/api/class-locator",title:"Locator"},"Locator")," points to a ",(0,r.kt)("a",{parentName:"p",href:"/java/docs/next/actionability#visible"},"visible")," DOM node."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'assertThat(page.locator(".my-element")).toBeVisible();\n')),(0,r.kt)("h2",{id:"locator-assertions-to-contain-text"},"assertThat(locator).containsText(expected","[, options]",")"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"expected"),(0,r.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"locator-assertions-to-contain-text-option-expected"})," ","<",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html",title:"String"},"String"),"|",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html",title:"Pattern"},"Pattern"),"|",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html",title:"String"},"String"),"[","]","|",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html",title:"Pattern"},"Pattern"),"[","]",">"," Expected substring or RegExp or a list of those.",(0,r.kt)("a",{href:"#locator-assertions-to-contain-text-option-expected",class:"list-anchor"},"#")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"options")," ","<",(0,r.kt)("inlineCode",{parentName:"li"},"LocatorAssertions.ContainsTextOptions"),">",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"setTimeout"),(0,r.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"locator-assertions-to-contain-text-option-timeout"})," ","<",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html",title:"double"},"double"),">"," Time to retry the assertion for.",(0,r.kt)("a",{href:"#locator-assertions-to-contain-text-option-timeout",class:"list-anchor"},"#")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"setUseInnerText"),(0,r.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"locator-assertions-to-contain-text-option-use-inner-text"})," ","<",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html",title:"boolean"},"boolean"),">"," Whether to use ",(0,r.kt)("inlineCode",{parentName:"li"},"element.innerText")," instead of ",(0,r.kt)("inlineCode",{parentName:"li"},"element.textContent")," when retrieving DOM node text.",(0,r.kt)("a",{href:"#locator-assertions-to-contain-text-option-use-inner-text",class:"list-anchor"},"#")))),(0,r.kt)("li",{parentName:"ul"},"returns:",(0,r.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"locator-assertions-to-contain-text-return"})," ","<",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/tutorial/java/javaOO/methods.html",title:"void"},"void"),">",(0,r.kt)("a",{href:"#locator-assertions-to-contain-text-return",class:"list-anchor"},"#"))),(0,r.kt)("p",null,"Ensures the ",(0,r.kt)("a",{parentName:"p",href:"/java/docs/next/api/class-locator",title:"Locator"},"Locator")," points to an element that contains the given text. You can use regular expressions for the value as well."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'assertThat(page.locator(".title")).containsText("substring");\n')),(0,r.kt)("p",null,"Note that if array is passed as an expected value, entire lists of elements can be asserted:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'assertThat(page.locator("list > .list-item")).containsText(new String[] {"Text 1", "Text 4", "Text 5"});\n')),(0,r.kt)("h2",{id:"locator-assertions-to-have-attribute"},"assertThat(locator).hasAttribute(name, value","[, options]",")"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"name"),(0,r.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"locator-assertions-to-have-attribute-option-name"})," ","<",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html",title:"String"},"String"),">"," Attribute name.",(0,r.kt)("a",{href:"#locator-assertions-to-have-attribute-option-name",class:"list-anchor"},"#")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"value"),(0,r.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"locator-assertions-to-have-attribute-option-value"})," ","<",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html",title:"String"},"String"),"|",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html",title:"Pattern"},"Pattern"),">"," Expected attribute value.",(0,r.kt)("a",{href:"#locator-assertions-to-have-attribute-option-value",class:"list-anchor"},"#")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"options")," ","<",(0,r.kt)("inlineCode",{parentName:"li"},"LocatorAssertions.HasAttributeOptions"),">",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"setTimeout"),(0,r.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"locator-assertions-to-have-attribute-option-timeout"})," ","<",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html",title:"double"},"double"),">"," Time to retry the assertion for.",(0,r.kt)("a",{href:"#locator-assertions-to-have-attribute-option-timeout",class:"list-anchor"},"#")))),(0,r.kt)("li",{parentName:"ul"},"returns:",(0,r.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"locator-assertions-to-have-attribute-return"})," ","<",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/tutorial/java/javaOO/methods.html",title:"void"},"void"),">",(0,r.kt)("a",{href:"#locator-assertions-to-have-attribute-return",class:"list-anchor"},"#"))),(0,r.kt)("p",null,"Ensures the ",(0,r.kt)("a",{parentName:"p",href:"/java/docs/next/api/class-locator",title:"Locator"},"Locator")," points to an element with given attribute."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'assertThat(page.locator("input")).hasAttribute("type", "text");\n')),(0,r.kt)("h2",{id:"locator-assertions-to-have-class"},"assertThat(locator).hasClass(expected","[, options]",")"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"expected"),(0,r.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"locator-assertions-to-have-class-option-expected"})," ","<",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html",title:"String"},"String"),"|",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html",title:"Pattern"},"Pattern"),"|",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html",title:"String"},"String"),"[","]","|",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html",title:"Pattern"},"Pattern"),"[","]",">"," Expected class or RegExp or a list of those.",(0,r.kt)("a",{href:"#locator-assertions-to-have-class-option-expected",class:"list-anchor"},"#")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"options")," ","<",(0,r.kt)("inlineCode",{parentName:"li"},"LocatorAssertions.HasClassOptions"),">",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"setTimeout"),(0,r.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"locator-assertions-to-have-class-option-timeout"})," ","<",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html",title:"double"},"double"),">"," Time to retry the assertion for.",(0,r.kt)("a",{href:"#locator-assertions-to-have-class-option-timeout",class:"list-anchor"},"#")))),(0,r.kt)("li",{parentName:"ul"},"returns:",(0,r.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"locator-assertions-to-have-class-return"})," ","<",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/tutorial/java/javaOO/methods.html",title:"void"},"void"),">",(0,r.kt)("a",{href:"#locator-assertions-to-have-class-return",class:"list-anchor"},"#"))),(0,r.kt)("p",null,"Ensures the ",(0,r.kt)("a",{parentName:"p",href:"/java/docs/next/api/class-locator",title:"Locator"},"Locator")," points to an element with given CSS class."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'assertThat(page.locator("#component")).hasClass(Pattern.compile("selected"));\n')),(0,r.kt)("p",null,"Note that if array is passed as an expected value, entire lists of elements can be asserted:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'assertThat(page.locator("list > .component")).hasClass(new String[] {"component", "component selected", "component"});\n')),(0,r.kt)("h2",{id:"locator-assertions-to-have-count"},"assertThat(locator).hasCount(count","[, options]",")"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"count"),(0,r.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"locator-assertions-to-have-count-option-count"})," ","<",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html",title:"int"},"int"),">"," Expected count.",(0,r.kt)("a",{href:"#locator-assertions-to-have-count-option-count",class:"list-anchor"},"#")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"options")," ","<",(0,r.kt)("inlineCode",{parentName:"li"},"LocatorAssertions.HasCountOptions"),">",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"setTimeout"),(0,r.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"locator-assertions-to-have-count-option-timeout"})," ","<",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html",title:"double"},"double"),">"," Time to retry the assertion for.",(0,r.kt)("a",{href:"#locator-assertions-to-have-count-option-timeout",class:"list-anchor"},"#")))),(0,r.kt)("li",{parentName:"ul"},"returns:",(0,r.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"locator-assertions-to-have-count-return"})," ","<",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/tutorial/java/javaOO/methods.html",title:"void"},"void"),">",(0,r.kt)("a",{href:"#locator-assertions-to-have-count-return",class:"list-anchor"},"#"))),(0,r.kt)("p",null,"Ensures the ",(0,r.kt)("a",{parentName:"p",href:"/java/docs/next/api/class-locator",title:"Locator"},"Locator")," resolves to an exact number of DOM nodes."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'assertThat(page.locator("list > .component")).hasCount(3);\n')),(0,r.kt)("h2",{id:"locator-assertions-to-have-css"},"assertThat(locator).hasCSS(name, value","[, options]",")"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"name"),(0,r.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"locator-assertions-to-have-css-option-name"})," ","<",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html",title:"String"},"String"),">"," CSS property name.",(0,r.kt)("a",{href:"#locator-assertions-to-have-css-option-name",class:"list-anchor"},"#")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"value"),(0,r.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"locator-assertions-to-have-css-option-value"})," ","<",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html",title:"String"},"String"),"|",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html",title:"Pattern"},"Pattern"),">"," CSS property value.",(0,r.kt)("a",{href:"#locator-assertions-to-have-css-option-value",class:"list-anchor"},"#")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"options")," ","<",(0,r.kt)("inlineCode",{parentName:"li"},"LocatorAssertions.HasCSSOptions"),">",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"setTimeout"),(0,r.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"locator-assertions-to-have-css-option-timeout"})," ","<",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html",title:"double"},"double"),">"," Time to retry the assertion for.",(0,r.kt)("a",{href:"#locator-assertions-to-have-css-option-timeout",class:"list-anchor"},"#")))),(0,r.kt)("li",{parentName:"ul"},"returns:",(0,r.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"locator-assertions-to-have-css-return"})," ","<",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/tutorial/java/javaOO/methods.html",title:"void"},"void"),">",(0,r.kt)("a",{href:"#locator-assertions-to-have-css-return",class:"list-anchor"},"#"))),(0,r.kt)("p",null,"Ensures the ",(0,r.kt)("a",{parentName:"p",href:"/java/docs/next/api/class-locator",title:"Locator"},"Locator")," resolves to an element with the given computed CSS style."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'assertThat(page.locator("button")).hasCSS("display", "flex");\n')),(0,r.kt)("h2",{id:"locator-assertions-to-have-id"},"assertThat(locator).hasId(id","[, options]",")"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"id"),(0,r.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"locator-assertions-to-have-id-option-id"})," ","<",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html",title:"String"},"String"),"|",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html",title:"Pattern"},"Pattern"),">"," Element id.",(0,r.kt)("a",{href:"#locator-assertions-to-have-id-option-id",class:"list-anchor"},"#")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"options")," ","<",(0,r.kt)("inlineCode",{parentName:"li"},"LocatorAssertions.HasIdOptions"),">",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"setTimeout"),(0,r.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"locator-assertions-to-have-id-option-timeout"})," ","<",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html",title:"double"},"double"),">"," Time to retry the assertion for.",(0,r.kt)("a",{href:"#locator-assertions-to-have-id-option-timeout",class:"list-anchor"},"#")))),(0,r.kt)("li",{parentName:"ul"},"returns:",(0,r.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"locator-assertions-to-have-id-return"})," ","<",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/tutorial/java/javaOO/methods.html",title:"void"},"void"),">",(0,r.kt)("a",{href:"#locator-assertions-to-have-id-return",class:"list-anchor"},"#"))),(0,r.kt)("p",null,"Ensures the ",(0,r.kt)("a",{parentName:"p",href:"/java/docs/next/api/class-locator",title:"Locator"},"Locator")," points to an element with the given DOM Node ID."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'assertThat(page.locator("input")).hasId("lastname");\n')),(0,r.kt)("h2",{id:"locator-assertions-to-have-js-property"},"assertThat(locator).hasJSProperty(name, value","[, options]",")"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"name"),(0,r.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"locator-assertions-to-have-js-property-option-name"})," ","<",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html",title:"String"},"String"),">"," Property name.",(0,r.kt)("a",{href:"#locator-assertions-to-have-js-property-option-name",class:"list-anchor"},"#")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"value"),(0,r.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"locator-assertions-to-have-js-property-option-value"})," ","<",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html",title:"Object"},"Object"),">"," Property value.",(0,r.kt)("a",{href:"#locator-assertions-to-have-js-property-option-value",class:"list-anchor"},"#")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"options")," ","<",(0,r.kt)("inlineCode",{parentName:"li"},"LocatorAssertions.HasJSPropertyOptions"),">",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"setTimeout"),(0,r.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"locator-assertions-to-have-js-property-option-timeout"})," ","<",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html",title:"double"},"double"),">"," Time to retry the assertion for.",(0,r.kt)("a",{href:"#locator-assertions-to-have-js-property-option-timeout",class:"list-anchor"},"#")))),(0,r.kt)("li",{parentName:"ul"},"returns:",(0,r.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"locator-assertions-to-have-js-property-return"})," ","<",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/tutorial/java/javaOO/methods.html",title:"void"},"void"),">",(0,r.kt)("a",{href:"#locator-assertions-to-have-js-property-return",class:"list-anchor"},"#"))),(0,r.kt)("p",null,"Ensures the ",(0,r.kt)("a",{parentName:"p",href:"/java/docs/next/api/class-locator",title:"Locator"},"Locator")," points to an element with given JavaScript property. Note that this property can be of a primitive type as well as a plain serializable JavaScript object."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'assertThat(page.locator("input")).hasJSProperty("loaded", true);\n')),(0,r.kt)("h2",{id:"locator-assertions-to-have-text"},"assertThat(locator).hasText(expected","[, options]",")"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"expected"),(0,r.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"locator-assertions-to-have-text-option-expected"})," ","<",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html",title:"String"},"String"),"|",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html",title:"Pattern"},"Pattern"),"|",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html",title:"String"},"String"),"[","]","|",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html",title:"Pattern"},"Pattern"),"[","]",">"," Expected substring or RegExp or a list of those.",(0,r.kt)("a",{href:"#locator-assertions-to-have-text-option-expected",class:"list-anchor"},"#")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"options")," ","<",(0,r.kt)("inlineCode",{parentName:"li"},"LocatorAssertions.HasTextOptions"),">",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"setTimeout"),(0,r.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"locator-assertions-to-have-text-option-timeout"})," ","<",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html",title:"double"},"double"),">"," Time to retry the assertion for.",(0,r.kt)("a",{href:"#locator-assertions-to-have-text-option-timeout",class:"list-anchor"},"#")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"setUseInnerText"),(0,r.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"locator-assertions-to-have-text-option-use-inner-text"})," ","<",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html",title:"boolean"},"boolean"),">"," Whether to use ",(0,r.kt)("inlineCode",{parentName:"li"},"element.innerText")," instead of ",(0,r.kt)("inlineCode",{parentName:"li"},"element.textContent")," when retrieving DOM node text.",(0,r.kt)("a",{href:"#locator-assertions-to-have-text-option-use-inner-text",class:"list-anchor"},"#")))),(0,r.kt)("li",{parentName:"ul"},"returns:",(0,r.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"locator-assertions-to-have-text-return"})," ","<",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/tutorial/java/javaOO/methods.html",title:"void"},"void"),">",(0,r.kt)("a",{href:"#locator-assertions-to-have-text-return",class:"list-anchor"},"#"))),(0,r.kt)("p",null,"Ensures the ",(0,r.kt)("a",{parentName:"p",href:"/java/docs/next/api/class-locator",title:"Locator"},"Locator")," points to an element with the given text. You can use regular expressions for the value as well."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'assertThat(page.locator(".title")).hasText("Welcome, Test User");\nassertThat(page.locator(".title")).hasText(Pattern.compile("Welcome, .*"));\n')),(0,r.kt)("p",null,"Note that if array is passed as an expected value, entire lists of elements can be asserted:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'assertThat(page.locator("list > .component")).hasText(new String[] {"Text 1", "Text 2", "Text 3"});\n')),(0,r.kt)("h2",{id:"locator-assertions-to-have-value"},"assertThat(locator).hasValue(value","[, options]",")"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"value"),(0,r.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"locator-assertions-to-have-value-option-value"})," ","<",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html",title:"String"},"String"),"|",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html",title:"Pattern"},"Pattern"),">"," Expected value.",(0,r.kt)("a",{href:"#locator-assertions-to-have-value-option-value",class:"list-anchor"},"#")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"options")," ","<",(0,r.kt)("inlineCode",{parentName:"li"},"LocatorAssertions.HasValueOptions"),">",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"setTimeout"),(0,r.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"locator-assertions-to-have-value-option-timeout"})," ","<",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html",title:"double"},"double"),">"," Time to retry the assertion for.",(0,r.kt)("a",{href:"#locator-assertions-to-have-value-option-timeout",class:"list-anchor"},"#")))),(0,r.kt)("li",{parentName:"ul"},"returns:",(0,r.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"locator-assertions-to-have-value-return"})," ","<",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/tutorial/java/javaOO/methods.html",title:"void"},"void"),">",(0,r.kt)("a",{href:"#locator-assertions-to-have-value-return",class:"list-anchor"},"#"))),(0,r.kt)("p",null,"Ensures the ",(0,r.kt)("a",{parentName:"p",href:"/java/docs/next/api/class-locator",title:"Locator"},"Locator")," points to an element with the given input value. You can use regular expressions for the value as well."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'assertThat(page.locator("input[type=number]")).hasValue(Pattern.compile("[0-9]"));\n')),(0,r.kt)("h2",{id:"page-assertions-not"},"assertThat(page).not()"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"returns: ","<",(0,r.kt)("a",{parentName:"li",href:"/java/docs/next/test-assertions",title:"PageAssertions"},"PageAssertions"),">")),(0,r.kt)("p",null,"Makes the assertion check for the opposite condition. For example, this code tests that the page URL doesn't contain ",(0,r.kt)("inlineCode",{parentName:"p"},'"error"'),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'assertThat(page).not().hasURL("error");\n')),(0,r.kt)("h2",{id:"page-assertions-to-have-title"},"assertThat(page).hasTitle(titleOrRegExp","[, options]",")"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"titleOrRegExp"),(0,r.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"page-assertions-to-have-title-option-title-or-reg-exp"})," ","<",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html",title:"String"},"String"),"|",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html",title:"Pattern"},"Pattern"),">"," Expected title or RegExp.",(0,r.kt)("a",{href:"#page-assertions-to-have-title-option-title-or-reg-exp",class:"list-anchor"},"#")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"options")," ","<",(0,r.kt)("inlineCode",{parentName:"li"},"PageAssertions.HasTitleOptions"),">",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"setTimeout"),(0,r.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"page-assertions-to-have-title-option-timeout"})," ","<",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html",title:"double"},"double"),">"," Time to retry the assertion for.",(0,r.kt)("a",{href:"#page-assertions-to-have-title-option-timeout",class:"list-anchor"},"#")))),(0,r.kt)("li",{parentName:"ul"},"returns:",(0,r.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"page-assertions-to-have-title-return"})," ","<",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/tutorial/java/javaOO/methods.html",title:"void"},"void"),">",(0,r.kt)("a",{href:"#page-assertions-to-have-title-return",class:"list-anchor"},"#"))),(0,r.kt)("p",null,"Ensures the page has the given title."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'assertThat(page).hasTitle("Playwright");\n')),(0,r.kt)("h2",{id:"page-assertions-to-have-url"},"assertThat(page).hasURL(urlOrRegExp","[, options]",")"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"urlOrRegExp"),(0,r.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"page-assertions-to-have-url-option-url-or-reg-exp"})," ","<",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html",title:"String"},"String"),"|",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html",title:"Pattern"},"Pattern"),">"," Expected substring or RegExp.",(0,r.kt)("a",{href:"#page-assertions-to-have-url-option-url-or-reg-exp",class:"list-anchor"},"#")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"options")," ","<",(0,r.kt)("inlineCode",{parentName:"li"},"PageAssertions.HasURLOptions"),">",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"setTimeout"),(0,r.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"page-assertions-to-have-url-option-timeout"})," ","<",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html",title:"double"},"double"),">"," Time to retry the assertion for.",(0,r.kt)("a",{href:"#page-assertions-to-have-url-option-timeout",class:"list-anchor"},"#")))),(0,r.kt)("li",{parentName:"ul"},"returns:",(0,r.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"page-assertions-to-have-url-return"})," ","<",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/tutorial/java/javaOO/methods.html",title:"void"},"void"),">",(0,r.kt)("a",{href:"#page-assertions-to-have-url-return",class:"list-anchor"},"#"))),(0,r.kt)("p",null,"Ensures the page is navigated to the given URL."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'assertThat(page).hasURL(".com");\n')),(0,r.kt)("h2",{id:"api-response-assertions-not"},"assertThat(apiResponse).not()"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"returns: ","<",(0,r.kt)("a",{parentName:"li",href:"/java/docs/next/test-assertions",title:"APIResponseAssertions"},"APIResponseAssertions"),">")),(0,r.kt)("p",null,"Makes the assertion check for the opposite condition. For example, this code tests that the response status is not successful:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"assertThat(response).not().isOK();\n")),(0,r.kt)("h2",{id:"api-response-assertions-to-be-ok"},"assertThat(apiResponse).isOK()"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"returns:",(0,r.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"api-response-assertions-to-be-ok-return"})," ","<",(0,r.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/tutorial/java/javaOO/methods.html",title:"void"},"void"),">",(0,r.kt)("a",{href:"#api-response-assertions-to-be-ok-return",class:"list-anchor"},"#"))),(0,r.kt)("p",null,"Ensures the response status code is within ","[200..299]"," range."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"assertThat(response).isOK();\n")))}d.isMDXComponent=!0}}]);
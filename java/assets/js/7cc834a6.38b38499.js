"use strict";(self.webpackChunkplaywright_dev=self.webpackChunkplaywright_dev||[]).push([[3852],{9186:function(s,e,t){t.r(e),t.d(e,{frontMatter:function(){return i},contentTitle:function(){return p},metadata:function(){return l},toc:function(){return c},default:function(){return h}});var a=t(7462),n=t(3366),o=(t(7294),t(3905)),r=(t(6396),t(8215),["components"]),i={id:"class-apiresponseassertions",title:"APIResponseAssertions"},p=void 0,l={unversionedId:"api/class-apiresponseassertions",id:"version-1.18/api/class-apiresponseassertions",isDocsHomePage:!1,title:"APIResponseAssertions",description:"The APIResponseAssertions] class provides assertion methods that can be used to make assertions about the [APIResponse] in the tests. A new instance of [APIResponseAssertions] is created by calling [PlaywrightAssertions.assertThat(response):",source:"@site/versioned_docs/version-1.18/api/class-apiresponseassertions.mdx",sourceDirName:"api",slug:"/api/class-apiresponseassertions",permalink:"/java/docs/api/class-apiresponseassertions",tags:[],version:"1.18",frontMatter:{id:"class-apiresponseassertions",title:"APIResponseAssertions"}},c=[{value:"APIResponseAssertions.isOK()",id:"api-response-assertions-to-be-ok",children:[],level:2},{value:"APIResponseAssertions.not()",id:"api-response-assertions-not",children:[],level:2}],u={toc:c};function h(s){var e=s.components,t=(0,n.Z)(s,r);return(0,o.kt)("wrapper",(0,a.Z)({},u,t,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The ",(0,o.kt)("a",{parentName:"p",href:"/java/docs/api/class-apiresponseassertions",title:"APIResponseAssertions"},"APIResponseAssertions")," class provides assertion methods that can be used to make assertions about the ",(0,o.kt)("a",{parentName:"p",href:"/java/docs/api/class-apiresponse",title:"APIResponse"},"APIResponse")," in the tests. A new instance of ",(0,o.kt)("a",{parentName:"p",href:"/java/docs/api/class-apiresponseassertions",title:"APIResponseAssertions"},"APIResponseAssertions")," is created by calling ",(0,o.kt)("a",{parentName:"p",href:"/java/docs/api/class-playwrightassertions#playwright-assertions-expect-api-response"},"PlaywrightAssertions.assertThat(response)"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"...\nimport static com.microsoft.playwright.assertions.PlaywrightAssertions.assertThat;\n\npublic class TestPage {\n  ...\n  @Test\n  void navigatesToLoginPage() {\n    ...\n    APIResponse response = page.request().get('https://playwright.dev');\n    assertThat(response).isOK();\n  }\n}\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/java/docs/api/class-apiresponseassertions#api-response-assertions-to-be-ok"},"APIResponseAssertions.isOK()")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/java/docs/api/class-apiresponseassertions#api-response-assertions-not"},"APIResponseAssertions.not()"))),(0,o.kt)("h2",{id:"api-response-assertions-to-be-ok"},"APIResponseAssertions.isOK()"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"returns:",(0,o.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"api-response-assertions-to-be-ok-return"})," ","<",(0,o.kt)("a",{parentName:"li",href:"https://docs.oracle.com/javase/tutorial/java/javaOO/methods.html",title:"void"},"void"),">",(0,o.kt)("a",{href:"#api-response-assertions-to-be-ok-return",class:"list-anchor"},"#"))),(0,o.kt)("p",null,"Ensures the response status code is within ","[200..299]"," range."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"assertThat(response).isOK();\n")),(0,o.kt)("h2",{id:"api-response-assertions-not"},"APIResponseAssertions.not()"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"returns:",(0,o.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"api-response-assertions-not-return"})," ","<",(0,o.kt)("a",{parentName:"li",href:"/java/docs/api/class-apiresponseassertions",title:"APIResponseAssertions"},"APIResponseAssertions"),">",(0,o.kt)("a",{href:"#api-response-assertions-not-return",class:"list-anchor"},"#"))),(0,o.kt)("p",null,"Makes the assertion check for the opposite condition. For example, this code tests that the response status is not successfull:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"assertThat(response).not().isOK();\n")))}h.isMDXComponent=!0}}]);
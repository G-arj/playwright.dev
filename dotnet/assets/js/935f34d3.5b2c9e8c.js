(self.webpackChunkplaywright_dev=self.webpackChunkplaywright_dev||[]).push([[6472],{3905:function(e,t,a){"use strict";a.d(t,{Zo:function(){return p},kt:function(){return g}});var n=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var s=n.createContext({}),c=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(a),g=i,f=u["".concat(s,".").concat(g)]||u[g]||d[g]||r;return a?n.createElement(f,o(o({ref:t},p),{},{components:a})):n.createElement(f,o({ref:t},p))}));function g(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,o=new Array(r);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var c=2;c<r;c++)o[c]=a[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},8215:function(e,t,a){"use strict";a(7294)},1395:function(e,t,a){"use strict";a(7294),a(944)},9443:function(e,t,a){"use strict";var n=(0,a(7294).createContext)(void 0);t.Z=n},944:function(e,t,a){"use strict";var n=a(7294),i=a(9443);t.Z=function(){var e=(0,n.useContext)(i.Z);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},2537:function(e,t,a){"use strict";a.r(t),a.d(t,{frontMatter:function(){return o},metadata:function(){return l},toc:function(){return s},default:function(){return p}});var n=a(2122),i=a(9756),r=(a(7294),a(3905)),o=(a(1395),a(8215),{id:"navigations",title:"Navigations"}),l={unversionedId:"navigations",id:"navigations",isDocsHomePage:!1,title:"Navigations",description:"Playwright can navigate to URLs and handle navigations caused by page interactions. This guide covers common scenarios to wait for page navigations and loading to complete.",source:"@site/docs/navigations.mdx",sourceDirName:".",slug:"/navigations",permalink:"/dotnet/docs/navigations",version:"current",frontMatter:{id:"navigations",title:"Navigations"},sidebar:"docs",previous:{title:"Multi-page scenarios",permalink:"/dotnet/docs/multi-pages"},next:{title:"Network",permalink:"/dotnet/docs/network"}},s=[{value:"Navigation lifecycle",id:"navigation-lifecycle",children:[]},{value:"Scenarios initiated by browser UI",id:"scenarios-initiated-by-browser-ui",children:[{value:"Auto-wait",id:"auto-wait",children:[]},{value:"Custom wait",id:"custom-wait",children:[]},{value:"Wait for element",id:"wait-for-element",children:[]},{value:"API reference",id:"api-reference",children:[]}]},{value:"Scenarios initiated by page interaction",id:"scenarios-initiated-by-page-interaction",children:[{value:"Auto-wait",id:"auto-wait-1",children:[]},{value:"Custom wait",id:"custom-wait-1",children:[]},{value:"Wait for element",id:"wait-for-element-1",children:[]},{value:"Asynchronous navigation",id:"asynchronous-navigation",children:[]},{value:"Multiple navigations",id:"multiple-navigations",children:[]},{value:"Loading a popup",id:"loading-a-popup",children:[]},{value:"API reference",id:"api-reference-1",children:[]}]},{value:"Advanced patterns",id:"advanced-patterns",children:[{value:"API reference",id:"api-reference-2",children:[]}]}],c={toc:s};function p(e){var t=e.components,a=(0,i.Z)(e,["components"]);return(0,r.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Playwright can navigate to URLs and handle navigations caused by page interactions. This guide covers common scenarios to wait for page navigations and loading to complete."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#navigation-lifecycle"},"Navigation lifecycle")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#scenarios-initiated-by-browser-ui"},"Scenarios initiated by browser UI")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#scenarios-initiated-by-page-interaction"},"Scenarios initiated by page interaction")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#advanced-patterns"},"Advanced patterns"))),(0,r.kt)("h2",{id:"navigation-lifecycle"},"Navigation lifecycle"),(0,r.kt)("p",null,"Playwright splits the process of showing a new document in a page into ",(0,r.kt)("strong",{parentName:"p"},"navigation")," and ",(0,r.kt)("strong",{parentName:"p"},"loading"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Navigations")," can be initiated by changing the page URL or by interacting with the page (e.g., clicking a link). Navigation ends when response headers have been parsed and session history is updated. The navigation intent may be canceled, for example, on hitting an unresolved DNS address or transformed into a file download. Only after the navigation succeeds, page starts ",(0,r.kt)("strong",{parentName:"p"},"loading")," the document."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Loading")," covers getting the remaining response body over the network, parsing, executing the scripts and firing load events:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/dotnet/docs/api/class-page#pageurl"},"Page.Url")," is set to the new url"),(0,r.kt)("li",{parentName:"ul"},"document content is loaded over network and parsed"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/dotnet/docs/api/class-page#eventpagedomcontentloaded"},"event Page.DOMContentLoaded")," event is fired"),(0,r.kt)("li",{parentName:"ul"},"page executes some scripts and loads resources like stylesheets and images"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/dotnet/docs/api/class-page#eventpageload"},"event Page.Load")," event is fired"),(0,r.kt)("li",{parentName:"ul"},"page executes dynamically loaded scripts"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"networkidle")," is fired when no new network requests are made for 500 ms")),(0,r.kt)("h2",{id:"scenarios-initiated-by-browser-ui"},"Scenarios initiated by browser UI"),(0,r.kt)("p",null,"Navigations can be initiated by changing the URL bar, reloading the page or going back or forward in session history."),(0,r.kt)("h3",{id:"auto-wait"},"Auto-wait"),(0,r.kt)("p",null,"Navigating to a URL auto-waits for the page to fire the ",(0,r.kt)("inlineCode",{parentName:"p"},"load")," event. If the page does a client-side redirect before ",(0,r.kt)("inlineCode",{parentName:"p"},"load"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"page.goto")," will auto-wait for the redirected page to fire the ",(0,r.kt)("inlineCode",{parentName:"p"},"load")," event."),(0,r.kt)("h3",{id:"custom-wait"},"Custom wait"),(0,r.kt)("p",null,"Override the default behavior to wait until a specific event, like ",(0,r.kt)("inlineCode",{parentName:"p"},"networkidle"),"."),(0,r.kt)("h3",{id:"wait-for-element"},"Wait for element"),(0,r.kt)("p",null,"In lazy-loaded pages, it can be useful to wait until an element is visible with ",(0,r.kt)("a",{parentName:"p",href:"/dotnet/docs/api/class-page#pagewaitforselectorasyncselector-"},"Page.WaitForSelectorAsync(selector, \u2026)"),". Alternatively, page interactions like ",(0,r.kt)("a",{parentName:"p",href:"/dotnet/docs/api/class-page#pageclickasyncselector-"},"Page.ClickAsync(selector, \u2026)")," auto-wait for elements."),(0,r.kt)("h3",{id:"api-reference"},"API reference"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/dotnet/docs/api/class-page#pagegotoasyncurl-"},"Page.GotoAsync(url, \u2026)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/dotnet/docs/api/class-page#pagereloadasync"},"Page.ReloadAsync(\u2026)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/dotnet/docs/api/class-page#pagegobackasync"},"Page.GoBackAsync(\u2026)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/dotnet/docs/api/class-page#pagegoforwardasync"},"Page.GoForwardAsync(\u2026)"))),(0,r.kt)("h2",{id:"scenarios-initiated-by-page-interaction"},"Scenarios initiated by page interaction"),(0,r.kt)("p",null,"In the scenarios below, ",(0,r.kt)("a",{parentName:"p",href:"/dotnet/docs/api/class-page#pageclickasyncselector-"},"Page.ClickAsync(selector, \u2026)")," initiates a navigation and then waits for the navigation to complete."),(0,r.kt)("h3",{id:"auto-wait-1"},"Auto-wait"),(0,r.kt)("p",null,"By default, ",(0,r.kt)("a",{parentName:"p",href:"/dotnet/docs/api/class-page#pageclickasyncselector-"},"Page.ClickAsync(selector, \u2026)")," will wait for the navigation step to complete. This can be combined with a page interaction on the navigated page which would auto-wait for an element."),(0,r.kt)("h3",{id:"custom-wait-1"},"Custom wait"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"page.click")," can be combined with ",(0,r.kt)("a",{parentName:"p",href:"/dotnet/docs/api/class-page#pagewaitforloadstateasync"},"Page.WaitForLoadStateAsync(\u2026)")," to wait for a loading event."),(0,r.kt)("h3",{id:"wait-for-element-1"},"Wait for element"),(0,r.kt)("p",null,"In lazy-loaded pages, it can be useful to wait until an element is visible with ",(0,r.kt)("a",{parentName:"p",href:"/dotnet/docs/api/class-page#pagewaitforselectorasyncselector-"},"Page.WaitForSelectorAsync(selector, \u2026)"),". Alternatively, page interactions like ",(0,r.kt)("a",{parentName:"p",href:"/dotnet/docs/api/class-page#pageclickasyncselector-"},"Page.ClickAsync(selector, \u2026)")," auto-wait for elements."),(0,r.kt)("h3",{id:"asynchronous-navigation"},"Asynchronous navigation"),(0,r.kt)("p",null,"Clicking an element could trigger asynchronous processing before initiating the navigation. In these cases, it is recommended to explicitly call ",(0,r.kt)("a",{parentName:"p",href:"/dotnet/docs/api/class-page#pagewaitfornavigationasync"},"Page.WaitForNavigationAsync(\u2026)"),". For example:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Navigation is triggered from a ",(0,r.kt)("inlineCode",{parentName:"li"},"setTimeout")),(0,r.kt)("li",{parentName:"ul"},"Page waits for network requests before navigation")),(0,r.kt)("h3",{id:"multiple-navigations"},"Multiple navigations"),(0,r.kt)("p",null,"Clicking an element could trigger multiple navigations. In these cases, it is recommended to explicitly ",(0,r.kt)("a",{parentName:"p",href:"/dotnet/docs/api/class-page#pagewaitfornavigationasync"},"Page.WaitForNavigationAsync(\u2026)")," to a specific url. For example:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Client-side redirects issued after the ",(0,r.kt)("inlineCode",{parentName:"li"},"load")," event"),(0,r.kt)("li",{parentName:"ul"},"Multiple pushes to history state")),(0,r.kt)("h3",{id:"loading-a-popup"},"Loading a popup"),(0,r.kt)("p",null,"When popup is opened, explicitly calling ",(0,r.kt)("a",{parentName:"p",href:"/dotnet/docs/api/class-page#pagewaitforloadstateasync"},"Page.WaitForLoadStateAsync(\u2026)")," ensures that popup is loaded to the desired state."),(0,r.kt)("h3",{id:"api-reference-1"},"API reference"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/dotnet/docs/api/class-page#pageclickasyncselector-"},"Page.ClickAsync(selector, \u2026)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/dotnet/docs/api/class-page#pagewaitforloadstateasync"},"Page.WaitForLoadStateAsync(\u2026)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/dotnet/docs/api/class-page#pagewaitforselectorasyncselector-"},"Page.WaitForSelectorAsync(selector, \u2026)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/dotnet/docs/api/class-page#pagewaitfornavigationasync"},"Page.WaitForNavigationAsync(\u2026)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/dotnet/docs/api/class-page#pagewaitforfunctionasyncexpression-"},"Page.WaitForFunctionAsync(expression, \u2026)"))),(0,r.kt)("h2",{id:"advanced-patterns"},"Advanced patterns"),(0,r.kt)("p",null,"For pages that have complicated loading patterns, ",(0,r.kt)("a",{parentName:"p",href:"/dotnet/docs/api/class-page#pagewaitforfunctionasyncexpression-"},"Page.WaitForFunctionAsync(expression, \u2026)")," is a powerful and extensible approach to define a custom wait criteria."),(0,r.kt)("h3",{id:"api-reference-2"},"API reference"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/dotnet/docs/api/class-page#pagewaitforfunctionasyncexpression-"},"Page.WaitForFunctionAsync(expression, \u2026)"))))}p.isMDXComponent=!0}}]);
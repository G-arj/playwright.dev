(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{107:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return l})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return b}));var r=n(3),i=n(7),a=(n(0),n(163)),o=(n(166),n(167),{id:"test-cli",title:"Advanced: command line"}),l={unversionedId:"test-cli",id:"test-cli",isDocsHomePage:!1,title:"Advanced: command line",description:"`sh",source:"@site/docs/test-cli.mdx",slug:"/test-cli",permalink:"/dotnet/docs/test-cli",version:"current"},c=[],s={toc:c};function b(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-sh"}),"# Ask for help!\nnpx playwright test --help\n")),Object(a.b)("p",null,"Arguments passed to ",Object(a.b)("inlineCode",{parentName:"p"},"npx playwright test")," are treated as a filter for test files. For example, ",Object(a.b)("inlineCode",{parentName:"p"},"npx playwright test my-spec")," will only run tests from files with ",Object(a.b)("inlineCode",{parentName:"p"},"my-spec")," in the name."),Object(a.b)("p",null,"All the options are available in the ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"/dotnet/docs/test-advanced"}),"configuration file"),". However, selected options can be passed to a command line and take a priority over the configuration file."),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"--headed"),": Run tests in headed browsers. Useful for debugging."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"--browser"),": Run test in a specific browser. Available options are  ",Object(a.b)("inlineCode",{parentName:"li"},'"chromium"'),", ",Object(a.b)("inlineCode",{parentName:"li"},'"firefox"'),", ",Object(a.b)("inlineCode",{parentName:"li"},'"webkit"')," or ",Object(a.b)("inlineCode",{parentName:"li"},'"all"')," to run tests in all three browsers at the same time."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"-c <file>")," or ",Object(a.b)("inlineCode",{parentName:"li"},"--config <file>"),": Configuration file. If not passed, defaults to ",Object(a.b)("inlineCode",{parentName:"li"},"playwright.config.ts")," or ",Object(a.b)("inlineCode",{parentName:"li"},"playwright.config.js")," in the current directory."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"-c <dir>")," or ",Object(a.b)("inlineCode",{parentName:"li"},"--config <dir>"),": Directory with the tests to run without configuration file."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"--forbid-only"),": Whether to disallow ",Object(a.b)("inlineCode",{parentName:"li"},"test.only"),". Useful on CI."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"-g <grep>")," or ",Object(a.b)("inlineCode",{parentName:"li"},"--grep <grep>"),": Only run tests matching this regular expression. For example, this will run ",Object(a.b)("inlineCode",{parentName:"li"},"'should add to cart'")," when passed ",Object(a.b)("inlineCode",{parentName:"li"},'-g="add to cart"'),"."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"--global-timeout <number>"),": Total timeout for the whole test run in milliseconds. By default, there is no global timeout."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"--list"),": List all the tests, but do not run them."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"--max-failures <N>")," or ",Object(a.b)("inlineCode",{parentName:"li"},"-x"),": Stop after the first ",Object(a.b)("inlineCode",{parentName:"li"},"N")," test failures. Passing ",Object(a.b)("inlineCode",{parentName:"li"},"-x")," stops after the first failure."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"--output <dir>"),": Directory for artifacts produced by tests, defaults to ",Object(a.b)("inlineCode",{parentName:"li"},"test-results"),"."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"--project <name>"),": Only run tests from one of the specified ",Object(a.b)("a",Object(r.a)({parentName:"li"},{href:"/dotnet/docs/test-advanced#projects"}),"projects"),". Defaults to running all projects defined in the configuration file."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"--quiet"),": Whether to suppress stdout and stderr from the tests."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"--repeat-each <N>"),": Run each test ",Object(a.b)("inlineCode",{parentName:"li"},"N")," times, defaults to one."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"--reporter <reporter>"),": Choose a reporter: minimalist ",Object(a.b)("inlineCode",{parentName:"li"},"dot"),", concise ",Object(a.b)("inlineCode",{parentName:"li"},"line")," or detailed ",Object(a.b)("inlineCode",{parentName:"li"},"list"),". See ",Object(a.b)("a",Object(r.a)({parentName:"li"},{href:"/dotnet/docs/test-reporters"}),"reporters")," for more information."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"--retries <number>"),": The maximum number of ",Object(a.b)("a",Object(r.a)({parentName:"li"},{href:"/dotnet/docs/test-retries"}),"retries")," for flaky tests, defaults to zero (no retries)."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"--shard <shard>"),": ",Object(a.b)("a",Object(r.a)({parentName:"li"},{href:"/dotnet/docs/test-parallel#shards"}),"Shard")," tests and execute only selected shard, specified in the form ",Object(a.b)("inlineCode",{parentName:"li"},"current/all"),", 1-based, for example ",Object(a.b)("inlineCode",{parentName:"li"},"3/5"),"."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"--timeout <number>"),": Maximum timeout in milliseconds for each test, defaults to 30 seconds."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"--update-snapshots")," or ",Object(a.b)("inlineCode",{parentName:"li"},"-u"),": Whether to update ",Object(a.b)("a",Object(r.a)({parentName:"li"},{href:"/dotnet/docs/test-snapshots"}),"snapshots")," with actual results instead of comparing them. Use this when snapshot expectations have changed."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"--workers <number>")," or ",Object(a.b)("inlineCode",{parentName:"li"},"-j <number>"),": The maximum number of concurrent worker processes that run in ",Object(a.b)("a",Object(r.a)({parentName:"li"},{href:"/dotnet/docs/test-parallel"}),"parallel"),".")))}b.isMDXComponent=!0},162:function(e,t,n){"use strict";function r(e){var t,n,i="";if("string"==typeof e||"number"==typeof e)i+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=r(e[t]))&&(i&&(i+=" "),i+=n);else for(t in e)e[t]&&(i&&(i+=" "),i+=t);return i}t.a=function(){for(var e,t,n=0,i="";n<arguments.length;)(e=arguments[n++])&&(t=r(e))&&(i&&(i+=" "),i+=t);return i}},163:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return m}));var r=n(0),i=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=i.a.createContext({}),b=function(e){var t=i.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=b(e.components);return i.a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},d=i.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,o=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=b(n),d=r,m=p["".concat(o,".").concat(d)]||p[d]||u[d]||a;return n?i.a.createElement(m,l(l({ref:t},s),{},{components:n})):i.a.createElement(m,l({ref:t},s))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var s=2;s<a;s++)o[s]=n[s];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},164:function(e,t,n){"use strict";var r=n(0),i=n(165);t.a=function(){var e=Object(r.useContext)(i.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},165:function(e,t,n){"use strict";var r=n(0),i=Object(r.createContext)(void 0);t.a=i},166:function(e,t,n){"use strict";n(0),n(164),n(162),n(53)},167:function(e,t,n){"use strict";n(3),n(0)}}]);
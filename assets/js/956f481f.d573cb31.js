"use strict";(self.webpackChunkplaywright_dev=self.webpackChunkplaywright_dev||[]).push([[37461],{72250:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return p},contentTitle:function(){return d},metadata:function(){return u},toc:function(){return c},default:function(){return k}});var s=r(87462),a=r(63366),n=(r(67294),r(3905)),o=r(26396),i=r(58215),l=["components"],p={id:"class-reporter",title:"Reporter"},d=void 0,u={unversionedId:"api/class-reporter",id:"version-1.17/api/class-reporter",isDocsHomePage:!1,title:"Reporter",description:"Test runner notifies the reporter about various events during test execution. All methods of the reporter are optional.",source:"@site/versioned_docs/version-1.17/api/class-reporter.mdx",sourceDirName:"api",slug:"/api/class-reporter",permalink:"/docs/api/class-reporter",tags:[],version:"1.17",frontMatter:{id:"class-reporter",title:"Reporter"},sidebar:"version-1.17/api",previous:{title:"Location",permalink:"/docs/api/class-location"},next:{title:"Suite",permalink:"/docs/api/class-suite"}},c=[{value:"reporter.onBegin(config, suite)",id:"reporter-on-begin",children:[],level:2},{value:"reporter.onEnd(result)",id:"reporter-on-end",children:[],level:2},{value:"reporter.onError(error)",id:"reporter-on-error",children:[],level:2},{value:"reporter.onStdErr(chunk, test, result)",id:"reporter-on-std-err",children:[],level:2},{value:"reporter.onStdOut(chunk, test, result)",id:"reporter-on-std-out",children:[],level:2},{value:"reporter.onStepBegin(test, result, step)",id:"reporter-on-step-begin",children:[],level:2},{value:"reporter.onStepEnd(test, result, step)",id:"reporter-on-step-end",children:[],level:2},{value:"reporter.onTestBegin(test, result)",id:"reporter-on-test-begin",children:[],level:2},{value:"reporter.onTestEnd(test, result)",id:"reporter-on-test-end",children:[],level:2},{value:"reporter.printsToStdio()",id:"reporter-prints-to-stdio",children:[],level:2}],h={toc:c};function k(e){var t=e.components,r=(0,a.Z)(e,l);return(0,n.kt)("wrapper",(0,s.Z)({},h,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Test runner notifies the reporter about various events during test execution. All methods of the reporter are optional."),(0,n.kt)("p",null,"You can create a custom reporter by implementing a class with some of the reporter methods. Make sure to export this class as default."),(0,n.kt)(o.Z,{groupId:"js-flavor",defaultValue:"ts",values:[{label:"TypeScript",value:"ts"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},(0,n.kt)(i.Z,{value:"ts",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"// my-awesome-reporter.ts\nimport { Reporter } from '@playwright/test/reporter';\n\nclass MyReporter implements Reporter {\n  onBegin(config, suite) {\n    console.log(`Starting the run with ${suite.allTests().length} tests`);\n  }\n\n  onTestBegin(test) {\n    console.log(`Starting test ${test.title}`);\n  }\n\n  onTestEnd(test, result) {\n    console.log(`Finished test ${test.title}: ${result.status}`);\n  }\n\n  onEnd(result) {\n    console.log(`Finished the run: ${result.status}`);\n  }\n}\nexport default MyReporter;\n"))),(0,n.kt)(i.Z,{value:"js",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"// my-awesome-reporter.js\n// @ts-check\n\n/** @implements {import('@playwright/test/reporter').Reporter} */\nclass MyReporter {\n  onBegin(config, suite) {\n    console.log(`Starting the run with ${suite.allTests().length} tests`);\n  }\n\n  onTestBegin(test) {\n    console.log(`Starting test ${test.title}`);\n  }\n\n  onTestEnd(test, result) {\n    console.log(`Finished test ${test.title}: ${result.status}`);\n  }\n\n  onEnd(result) {\n    console.log(`Finished the run: ${result.status}`);\n  }\n}\n\nmodule.exports = MyReporter;\n")))),(0,n.kt)("p",null,"Now use this reporter with ",(0,n.kt)("a",{parentName:"p",href:"/docs/api/class-testconfig#test-config-reporter"},"testConfig.reporter"),". Learn more about ",(0,n.kt)("a",{parentName:"p",href:"/docs/test-reporters"},"using reporters"),"."),(0,n.kt)(o.Z,{groupId:"js-flavor",defaultValue:"ts",values:[{label:"TypeScript",value:"ts"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},(0,n.kt)(i.Z,{value:"ts",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"// playwright.config.ts\nimport { PlaywrightTestConfig } from '@playwright/test';\n\nconst config: PlaywrightTestConfig = {\n  reporter: './my-awesome-reporter.ts',\n};\nexport default config;\n"))),(0,n.kt)(i.Z,{value:"js",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"// playwright.config.js\n// @ts-check\n\n/** @type {import('@playwright/test').PlaywrightTestConfig} */\nconst config = {\n  reporter: './my-awesome-reporter.js',\n};\n\nmodule.exports = config;\n")))),(0,n.kt)("p",null,"Here is a typical order of reporter calls:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/api/class-reporter#reporter-on-begin"},"reporter.onBegin(config, suite)")," is called once with a root suite that contains all other suites and tests. Learn more about ",(0,n.kt)("a",{parentName:"li",href:"/docs/api/class-suite",title:"Suite"},"suites hierarchy"),"."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/api/class-reporter#reporter-on-test-begin"},"reporter.onTestBegin(test, result)")," is called for each test run. It is given a ",(0,n.kt)("a",{parentName:"li",href:"/docs/api/class-testcase",title:"TestCase"},"TestCase")," that is executed, and a ",(0,n.kt)("a",{parentName:"li",href:"/docs/api/class-testresult",title:"TestResult"},"TestResult")," that is almost empty. Test result will be populated while the test runs (for example, with steps and stdio) and will get final ",(0,n.kt)("inlineCode",{parentName:"li"},"status")," once the test finishes."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/api/class-reporter#reporter-on-step-begin"},"reporter.onStepBegin(test, result, step)")," and ",(0,n.kt)("a",{parentName:"li",href:"/docs/api/class-reporter#reporter-on-step-end"},"reporter.onStepEnd(test, result, step)")," are called for each executed step inside the test. When steps are executed, test run has not finished yet."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/api/class-reporter#reporter-on-test-end"},"reporter.onTestEnd(test, result)")," is called when test run has finished. By this time, ",(0,n.kt)("a",{parentName:"li",href:"/docs/api/class-testresult",title:"TestResult"},"TestResult")," is complete and you can use ",(0,n.kt)("a",{parentName:"li",href:"/docs/api/class-testresult#test-result-status"},"testResult.status"),", ",(0,n.kt)("a",{parentName:"li",href:"/docs/api/class-testresult#test-result-error"},"testResult.error")," and more."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/api/class-reporter#reporter-on-end"},"reporter.onEnd(result)")," is called once after all tests that should run had finished.")),(0,n.kt)("p",null,"Additionally, ",(0,n.kt)("a",{parentName:"p",href:"/docs/api/class-reporter#reporter-on-std-out"},"reporter.onStdOut(chunk, test, result)")," and ",(0,n.kt)("a",{parentName:"p",href:"/docs/api/class-reporter#reporter-on-std-err"},"reporter.onStdErr(chunk, test, result)")," are called when standard output is produced in the worker process, possibly during a test execution, and ",(0,n.kt)("a",{parentName:"p",href:"/docs/api/class-reporter#reporter-on-error"},"reporter.onError(error)")," is called when something went wrong outside of the test execution."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/api/class-reporter#reporter-on-begin"},"reporter.onBegin(config, suite)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/api/class-reporter#reporter-on-end"},"reporter.onEnd(result)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/api/class-reporter#reporter-on-error"},"reporter.onError(error)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/api/class-reporter#reporter-on-std-err"},"reporter.onStdErr(chunk, test, result)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/api/class-reporter#reporter-on-std-out"},"reporter.onStdOut(chunk, test, result)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/api/class-reporter#reporter-on-step-begin"},"reporter.onStepBegin(test, result, step)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/api/class-reporter#reporter-on-step-end"},"reporter.onStepEnd(test, result, step)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/api/class-reporter#reporter-on-test-begin"},"reporter.onTestBegin(test, result)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/api/class-reporter#reporter-on-test-end"},"reporter.onTestEnd(test, result)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/api/class-reporter#reporter-prints-to-stdio"},"reporter.printsToStdio()"))),(0,n.kt)("h2",{id:"reporter-on-begin"},"reporter.onBegin(config, suite)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"config"),(0,n.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"reporter-on-begin-option-config"})," ","<",(0,n.kt)("a",{parentName:"li",href:"/docs/api/class-testconfig",title:"TestConfig"},"TestConfig"),">"," Resolved configuration.",(0,n.kt)("a",{href:"#reporter-on-begin-option-config",class:"list-anchor"},"#")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"suite"),(0,n.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"reporter-on-begin-option-suite"})," ","<",(0,n.kt)("a",{parentName:"li",href:"/docs/api/class-suite",title:"Suite"},"Suite"),">"," The root suite that contains all projects, files and test cases.",(0,n.kt)("a",{href:"#reporter-on-begin-option-suite",class:"list-anchor"},"#")),(0,n.kt)("li",{parentName:"ul"},"returns:",(0,n.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"reporter-on-begin-return"})," ","<",(0,n.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",title:"void"},"void"),">",(0,n.kt)("a",{href:"#reporter-on-begin-return",class:"list-anchor"},"#"))),(0,n.kt)("p",null,"Called once before running tests. All tests have been already discovered and put into a hierarchy of ",(0,n.kt)("a",{parentName:"p",href:"/docs/api/class-suite",title:"Suite"},"Suite"),"s."),(0,n.kt)("h2",{id:"reporter-on-end"},"reporter.onEnd(result)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("inlineCode",{parentName:"p"},"result"),(0,n.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"reporter-on-end-option-result"})," ","<",(0,n.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",title:"Object"},"Object"),">"," Result of the full test run.",(0,n.kt)("a",{href:"#reporter-on-end-option-result",class:"list-anchor"},"#")),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"status")," ","<",'"passed"|"failed"|"timedout"|"interrupted"',">")),(0,n.kt)("br",null),"* `'passed'` - Everything went as expected. * `'failed'` - Any test has failed. * `'timedout'` - The [testConfig.globalTimeout](/docs/api/class-testconfig#test-config-global-timeout) has been reached. * `'interrupted'` - Interrupted by the user."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"returns:",(0,n.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"reporter-on-end-return"})," ","<",(0,n.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",title:"Promise"},"Promise"),"<",(0,n.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",title:"void"},"void"),">",">",(0,n.kt)("a",{href:"#reporter-on-end-return",class:"list-anchor"},"#")))),(0,n.kt)("p",null,"Called after all tests has been run, or testing has been interrupted. Note that this method may return a ",(0,n.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",title:"Promise"},"Promise")," and Playwright Test will await it."),(0,n.kt)("h2",{id:"reporter-on-error"},"reporter.onError(error)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"error"),(0,n.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"reporter-on-error-option-error"})," ","<",(0,n.kt)("a",{parentName:"li",href:"/docs/api/class-testerror",title:"TestError"},"TestError"),">"," The error.",(0,n.kt)("a",{href:"#reporter-on-error-option-error",class:"list-anchor"},"#")),(0,n.kt)("li",{parentName:"ul"},"returns:",(0,n.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"reporter-on-error-return"})," ","<",(0,n.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",title:"void"},"void"),">",(0,n.kt)("a",{href:"#reporter-on-error-return",class:"list-anchor"},"#"))),(0,n.kt)("p",null,"Called on some global error, for example unhandled exception in the worker process."),(0,n.kt)("h2",{id:"reporter-on-std-err"},"reporter.onStdErr(chunk, test, result)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"chunk"),(0,n.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"reporter-on-std-err-option-chunk"})," ","<",(0,n.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type",title:"string"},"string"),"|",(0,n.kt)("a",{parentName:"li",href:"https://nodejs.org/api/buffer.html#buffer_class_buffer",title:"Buffer"},"Buffer"),">"," Output chunk.",(0,n.kt)("a",{href:"#reporter-on-std-err-option-chunk",class:"list-anchor"},"#")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"test"),(0,n.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"reporter-on-std-err-option-test"})," ","<",(0,n.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",title:"void"},"void"),"|",(0,n.kt)("a",{parentName:"li",href:"/docs/api/class-testcase",title:"TestCase"},"TestCase"),">"," Test that was running. Note that output may happen when to test is running, in which case this will be ",(0,n.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",title:"void"},"void"),".",(0,n.kt)("a",{href:"#reporter-on-std-err-option-test",class:"list-anchor"},"#")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"result"),(0,n.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"reporter-on-std-err-option-result"})," ","<",(0,n.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",title:"void"},"void"),"|",(0,n.kt)("a",{parentName:"li",href:"/docs/api/class-testresult",title:"TestResult"},"TestResult"),">"," Result of the test run, this object gets populated while the test runs.",(0,n.kt)("a",{href:"#reporter-on-std-err-option-result",class:"list-anchor"},"#")),(0,n.kt)("li",{parentName:"ul"},"returns:",(0,n.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"reporter-on-std-err-return"})," ","<",(0,n.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",title:"void"},"void"),">",(0,n.kt)("a",{href:"#reporter-on-std-err-return",class:"list-anchor"},"#"))),(0,n.kt)("p",null,"Called when something has been written to the standard error in the worker process."),(0,n.kt)("h2",{id:"reporter-on-std-out"},"reporter.onStdOut(chunk, test, result)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"chunk"),(0,n.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"reporter-on-std-out-option-chunk"})," ","<",(0,n.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type",title:"string"},"string"),"|",(0,n.kt)("a",{parentName:"li",href:"https://nodejs.org/api/buffer.html#buffer_class_buffer",title:"Buffer"},"Buffer"),">"," Output chunk.",(0,n.kt)("a",{href:"#reporter-on-std-out-option-chunk",class:"list-anchor"},"#")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"test"),(0,n.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"reporter-on-std-out-option-test"})," ","<",(0,n.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",title:"void"},"void"),"|",(0,n.kt)("a",{parentName:"li",href:"/docs/api/class-testcase",title:"TestCase"},"TestCase"),">"," Test that was running. Note that output may happen when to test is running, in which case this will be ",(0,n.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",title:"void"},"void"),".",(0,n.kt)("a",{href:"#reporter-on-std-out-option-test",class:"list-anchor"},"#")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"result"),(0,n.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"reporter-on-std-out-option-result"})," ","<",(0,n.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",title:"void"},"void"),"|",(0,n.kt)("a",{parentName:"li",href:"/docs/api/class-testresult",title:"TestResult"},"TestResult"),">"," Result of the test run, this object gets populated while the test runs.",(0,n.kt)("a",{href:"#reporter-on-std-out-option-result",class:"list-anchor"},"#")),(0,n.kt)("li",{parentName:"ul"},"returns:",(0,n.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"reporter-on-std-out-return"})," ","<",(0,n.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",title:"void"},"void"),">",(0,n.kt)("a",{href:"#reporter-on-std-out-return",class:"list-anchor"},"#"))),(0,n.kt)("p",null,"Called when something has been written to the standard output in the worker process."),(0,n.kt)("h2",{id:"reporter-on-step-begin"},"reporter.onStepBegin(test, result, step)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"test"),(0,n.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"reporter-on-step-begin-option-test"})," ","<",(0,n.kt)("a",{parentName:"li",href:"/docs/api/class-testcase",title:"TestCase"},"TestCase"),">"," Test that has been started.",(0,n.kt)("a",{href:"#reporter-on-step-begin-option-test",class:"list-anchor"},"#")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"result"),(0,n.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"reporter-on-step-begin-option-result"})," ","<",(0,n.kt)("a",{parentName:"li",href:"/docs/api/class-testresult",title:"TestResult"},"TestResult"),">"," Result of the test run, this object gets populated while the test runs.",(0,n.kt)("a",{href:"#reporter-on-step-begin-option-result",class:"list-anchor"},"#")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"step"),(0,n.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"reporter-on-step-begin-option-step"})," ","<",(0,n.kt)("a",{parentName:"li",href:"/docs/api/class-teststep",title:"TestStep"},"TestStep"),">"," Test step instance.",(0,n.kt)("a",{href:"#reporter-on-step-begin-option-step",class:"list-anchor"},"#")),(0,n.kt)("li",{parentName:"ul"},"returns:",(0,n.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"reporter-on-step-begin-return"})," ","<",(0,n.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",title:"void"},"void"),">",(0,n.kt)("a",{href:"#reporter-on-step-begin-return",class:"list-anchor"},"#"))),(0,n.kt)("p",null,"Called when a test step started in the worker process."),(0,n.kt)("h2",{id:"reporter-on-step-end"},"reporter.onStepEnd(test, result, step)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"test"),(0,n.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"reporter-on-step-end-option-test"})," ","<",(0,n.kt)("a",{parentName:"li",href:"/docs/api/class-testcase",title:"TestCase"},"TestCase"),">"," Test that has been finished.",(0,n.kt)("a",{href:"#reporter-on-step-end-option-test",class:"list-anchor"},"#")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"result"),(0,n.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"reporter-on-step-end-option-result"})," ","<",(0,n.kt)("a",{parentName:"li",href:"/docs/api/class-testresult",title:"TestResult"},"TestResult"),">"," Result of the test run.",(0,n.kt)("a",{href:"#reporter-on-step-end-option-result",class:"list-anchor"},"#")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"step"),(0,n.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"reporter-on-step-end-option-step"})," ","<",(0,n.kt)("a",{parentName:"li",href:"/docs/api/class-teststep",title:"TestStep"},"TestStep"),">"," Test step instance.",(0,n.kt)("a",{href:"#reporter-on-step-end-option-step",class:"list-anchor"},"#")),(0,n.kt)("li",{parentName:"ul"},"returns:",(0,n.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"reporter-on-step-end-return"})," ","<",(0,n.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",title:"void"},"void"),">",(0,n.kt)("a",{href:"#reporter-on-step-end-return",class:"list-anchor"},"#"))),(0,n.kt)("p",null,"Called when a test step finished in the worker process."),(0,n.kt)("h2",{id:"reporter-on-test-begin"},"reporter.onTestBegin(test, result)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"test"),(0,n.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"reporter-on-test-begin-option-test"})," ","<",(0,n.kt)("a",{parentName:"li",href:"/docs/api/class-testcase",title:"TestCase"},"TestCase"),">"," Test that has been started.",(0,n.kt)("a",{href:"#reporter-on-test-begin-option-test",class:"list-anchor"},"#")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"result"),(0,n.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"reporter-on-test-begin-option-result"})," ","<",(0,n.kt)("a",{parentName:"li",href:"/docs/api/class-testresult",title:"TestResult"},"TestResult"),">"," Result of the test run, this object gets populated while the test runs.",(0,n.kt)("a",{href:"#reporter-on-test-begin-option-result",class:"list-anchor"},"#")),(0,n.kt)("li",{parentName:"ul"},"returns:",(0,n.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"reporter-on-test-begin-return"})," ","<",(0,n.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",title:"void"},"void"),">",(0,n.kt)("a",{href:"#reporter-on-test-begin-return",class:"list-anchor"},"#"))),(0,n.kt)("p",null,"Called after a test has been started in the worker process."),(0,n.kt)("h2",{id:"reporter-on-test-end"},"reporter.onTestEnd(test, result)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"test"),(0,n.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"reporter-on-test-end-option-test"})," ","<",(0,n.kt)("a",{parentName:"li",href:"/docs/api/class-testcase",title:"TestCase"},"TestCase"),">"," Test that has been finished.",(0,n.kt)("a",{href:"#reporter-on-test-end-option-test",class:"list-anchor"},"#")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"result"),(0,n.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"reporter-on-test-end-option-result"})," ","<",(0,n.kt)("a",{parentName:"li",href:"/docs/api/class-testresult",title:"TestResult"},"TestResult"),">"," Result of the test run.",(0,n.kt)("a",{href:"#reporter-on-test-end-option-result",class:"list-anchor"},"#")),(0,n.kt)("li",{parentName:"ul"},"returns:",(0,n.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"reporter-on-test-end-return"})," ","<",(0,n.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",title:"void"},"void"),">",(0,n.kt)("a",{href:"#reporter-on-test-end-return",class:"list-anchor"},"#"))),(0,n.kt)("p",null,"Called after a test has been finished in the worker process."),(0,n.kt)("h2",{id:"reporter-prints-to-stdio"},"reporter.printsToStdio()"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"returns:",(0,n.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"reporter-prints-to-stdio-return"})," ","<",(0,n.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type",title:"Boolean"},"boolean"),">",(0,n.kt)("a",{href:"#reporter-prints-to-stdio-return",class:"list-anchor"},"#"))),(0,n.kt)("p",null,"Whether this reporter uses stdio for reporting. When it does not, Playwright Test could add some output to enhance user experience."))}k.isMDXComponent=!0}}]);
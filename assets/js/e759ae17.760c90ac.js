(self.webpackChunkplaywright_dev=self.webpackChunkplaywright_dev||[]).push([[67986],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(n),m=o,h=u["".concat(l,".").concat(m)]||u[m]||d[m]||i;return n?r.createElement(h,a(a({ref:t},p),{},{components:n})):r.createElement(h,a({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var c=2;c<i;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},15367:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return a},metadata:function(){return s},toc:function(){return l},default:function(){return p}});var r=n(22122),o=n(19756),i=(n(67294),n(3905)),a={id:"working-with-selectors",title:"Working with selectors"},s={unversionedId:"api/working-with-selectors",id:"version-1.6.0/api/working-with-selectors",isDocsHomePage:!1,title:"Working with selectors",description:"Selector describes an element in the page. It can be used to obtain ElementHandle (see page.$() for example) or shortcut element operations to avoid intermediate handle (see page.click() for example).",source:"@site/versioned_docs/version-1.6.0/api/working-with-selectors.mdx",sourceDirName:"api",slug:"/api/working-with-selectors",permalink:"/docs/1.6.0/api/working-with-selectors",version:"1.6.0",frontMatter:{id:"working-with-selectors",title:"Working with selectors"},sidebar:"version-1.6.0/api",previous:{title:"Environment Variables",permalink:"/docs/1.6.0/api/environment-variables"},next:{title:"Working with Chrome Extensions",permalink:"/docs/1.6.0/api/working-with-chrome-extensions"}},l=[],c={toc:l};function p(e){var t=e.components,n=(0,o.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Selector describes an element in the page. It can be used to obtain ",(0,i.kt)("inlineCode",{parentName:"p"},"ElementHandle")," (see ",(0,i.kt)("a",{parentName:"p",href:"#pageselector"},"page.$()")," for example) or shortcut element operations to avoid intermediate handle (see ",(0,i.kt)("a",{parentName:"p",href:"/docs/1.6.0/api/class-page#pageclickselector-options"},"page.click()")," for example)."),(0,i.kt)("p",null,"Selector has the following format: ",(0,i.kt)("inlineCode",{parentName:"p"},"engine=body [>> engine=body]*"),". Here ",(0,i.kt)("inlineCode",{parentName:"p"},"engine")," is one of the supported ",(0,i.kt)("a",{parentName:"p",href:"/docs/1.6.0/selectors"},"selector engines")," (e.g. ",(0,i.kt)("inlineCode",{parentName:"p"},"css")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"xpath"),"), and ",(0,i.kt)("inlineCode",{parentName:"p"},"body")," is a selector body in the format of the particular engine. When multiple ",(0,i.kt)("inlineCode",{parentName:"p"},"engine=body")," clauses are present (separated by ",(0,i.kt)("inlineCode",{parentName:"p"},">>"),"), next one is queried relative to the previous one's result."),(0,i.kt)("p",null,"For convenience, selectors in the wrong format are heuristically converted to the right format:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"selector starting with ",(0,i.kt)("inlineCode",{parentName:"li"},"//")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"..")," is assumed to be ",(0,i.kt)("inlineCode",{parentName:"li"},"xpath=selector"),";"),(0,i.kt)("li",{parentName:"ul"},"selector starting and ending with a quote (either ",(0,i.kt)("inlineCode",{parentName:"li"},'"')," or ",(0,i.kt)("inlineCode",{parentName:"li"},"'"),") is assumed to be ",(0,i.kt)("inlineCode",{parentName:"li"},"text=selector"),";"),(0,i.kt)("li",{parentName:"ul"},"otherwise selector is assumed to be ",(0,i.kt)("inlineCode",{parentName:"li"},"css=selector"),".")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"// queries 'div' css selector\nconst handle = await page.$('css=div');\n\n// queries '//html/body/div' xpath selector\nconst handle = await page.$('xpath=//html/body/div');\n\n// queries '\"foo\"' text selector\nconst handle = await page.$('text=\"foo\"');\n\n// queries 'span' css selector inside the result of '//html/body/div' xpath selector\nconst handle = await page.$('xpath=//html/body/div >> css=span');\n\n// converted to 'css=div'\nconst handle = await page.$('div');\n\n// converted to 'xpath=//html/body/div'\nconst handle = await page.$('//html/body/div');\n\n// converted to 'text=\"foo\"'\nconst handle = await page.$('\"foo\"');\n\n// queries '../span' xpath selector starting with the result of 'div' css selector\nconst handle = await page.$('div >> ../span');\n\n// queries 'span' css selector inside the div handle\nconst handle = await divHandle.$('css=span');\n")))}p.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkplaywright_dev=self.webpackChunkplaywright_dev||[]).push([[3852],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return f}});var s=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,s)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,s,r=function(e,t){if(null==e)return{};var n,s,r={},a=Object.keys(e);for(s=0;s<a.length;s++)n=a[s],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(s=0;s<a.length;s++)n=a[s],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=s.createContext({}),p=function(e){var t=s.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return s.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return s.createElement(s.Fragment,{},t)}},d=s.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=p(n),f=r,m=d["".concat(l,".").concat(f)]||d[f]||c[f]||a;return n?s.createElement(m,o(o({ref:t},u),{},{components:n})):s.createElement(m,o({ref:t},u))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var p=2;p<a;p++)o[p]=n[p];return s.createElement.apply(null,o)}return s.createElement.apply(null,n)}d.displayName="MDXCreateElement"},58215:function(e,t,n){n.d(t,{Z:function(){return r}});var s=n(67294);function r(e){var t=e.children,n=e.hidden,r=e.className;return s.createElement("div",{role:"tabpanel",hidden:n,className:r},t)}},9877:function(e,t,n){n.d(t,{Z:function(){return u}});var s=n(87462),r=n(67294),a=n(72389),o=n(29366),i=n(86010),l="tabItem_LplD";function p(e){var t,n,a,p=e.lazy,u=e.block,c=e.defaultValue,d=e.values,f=e.groupId,m=e.className,v=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),h=null!=d?d:v.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),b=(0,o.lx)(h,(function(e,t){return e.value===t.value}));if(b.length>0)throw new Error('Docusaurus error: Duplicate values "'+b.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var k=null===c?c:null!=(t=null!=c?c:null==(n=v.find((function(e){return e.props.default})))?void 0:n.props.value)?t:null==(a=v[0])?void 0:a.props.value;if(null!==k&&!h.some((function(e){return e.value===k})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+k+'" but none of its children has the corresponding value. Available values are: '+h.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var y=(0,o.UB)(),g=y.tabGroupChoices,w=y.setTabGroupChoices,A=(0,r.useState)(k),O=A[0],N=A[1],P=[],x=(0,o.o5)().blockElementScrollPositionUntilNextRender;if(null!=f){var R=g[f];null!=R&&R!==O&&h.some((function(e){return e.value===R}))&&N(R)}var E=function(e){var t=e.currentTarget,n=P.indexOf(t),s=h[n].value;s!==O&&(x(t),N(s),null!=f&&w(f,s))},j=function(e){var t,n=null;switch(e.key){case"ArrowRight":var s=P.indexOf(e.currentTarget)+1;n=P[s]||P[0];break;case"ArrowLeft":var r=P.indexOf(e.currentTarget)-1;n=P[r]||P[P.length-1]}null==(t=n)||t.focus()};return r.createElement("div",{className:"tabs-container"},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":u},m)},h.map((function(e){var t=e.value,n=e.label,a=e.attributes;return r.createElement("li",(0,s.Z)({role:"tab",tabIndex:O===t?0:-1,"aria-selected":O===t,key:t,ref:function(e){return P.push(e)},onKeyDown:j,onFocus:E,onClick:E},a,{className:(0,i.Z)("tabs__item",l,null==a?void 0:a.className,{"tabs__item--active":O===t})}),null!=n?n:t)}))),p?(0,r.cloneElement)(v.filter((function(e){return e.props.value===O}))[0],{className:"margin-vert--md"}):r.createElement("div",{className:"margin-vert--md"},v.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==O})}))))}function u(e){var t=(0,a.Z)();return r.createElement(p,(0,s.Z)({key:String(t)},e))}},39186:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return l},default:function(){return f},frontMatter:function(){return i},metadata:function(){return p},toc:function(){return c}});var s=n(87462),r=n(63366),a=(n(67294),n(3905)),o=(n(9877),n(58215),["components"]),i={id:"class-apiresponseassertions",title:"APIResponseAssertions"},l=void 0,p={unversionedId:"api/class-apiresponseassertions",id:"version-1.18/api/class-apiresponseassertions",title:"APIResponseAssertions",description:"The APIResponseAssertions] class provides assertion methods that can be used to make assertions about the [APIResponse] in the tests. A new instance of [APIResponseAssertions] is created by calling [playwrightAssertions.expect(response):",source:"@site/versioned_docs/version-1.18/api/class-apiresponseassertions.mdx",sourceDirName:"api",slug:"/api/class-apiresponseassertions",permalink:"/docs/1.18/api/class-apiresponseassertions",tags:[],version:"1.18",frontMatter:{id:"class-apiresponseassertions",title:"APIResponseAssertions"},sidebar:"version-1.18/api",previous:{title:"APIResponse",permalink:"/docs/1.18/api/class-apiresponse"},next:{title:"Browser",permalink:"/docs/1.18/api/class-browser"}},u={},c=[{value:"apiResponseAssertions.not()",id:"api-response-assertions-not",level:2},{value:"apiResponseAssertions.toBeOK()",id:"api-response-assertions-to-be-ok",level:2}],d={toc:c};function f(e){var t=e.components,n=(0,r.Z)(e,o);return(0,a.kt)("wrapper",(0,s.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The ",(0,a.kt)("a",{parentName:"p",href:"/docs/1.18/api/class-apiresponseassertions",title:"APIResponseAssertions"},"APIResponseAssertions")," class provides assertion methods that can be used to make assertions about the ",(0,a.kt)("a",{parentName:"p",href:"/docs/1.18/api/class-apiresponse",title:"APIResponse"},"APIResponse")," in the tests. A new instance of ",(0,a.kt)("a",{parentName:"p",href:"/docs/1.18/api/class-apiresponseassertions",title:"APIResponseAssertions"},"APIResponseAssertions")," is created by calling ",(0,a.kt)("a",{parentName:"p",href:"/docs/1.18/api/class-playwrightassertions#playwright-assertions-expect-api-response"},"playwrightAssertions.expect(response)"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import { test, expect } from '@playwright/test';\n\ntest('navigates to login', async ({ page }) => {\n  // ...\n  const response = await page.request.get('https://playwright.dev');\n  await expect(response).toBeOK();\n});\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/1.18/api/class-apiresponseassertions#api-response-assertions-not"},"apiResponseAssertions.not()")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/1.18/api/class-apiresponseassertions#api-response-assertions-to-be-ok"},"apiResponseAssertions.toBeOK()"))),(0,a.kt)("h2",{id:"api-response-assertions-not"},"apiResponseAssertions.not()"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"returns:",(0,a.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"api-response-assertions-not-return"})," ","<",(0,a.kt)("a",{parentName:"li",href:"/docs/1.18/api/class-apiresponseassertions",title:"APIResponseAssertions"},"APIResponseAssertions"),">",(0,a.kt)("a",{href:"#api-response-assertions-not-return",class:"list-anchor"},"#"))),(0,a.kt)("p",null,"Makes the assertion check for the opposite condition. For example, this code tests that the response status is not successfull:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"await expect(response).not.toBeOK();\n")),(0,a.kt)("h2",{id:"api-response-assertions-to-be-ok"},"apiResponseAssertions.toBeOK()"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"returns:",(0,a.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"api-response-assertions-to-be-ok-return"})," ","<",(0,a.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",title:"Promise"},"Promise"),"<",(0,a.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",title:"void"},"void"),">",">",(0,a.kt)("a",{href:"#api-response-assertions-to-be-ok-return",class:"list-anchor"},"#"))),(0,a.kt)("p",null,"Ensures the response status code is within ","[200..299]"," range."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"await expect(response).toBeOK();\n")))}f.isMDXComponent=!0}}]);
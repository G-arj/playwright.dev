"use strict";(self.webpackChunkplaywright_dev=self.webpackChunkplaywright_dev||[]).push([[2696],{3905:function(e,r,t){t.d(r,{Zo:function(){return p},kt:function(){return w}});var n=t(67294);function i(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){i(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function d(e,r){if(null==e)return{};var t,n,i=function(e,r){if(null==e)return{};var t,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(i[t]=e[t]);return i}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=n.createContext({}),c=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},p=function(e){var r=c(e.components);return n.createElement(l.Provider,{value:r},e.children)},s={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},u=n.forwardRef((function(e,r){var t=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,p=d(e,["components","mdxType","originalType","parentName"]),u=c(t),w=i,b=u["".concat(l,".").concat(w)]||u[w]||s[w]||a;return t?n.createElement(b,o(o({ref:r},p),{},{components:t})):n.createElement(b,o({ref:r},p))}));function w(e,r){var t=arguments,i=r&&r.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=u;var d={};for(var l in r)hasOwnProperty.call(r,l)&&(d[l]=r[l]);d.originalType=e,d.mdxType="string"==typeof e?e:i,o[1]=d;for(var c=2;c<a;c++)o[c]=t[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},88408:function(e,r,t){t.r(r),t.d(r,{assets:function(){return v},contentTitle:function(){return w},default:function(){return k},frontMatter:function(){return u},metadata:function(){return b},toc:function(){return f}});var n=t(3905),i=Object.defineProperty,a=Object.defineProperties,o=Object.getOwnPropertyDescriptors,d=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable,p=(e,r,t)=>r in e?i(e,r,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[r]=t,s=(e,r)=>{for(var t in r||(r={}))l.call(r,t)&&p(e,t,r[t]);if(d)for(var t of d(r))c.call(r,t)&&p(e,t,r[t]);return e};const u={id:"class-androidwebview",title:"AndroidWebView"},w=void 0,b={unversionedId:"api/class-androidwebview",id:"api/class-androidwebview",title:"AndroidWebView",description:"AndroidWebView] represents a WebView open on the [AndroidDevice]. WebView is usually obtained using [androidDevice.webView(selector[, options]).",source:"@site/docs/api/class-androidwebview.mdx",sourceDirName:"api",slug:"/api/class-androidwebview",permalink:"/docs/next/api/class-androidwebview",tags:[],version:"current",frontMatter:{id:"class-androidwebview",title:"AndroidWebView"},sidebar:"api",previous:{title:"AndroidSocket",permalink:"/docs/next/api/class-androidsocket"},next:{title:"Electron",permalink:"/docs/next/api/class-electron"}},v={},f=[{value:"androidWebView.on(&#39;close&#39;)",id:"android-web-view-event-close",level:2},{value:"androidWebView.page()",id:"android-web-view-page",level:2},{value:"androidWebView.pid()",id:"android-web-view-pid",level:2},{value:"androidWebView.pkg()",id:"android-web-view-pkg",level:2}],m={toc:f};function k(e){var r,t=e,{components:i}=t,p=((e,r)=>{var t={};for(var n in e)l.call(e,n)&&r.indexOf(n)<0&&(t[n]=e[n]);if(null!=e&&d)for(var n of d(e))r.indexOf(n)<0&&c.call(e,n)&&(t[n]=e[n]);return t})(t,["components"]);return(0,n.kt)("wrapper",(r=s(s({},m),p),a(r,o({components:i,mdxType:"MDXLayout"}))),(0,n.kt)("p",null,(0,n.kt)("a",s({parentName:"p"},{href:"/docs/next/api/class-androidwebview",title:"AndroidWebView"}),"AndroidWebView")," represents a WebView open on the ",(0,n.kt)("a",s({parentName:"p"},{href:"/docs/next/api/class-androiddevice",title:"AndroidDevice"}),"AndroidDevice"),". WebView is usually obtained using ",(0,n.kt)("a",s({parentName:"p"},{href:"/docs/next/api/class-androiddevice#android-device-web-view"}),"androidDevice.webView(selector[, options])"),"."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",s({parentName:"li"},{href:"/docs/next/api/class-androidwebview#android-web-view-event-close"}),"androidWebView.on('close')")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",s({parentName:"li"},{href:"/docs/next/api/class-androidwebview#android-web-view-page"}),"androidWebView.page()")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",s({parentName:"li"},{href:"/docs/next/api/class-androidwebview#android-web-view-pid"}),"androidWebView.pid()")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",s({parentName:"li"},{href:"/docs/next/api/class-androidwebview#android-web-view-pkg"}),"androidWebView.pkg()"))),(0,n.kt)("h2",s({},{id:"android-web-view-event-close"}),"androidWebView.on('close')"),(0,n.kt)("p",null,"Emitted when the WebView is closed."),(0,n.kt)("h2",s({},{id:"android-web-view-page"}),"androidWebView.page()"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"returns:",(0,n.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"android-web-view-page-return"})," ","<",(0,n.kt)("a",s({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",title:"Promise"}),"Promise"),"<",(0,n.kt)("a",s({parentName:"li"},{href:"/docs/next/api/class-page",title:"Page"}),"Page"),">",">",(0,n.kt)("a",{href:"#android-web-view-page-return",class:"list-anchor"},"#"))),(0,n.kt)("p",null,"Connects to the WebView and returns a regular Playwright ",(0,n.kt)("a",s({parentName:"p"},{href:"/docs/next/api/class-page",title:"Page"}),"Page")," to interact with."),(0,n.kt)("h2",s({},{id:"android-web-view-pid"}),"androidWebView.pid()"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"returns:",(0,n.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"android-web-view-pid-return"})," ","<",(0,n.kt)("a",s({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type",title:"Number"}),"number"),">",(0,n.kt)("a",{href:"#android-web-view-pid-return",class:"list-anchor"},"#"))),(0,n.kt)("p",null,"WebView process PID."),(0,n.kt)("h2",s({},{id:"android-web-view-pkg"}),"androidWebView.pkg()"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"returns:",(0,n.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"android-web-view-pkg-return"})," ","<",(0,n.kt)("a",s({parentName:"li"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type",title:"string"}),"string"),">",(0,n.kt)("a",{href:"#android-web-view-pkg-return",class:"list-anchor"},"#"))),(0,n.kt)("p",null,"WebView package identifier."))}k.isMDXComponent=!0}}]);
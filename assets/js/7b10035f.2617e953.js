"use strict";(self.webpackChunkplaywright_dev=self.webpackChunkplaywright_dev||[]).push([[5545],{3905:function(e,t,a){a.d(t,{Zo:function(){return c},kt:function(){return d}});var o=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,o)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,o,n=function(e,t){if(null==e)return{};var a,o,n={},r=Object.keys(e);for(o=0;o<r.length;o++)a=r[o],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)a=r[o],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=o.createContext({}),s=function(e){var t=o.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=s(e.components);return o.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=s(a),d=n,k=m["".concat(p,".").concat(d)]||m[d]||u[d]||r;return a?o.createElement(k,l(l({ref:t},c),{},{components:a})):o.createElement(k,l({ref:t},c))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,l=new Array(r);l[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:n,l[1]=i;for(var s=2;s<r;s++)l[s]=a[s];return o.createElement.apply(null,l)}return o.createElement.apply(null,a)}m.displayName="MDXCreateElement"},58215:function(e,t,a){var o=a(67294);t.Z=function(e){var t=e.children,a=e.hidden,n=e.className;return o.createElement("div",{role:"tabpanel",hidden:a,className:n},t)}},55064:function(e,t,a){a.d(t,{Z:function(){return u}});var o=a(67294),n=a(79443);var r=function(){var e=(0,o.useContext)(n.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},l=a(86010),i="tabItem_1uMI",p="tabItemActive_2DSg";var s=37,c=39;var u=function(e){var t=e.lazy,a=e.block,n=e.defaultValue,u=e.values,m=e.groupId,d=e.className,k=r(),h=k.tabGroupChoices,N=k.setTabGroupChoices,g=(0,o.useState)(n),f=g[0],v=g[1],x=o.Children.toArray(e.children),b=[];if(null!=m){var y=h[m];null!=y&&y!==f&&u.some((function(e){return e.value===y}))&&v(y)}var S=function(e){var t=e.currentTarget,a=b.indexOf(t),o=u[a].value;v(o),null!=m&&(N(m,o),setTimeout((function(){var e,a,o,n,r,l,i,s;(e=t.getBoundingClientRect(),a=e.top,o=e.left,n=e.bottom,r=e.right,l=window,i=l.innerHeight,s=l.innerWidth,a>=0&&r<=s&&n<=i&&o>=0)||(t.scrollIntoView({block:"center",behavior:"smooth"}),t.classList.add(p),setTimeout((function(){return t.classList.remove(p)}),2e3))}),150))},C=function(e){var t,a;switch(e.keyCode){case c:var o=b.indexOf(e.target)+1;a=b[o]||b[0];break;case s:var n=b.indexOf(e.target)-1;a=b[n]||b[b.length-1]}null==(t=a)||t.focus()};return o.createElement("div",{className:"tabs-container"},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":a},d)},u.map((function(e){var t=e.value,a=e.label;return o.createElement("li",{role:"tab",tabIndex:f===t?0:-1,"aria-selected":f===t,className:(0,l.Z)("tabs__item",i,{"tabs__item--active":f===t}),key:t,ref:function(e){return b.push(e)},onKeyDown:C,onFocus:S,onClick:S},a)}))),t?(0,o.cloneElement)(x.filter((function(e){return e.props.value===f}))[0],{className:"margin-vert--md"}):o.createElement("div",{className:"margin-vert--md"},x.map((function(e,t){return(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==f})}))))}},79443:function(e,t,a){var o=(0,a(67294).createContext)(void 0);t.Z=o},124:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return l},contentTitle:function(){return i},metadata:function(){return p},toc:function(){return s},default:function(){return u}});var o=a(22122),n=a(19756),r=(a(67294),a(3905)),l=(a(55064),a(58215),{id:"test-assertions",title:"Assertions"}),i=void 0,p={unversionedId:"test-assertions",id:"version-1.17/test-assertions",isDocsHomePage:!1,title:"Assertions",description:"Playwright Test uses expect library for test assertions. This library provides a lot of matchers like toEqual, toContain, toMatch, toMatchSnapshot and many more:",source:"@site/versioned_docs/version-1.17/test-assertions.mdx",sourceDirName:".",slug:"/test-assertions",permalink:"/docs/test-assertions",version:"1.17",frontMatter:{id:"test-assertions",title:"Assertions"},sidebar:"version-1.17/docs",previous:{title:"API testing",permalink:"/docs/test-api-testing"},next:{title:"Authentication",permalink:"/docs/test-auth"}},s=[{value:"Matching",id:"matching",children:[]},{value:"expect(locator).toBeChecked(options)",id:"expectlocatortobecheckedoptions",children:[]},{value:"expect(locator).toBeDisabled(options)",id:"expectlocatortobedisabledoptions",children:[]},{value:"expect(locator).toBeEditable(options)",id:"expectlocatortobeeditableoptions",children:[]},{value:"expect(locator).toBeEmpty(options)",id:"expectlocatortobeemptyoptions",children:[]},{value:"expect(locator).toBeEnabled(options)",id:"expectlocatortobeenabledoptions",children:[]},{value:"expect(locator).toBeFocused(options)",id:"expectlocatortobefocusedoptions",children:[]},{value:"expect(locator).toBeHidden(options)",id:"expectlocatortobehiddenoptions",children:[]},{value:"expect(locator).toBeVisible(options)",id:"expectlocatortobevisibleoptions",children:[]},{value:"expect(locator).toContainText(expected, options)",id:"expectlocatortocontaintextexpected-options",children:[]},{value:"expect(locator).toHaveAttribute(name, value, options)",id:"expectlocatortohaveattributename-value-options",children:[]},{value:"expect(locator).toHaveClass(expected, options)",id:"expectlocatortohaveclassexpected-options",children:[]},{value:"expect(locator).toHaveCount(count, options)",id:"expectlocatortohavecountcount-options",children:[]},{value:"expect(locator).toHaveCSS(name, value, options)",id:"expectlocatortohavecssname-value-options",children:[]},{value:"expect(locator).toHaveId(id, options)",id:"expectlocatortohaveidid-options",children:[]},{value:"expect(locator).toHaveJSProperty(name, value, options)",id:"expectlocatortohavejspropertyname-value-options",children:[]},{value:"expect(locator).toHaveText(expected, options)",id:"expectlocatortohavetextexpected-options",children:[]},{value:"expect(locator).toHaveValue(value, options)",id:"expectlocatortohavevaluevalue-options",children:[]},{value:"expect(page).toHaveTitle(title, options)",id:"expectpagetohavetitletitle-options",children:[]},{value:"expect(page).toHaveURL(url, options)",id:"expectpagetohaveurlurl-options",children:[]},{value:"expect(value).toMatchSnapshot(name, options)",id:"expectvaluetomatchsnapshotname-options",children:[]}],c={toc:s};function u(e){var t=e.components,a=(0,n.Z)(e,["components"]);return(0,r.kt)("wrapper",(0,o.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Playwright Test uses ",(0,r.kt)("a",{parentName:"p",href:"https://jestjs.io/docs/expect"},"expect")," library for test assertions. This library provides a lot of matchers like ",(0,r.kt)("inlineCode",{parentName:"p"},"toEqual"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"toContain"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"toMatch"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"toMatchSnapshot")," and many more:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"expect(success).toBeTruthy();\n")),(0,r.kt)("p",null,"Playwright also extends it with convenience async matchers that will wait until the expected condition is met. In general, we can expect the opposite to be true by adding a ",(0,r.kt)("inlineCode",{parentName:"p"},".not")," to the front of the matchers:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'expect(value).not.toEqual(0);\nawait expect(locator).not.toContainText("some text");\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#matching"},"Matching")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#expectlocatortobecheckedoptions"},"expect(locator).toBeChecked([options])")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#expectlocatortobedisabledoptions"},"expect(locator).toBeDisabled([options])")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#expectlocatortobeeditableoptions"},"expect(locator).toBeEditable([options])")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#expectlocatortobeemptyoptions"},"expect(locator).toBeEmpty([options])")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#expectlocatortobeenabledoptions"},"expect(locator).toBeEnabled([options])")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#expectlocatortobefocusedoptions"},"expect(locator).toBeFocused([options])")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#expectlocatortobehiddenoptions"},"expect(locator).toBeHidden([options])")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#expectlocatortobevisibleoptions"},"expect(locator).toBeVisible([options])")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#expectlocatortocontaintextexpected-options"},"expect(locator).toContainText(expected[, options])")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#expectlocatortohaveattributename-value-options"},"expect(locator).toHaveAttribute(name, value[, options])")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#expectlocatortohaveclassexpected-options"},"expect(locator).toHaveClass(expected[, options])")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#expectlocatortohavecountcount-options"},"expect(locator).toHaveCount(count[, options])")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#expectlocatortohavecssname-value-options"},"expect(locator).toHaveCSS(name, value[, options])")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#expectlocatortohaveidid-options"},"expect(locator).toHaveId(id[, options])")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#expectlocatortohavejspropertyname-value-options"},"expect(locator).toHaveJSProperty(name, value[, options])")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#expectlocatortohavetextexpected-options"},"expect(locator).toHaveText(expected[, options])")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#expectlocatortohavevaluevalue-options"},"expect(locator).toHaveValue(value[, options])")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#expectpagetohavetitletitle-options"},"expect(page).toHaveTitle(title[, options])")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#expectpagetohaveurlurl-options"},"expect(page).toHaveURL(url[, options])")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#expectvaluetomatchsnapshotname-options"},"expect(value).toMatchSnapshot(name[, options])"))),(0,r.kt)("h2",{id:"matching"},"Matching"),(0,r.kt)("p",null,"Consider the following example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"await expect(page.locator('.status')).toHaveText('Submitted');\n")),(0,r.kt)("p",null,"Playwright Test will be re-testing the node with the selector ",(0,r.kt)("inlineCode",{parentName:"p"},".status")," until fetched Node has the ",(0,r.kt)("inlineCode",{parentName:"p"},'"Submitted"')," text. It will be re-fetching the node and checking it over and over, until the condition is met or until the timeout is reached. You can either pass this timeout or configure it once via the ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/class-testconfig#test-config-expect"},"testConfig.expect")," value in test config."),(0,r.kt)("p",null,"By default, the timeout for assertions is set to 5 seconds."),(0,r.kt)("h2",{id:"expectlocatortobecheckedoptions"},"expect(locator).toBeChecked(","[options]",")"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"options"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"timeout")," <",(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type",title:"Number"},"number"),"> Time to retry assertion for, defaults to ",(0,r.kt)("inlineCode",{parentName:"li"},"timeout")," in ",(0,r.kt)("a",{parentName:"li",href:"/docs/api/class-testconfig#test-config-expect"},"testConfig.expect"),".")))),(0,r.kt)("p",null,"Ensures ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/class-locator",title:"Locator"},"Locator")," points to the checked input."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const locator = page.locator('.subscribe');\nawait expect(locator).toBeChecked();\n")),(0,r.kt)("h2",{id:"expectlocatortobedisabledoptions"},"expect(locator).toBeDisabled(","[options]",")"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"options"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"timeout")," <",(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type",title:"Number"},"number"),"> Time to retry assertion for, defaults to ",(0,r.kt)("inlineCode",{parentName:"li"},"timeout")," in ",(0,r.kt)("a",{parentName:"li",href:"/docs/api/class-testconfig#test-config-expect"},"testConfig.expect"),".")))),(0,r.kt)("p",null,"Ensures ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/class-locator",title:"Locator"},"Locator")," points to a disabled element."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const locator = page.locator('button.submit');\nawait expect(locator).toBeDisabled();\n")),(0,r.kt)("h2",{id:"expectlocatortobeeditableoptions"},"expect(locator).toBeEditable(","[options]",")"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"options"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"timeout")," <",(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type",title:"Number"},"number"),"> Time to retry assertion for, defaults to ",(0,r.kt)("inlineCode",{parentName:"li"},"timeout")," in ",(0,r.kt)("a",{parentName:"li",href:"/docs/api/class-testconfig#test-config-expect"},"testConfig.expect"),".")))),(0,r.kt)("p",null,"Ensures ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/class-locator",title:"Locator"},"Locator")," points to an editable element."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const locator = page.locator('input');\nawait expect(locator).toBeEditable();\n")),(0,r.kt)("h2",{id:"expectlocatortobeemptyoptions"},"expect(locator).toBeEmpty(","[options]",")"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"options"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"timeout")," <",(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type",title:"Number"},"number"),"> Time to retry assertion for, defaults to ",(0,r.kt)("inlineCode",{parentName:"li"},"timeout")," in ",(0,r.kt)("a",{parentName:"li",href:"/docs/api/class-testconfig#test-config-expect"},"testConfig.expect"),".")))),(0,r.kt)("p",null,"Ensures ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/class-locator",title:"Locator"},"Locator")," points to an empty editable element or to a DOM node that has no text."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const locator = page.locator('div.warning');\nawait expect(locator).toBeEmpty();\n")),(0,r.kt)("h2",{id:"expectlocatortobeenabledoptions"},"expect(locator).toBeEnabled(","[options]",")"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"options"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"timeout")," <",(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type",title:"Number"},"number"),"> Time to retry assertion for, defaults to ",(0,r.kt)("inlineCode",{parentName:"li"},"timeout")," in ",(0,r.kt)("a",{parentName:"li",href:"/docs/api/class-testconfig#test-config-expect"},"testConfig.expect"),".")))),(0,r.kt)("p",null,"Ensures ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/class-locator",title:"Locator"},"Locator")," points to an enabled element."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const locator = page.locator('button.submit');\nawait expect(locator).toBeEnabled();\n")),(0,r.kt)("h2",{id:"expectlocatortobefocusedoptions"},"expect(locator).toBeFocused(","[options]",")"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"options"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"timeout")," <",(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type",title:"Number"},"number"),"> Time to retry assertion for, defaults to ",(0,r.kt)("inlineCode",{parentName:"li"},"timeout")," in ",(0,r.kt)("a",{parentName:"li",href:"/docs/api/class-testconfig#test-config-expect"},"testConfig.expect"),".")))),(0,r.kt)("p",null,"Ensures ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/class-locator",title:"Locator"},"Locator")," points to a focused DOM node."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const locator = page.locator('input');\nawait expect(locator).toBeFocused();\n")),(0,r.kt)("h2",{id:"expectlocatortobehiddenoptions"},"expect(locator).toBeHidden(","[options]",")"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"options"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"timeout")," <",(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type",title:"Number"},"number"),"> Time to retry assertion for, defaults to ",(0,r.kt)("inlineCode",{parentName:"li"},"timeout")," in ",(0,r.kt)("a",{parentName:"li",href:"/docs/api/class-testconfig#test-config-expect"},"testConfig.expect"),".")))),(0,r.kt)("p",null,"Ensures ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/class-locator",title:"Locator"},"Locator")," points to a hidden DOM node, which is the opposite of ",(0,r.kt)("a",{parentName:"p",href:"/docs/actionability#visible"},"visible"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const locator = page.locator('.my-element');\nawait expect(locator).toBeHidden();\n")),(0,r.kt)("h2",{id:"expectlocatortobevisibleoptions"},"expect(locator).toBeVisible(","[options]",")"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"options"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"timeout")," <",(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type",title:"Number"},"number"),"> Time to retry assertion for, defaults to ",(0,r.kt)("inlineCode",{parentName:"li"},"timeout")," in ",(0,r.kt)("a",{parentName:"li",href:"/docs/api/class-testconfig#test-config-expect"},"testConfig.expect"),".")))),(0,r.kt)("p",null,"Ensures ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/class-locator",title:"Locator"},"Locator")," points to a ",(0,r.kt)("a",{parentName:"p",href:"/docs/actionability#visible"},"visible")," DOM node."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const locator = page.locator('.my-element');\nawait expect(locator).toBeVisible();\n")),(0,r.kt)("h2",{id:"expectlocatortocontaintextexpected-options"},"expect(locator).toContainText(expected","[, options]",")"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"expected")," <",(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type",title:"string"},"string")," | ",(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",title:"RegExp"},"RegExp")," | ",(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",title:"Array"},"Array"),"<",(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type",title:"string"},"string"),"|",(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",title:"RegExp"},"RegExp"),">>"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"options"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"timeout")," <",(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type",title:"Number"},"number"),"> Time to retry assertion for, defaults to ",(0,r.kt)("inlineCode",{parentName:"li"},"timeout")," in ",(0,r.kt)("a",{parentName:"li",href:"/docs/api/class-testconfig#test-config-expect"},"testConfig.expect"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"useInnerText")," <",(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type",title:"Boolean"},"boolean"),"> Whether to use ",(0,r.kt)("inlineCode",{parentName:"li"},"element.innerText")," instead of ",(0,r.kt)("inlineCode",{parentName:"li"},"element.textContent")," when retrieving DOM node text.")))),(0,r.kt)("p",null,"Ensures ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/class-locator",title:"Locator"},"Locator")," points to an element that contains the given text. You can use regular expressions for the value as well."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const locator = page.locator('.title');\nawait expect(locator).toContainText('substring');\nawait expect(locator).toContainText(/\\d messages/);\n")),(0,r.kt)("p",null,"Note that if array is passed as an expected value, entire lists can be asserted:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const locator = page.locator('list > .list-item');\nawait expect(locator).toContainText(['Text 1', 'Text 4', 'Text 5']);\n")),(0,r.kt)("h2",{id:"expectlocatortohaveattributename-value-options"},"expect(locator).toHaveAttribute(name, value","[, options]",")"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"name")," <",(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type",title:"string"},"string"),"> Attribute name"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"value")," <",(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type",title:"string"},"string"),"|",(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",title:"RegExp"},"RegExp"),"> Attribute value"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"options"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"timeout")," <",(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type",title:"Number"},"number"),"> Time to retry assertion for, defaults to ",(0,r.kt)("inlineCode",{parentName:"li"},"timeout")," in ",(0,r.kt)("a",{parentName:"li",href:"/docs/api/class-testconfig#test-config-expect"},"testConfig.expect"),".")))),(0,r.kt)("p",null,"Ensures ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/class-locator",title:"Locator"},"Locator")," points to an element with given attribute."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const locator = page.locator('input');\nawait expect(locator).toHaveAttribute('type', 'text');\n")),(0,r.kt)("h2",{id:"expectlocatortohaveclassexpected-options"},"expect(locator).toHaveClass(expected","[, options]",")"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"expected")," <",(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type",title:"string"},"string")," | ",(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",title:"RegExp"},"RegExp")," | ",(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",title:"Array"},"Array"),"<",(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type",title:"string"},"string"),"|",(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",title:"RegExp"},"RegExp"),">>"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"options"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"timeout")," <",(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type",title:"Number"},"number"),"> Time to retry assertion for, defaults to ",(0,r.kt)("inlineCode",{parentName:"li"},"timeout")," in ",(0,r.kt)("a",{parentName:"li",href:"/docs/api/class-testconfig#test-config-expect"},"testConfig.expect"),".")))),(0,r.kt)("p",null,"Ensures ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/class-locator",title:"Locator"},"Locator")," points to an element with given CSS class."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const locator = page.locator('#component');\nawait expect(locator).toHaveClass(/selected/);\n")),(0,r.kt)("p",null,"Note that if array is passed as an expected value, entire lists can be asserted:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const locator = page.locator('list > .component');\nawait expect(locator).toHaveClass(['component', 'component selected', 'component']);\n")),(0,r.kt)("h2",{id:"expectlocatortohavecountcount-options"},"expect(locator).toHaveCount(count","[, options]",")"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"count")," <",(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type",title:"Number"},"number"),">"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"options"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"timeout")," <",(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type",title:"Number"},"number"),"> Time to retry assertion for, defaults to ",(0,r.kt)("inlineCode",{parentName:"li"},"timeout")," in ",(0,r.kt)("a",{parentName:"li",href:"/docs/api/class-testconfig#test-config-expect"},"testConfig.expect"),".")))),(0,r.kt)("p",null,"Ensures ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/class-locator",title:"Locator"},"Locator")," resolves to an exact number of DOM nodes."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const list = page.locator('list > .component');\nawait expect(list).toHaveCount(3);\n")),(0,r.kt)("h2",{id:"expectlocatortohavecssname-value-options"},"expect(locator).toHaveCSS(name, value","[, options]",")"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"name")," <",(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type",title:"string"},"string"),"> CSS property name"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"value")," <",(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type",title:"string"},"string"),"|",(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",title:"RegExp"},"RegExp"),"> CSS property value"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"options"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"timeout")," <",(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type",title:"Number"},"number"),"> Time to retry assertion for, defaults to ",(0,r.kt)("inlineCode",{parentName:"li"},"timeout")," in ",(0,r.kt)("a",{parentName:"li",href:"/docs/api/class-testconfig#test-config-expect"},"testConfig.expect"),".")))),(0,r.kt)("p",null,"Ensures ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/class-locator",title:"Locator"},"Locator")," resolves to an element with the given computed CSS style."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const locator = page.locator('button');\nawait expect(locator).toHaveCSS('display', 'flex');\n")),(0,r.kt)("h2",{id:"expectlocatortohaveidid-options"},"expect(locator).toHaveId(id","[, options]",")"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"id")," <",(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type",title:"string"},"string"),"> Element id"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"options"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"timeout")," <",(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type",title:"Number"},"number"),"> Time to retry assertion for, defaults to ",(0,r.kt)("inlineCode",{parentName:"li"},"timeout")," in ",(0,r.kt)("a",{parentName:"li",href:"/docs/api/class-testconfig#test-config-expect"},"testConfig.expect"),".")))),(0,r.kt)("p",null,"Ensures ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/class-locator",title:"Locator"},"Locator")," points to an element with the given DOM Node ID."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const locator = page.locator('input');\nawait expect(locator).toHaveId('lastname');\n")),(0,r.kt)("h2",{id:"expectlocatortohavejspropertyname-value-options"},"expect(locator).toHaveJSProperty(name, value","[, options]",")"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"name")," <",(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type",title:"string"},"string"),"> Property name"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"value")," <","[any]","> Property value"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"options"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"timeout")," <",(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type",title:"Number"},"number"),"> Time to retry assertion for, defaults to ",(0,r.kt)("inlineCode",{parentName:"li"},"timeout")," in ",(0,r.kt)("a",{parentName:"li",href:"/docs/api/class-testconfig#test-config-expect"},"testConfig.expect"),".")))),(0,r.kt)("p",null,"Ensures ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/class-locator",title:"Locator"},"Locator")," points to an element with given JavaScript property. Note that this property can be of a primitive type as well as a plain serializable JavaScript object."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const locator = page.locator('.component');\nawait expect(locator).toHaveJSProperty('loaded', true);\n")),(0,r.kt)("h2",{id:"expectlocatortohavetextexpected-options"},"expect(locator).toHaveText(expected","[, options]",")"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"expected")," <",(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type",title:"string"},"string")," | ",(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",title:"RegExp"},"RegExp")," | ",(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",title:"Array"},"Array"),"<",(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type",title:"string"},"string"),"|",(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",title:"RegExp"},"RegExp"),">>"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"options"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"timeout")," <",(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type",title:"Number"},"number"),"> Time to retry assertion for, defaults to ",(0,r.kt)("inlineCode",{parentName:"li"},"timeout")," in ",(0,r.kt)("a",{parentName:"li",href:"/docs/api/class-testconfig#test-config-expect"},"testConfig.expect"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"useInnerText")," <",(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type",title:"Boolean"},"boolean"),"> Whether to use ",(0,r.kt)("inlineCode",{parentName:"li"},"element.innerText")," instead of ",(0,r.kt)("inlineCode",{parentName:"li"},"element.textContent")," when retrieving DOM node text.")))),(0,r.kt)("p",null,"Ensures ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/class-locator",title:"Locator"},"Locator")," points to an element with the given text. You can use regular expressions for the value as well."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const locator = page.locator('.title');\nawait expect(locator).toHaveText(/Welcome, Test User/);\nawait expect(locator).toHaveText(/Welcome, .*/);\n")),(0,r.kt)("p",null,"Note that if array is passed as an expected value, entire lists can be asserted:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const locator = page.locator('list > .component');\nawait expect(locator).toHaveText(['Text 1', 'Text 2', 'Text 3']);\n")),(0,r.kt)("h2",{id:"expectlocatortohavevaluevalue-options"},"expect(locator).toHaveValue(value","[, options]",")"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"value")," <",(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type",title:"string"},"string")," | ",(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",title:"RegExp"},"RegExp"),">"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"options"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"timeout")," <",(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type",title:"Number"},"number"),"> Time to retry assertion for, defaults to ",(0,r.kt)("inlineCode",{parentName:"li"},"timeout")," in ",(0,r.kt)("a",{parentName:"li",href:"/docs/api/class-testconfig#test-config-expect"},"testConfig.expect"),".")))),(0,r.kt)("p",null,"Ensures ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/class-locator",title:"Locator"},"Locator")," points to an element with the given input value. You can use regular expressions for the value as well."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const locator = page.locator('input[type=number]');\nawait expect(locator).toHaveValue(/[0-9]/);\n")),(0,r.kt)("h2",{id:"expectpagetohavetitletitle-options"},"expect(page).toHaveTitle(title","[, options]",")"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"title")," <",(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type",title:"string"},"string")," | ",(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",title:"RegExp"},"RegExp"),">"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"options"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"timeout")," <",(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type",title:"Number"},"number"),"> Time to retry assertion for, defaults to ",(0,r.kt)("inlineCode",{parentName:"li"},"timeout")," in ",(0,r.kt)("a",{parentName:"li",href:"/docs/api/class-testconfig#test-config-expect"},"testConfig.expect"),".")))),(0,r.kt)("p",null,"Ensures page has a given title."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"await expect(page).toHaveTitle(/.*checkout/);\n")),(0,r.kt)("h2",{id:"expectpagetohaveurlurl-options"},"expect(page).toHaveURL(url","[, options]",")"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"url")," <",(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type",title:"string"},"string")," | ",(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",title:"RegExp"},"RegExp"),">"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"options"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"timeout")," <",(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type",title:"Number"},"number"),"> Time to retry assertion for, defaults to ",(0,r.kt)("inlineCode",{parentName:"li"},"timeout")," in ",(0,r.kt)("a",{parentName:"li",href:"/docs/api/class-testconfig#test-config-expect"},"testConfig.expect"),".")))),(0,r.kt)("p",null,"Ensures page is navigated to a given URL."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"await expect(page).toHaveURL(/.*checkout/);\n")),(0,r.kt)("h2",{id:"expectvaluetomatchsnapshotname-options"},"expect(value).toMatchSnapshot(name","[, options]",")"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"name")," <",(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type",title:"string"},"string")," | ",(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",title:"Array"},"Array"),"<",(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type",title:"string"},"string"),">> Snapshot name."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"options"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"threshold")," <","[float]","> Image matching threshold between zero (strict) and one (lax), default is configurable with ",(0,r.kt)("a",{parentName:"li",href:"/docs/api/class-testconfig#test-config-expect"},"testConfig.expect"),".")))),(0,r.kt)("p",null,"Ensures that passed value, either a ",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type",title:"string"},"string")," or a ",(0,r.kt)("a",{parentName:"p",href:"https://nodejs.org/api/buffer.html#buffer_class_buffer",title:"Buffer"},"Buffer"),", matches the expected snapshot stored in the test snapshots directory."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"// Basic usage.\nexpect(await page.screenshot()).toMatchSnapshot('landing-page.png');\n\n// Configure image matching threshold.\nexpect(await page.screenshot()).toMatchSnapshot('landing-page.png', { threshold: 0.3 });\n\n// Bring some structure to your snapshot files by passing file path segments.\nexpect(await page.screenshot()).toMatchSnapshot(['landing', 'step2.png']);\nexpect(await page.screenshot()).toMatchSnapshot(['landing', 'step3.png']);\n")),(0,r.kt)("p",null,"Learn more about ",(0,r.kt)("a",{parentName:"p",href:"/docs/test-snapshots"},"visual comparisons"),"."))}u.isMDXComponent=!0},86010:function(e,t,a){function o(e){var t,a,n="";if("string"==typeof e||"number"==typeof e)n+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(a=o(e[t]))&&(n&&(n+=" "),n+=a);else for(t in e)e[t]&&(n&&(n+=" "),n+=t);return n}function n(){for(var e,t,a=0,n="";a<arguments.length;)(e=arguments[a++])&&(t=o(e))&&(n&&(n+=" "),n+=t);return n}a.d(t,{Z:function(){return n}})}}]);
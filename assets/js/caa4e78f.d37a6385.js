(self.webpackChunkplaywright_dev=self.webpackChunkplaywright_dev||[]).push([[87161],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return p},kt:function(){return g}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),s=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(n),g=a,h=d["".concat(u,".").concat(g)]||d[g]||c[g]||o;return n?r.createElement(h,i(i({ref:t},p),{},{components:n})):r.createElement(h,i({ref:t},p))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4281:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return i},metadata:function(){return l},toc:function(){return u},default:function(){return p}});var r=n(22122),a=n(19756),o=(n(67294),n(3905)),i={id:"debug",title:"Debugging tools"},l={unversionedId:"debug",id:"version-1.5.0/debug",isDocsHomePage:!1,title:"Debugging tools",description:"Playwright scripts work with existing debugging tools, like Node.js debuggers",source:"@site/versioned_docs/version-1.5.0/debug.mdx",sourceDirName:".",slug:"/debug",permalink:"/docs/1.5.0/debug",version:"1.5.0",frontMatter:{id:"debug",title:"Debugging tools"},sidebar:"version-1.5.0/docs",previous:{title:"Core concepts",permalink:"/docs/1.5.0/core-concepts"},next:{title:"Supported languages",permalink:"/docs/1.5.0/languages"}},u=[{value:"Run in headful mode",id:"run-in-headful-mode",children:[]},{value:"Visual Studio Code debugger",id:"visual-studio-code-debugger",children:[{value:"Use launch config",id:"use-launch-config",children:[]},{value:"Use the new JavaScript debugger",id:"use-the-new-javascript-debugger",children:[]}]},{value:"Browser Developer Tools",id:"browser-developer-tools",children:[{value:"API for Chromium",id:"api-for-chromium",children:[]}]},{value:"Run in Debug Mode",id:"run-in-debug-mode",children:[{value:"Defaults",id:"defaults",children:[]},{value:"Debugging Selectors",id:"debugging-selectors",children:[]},{value:"Evaluate Source Maps",id:"evaluate-source-maps",children:[]}]},{value:"Verbose API logs",id:"verbose-api-logs",children:[]}],s={toc:u};function p(e){var t=e.components,n=(0,a.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Playwright scripts work with existing debugging tools, like Node.js debuggers\nand browser developer tools. Playwright also introduces new debugging features\nfor browser automation."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#run-in-headful-mode"},"Run in headful mode")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#visual-studio-code-debugger"},"Visual Studio Code debugger"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#use-launch-config"},"Use launch config")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#use-the-new-javascript-debugger"},"Use the new JavaScript debugger")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#browser-developer-tools"},"Browser Developer Tools"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#api-for-chromium"},"API for Chromium")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#run-in-debug-mode"},"Run in Debug Mode"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#defaults"},"Defaults")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#debugging-selectors"},"Debugging Selectors")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#evaluate-source-maps"},"Evaluate Source Maps")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#verbose-api-logs"},"Verbose API logs"))),(0,o.kt)("h2",{id:"run-in-headful-mode"},"Run in headful mode"),(0,o.kt)("p",null,"Playwright runs browsers in headless mode by default. To change this behavior,\nuse ",(0,o.kt)("inlineCode",{parentName:"p"},"headless: false")," as a launch option. You can also use the ",(0,o.kt)("inlineCode",{parentName:"p"},"slowMo")," option\nto slow down execution and follow along while debugging."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"await chromium.launch({ headless: false, slowMo: 100 }); // or firefox, webkit\n")),(0,o.kt)("h2",{id:"visual-studio-code-debugger"},"Visual Studio Code debugger"),(0,o.kt)("p",null,"The VS Code debugger can be used to pause and resume execution of Playwright\nscripts with breakpoints. The debugger can be configured in two ways."),(0,o.kt)("h3",{id:"use-launch-config"},"Use launch config"),(0,o.kt)("p",null,"Setup ",(0,o.kt)("a",{parentName:"p",href:"https://code.visualstudio.com/docs/nodejs/nodejs-debugging"},(0,o.kt)("inlineCode",{parentName:"a"},"launch.json")," configuration"),"\nfor your Node.js project. Once configured launch the scripts with F5 and use\nbreakpoints."),(0,o.kt)("h3",{id:"use-the-new-javascript-debugger"},"Use the new JavaScript debugger"),(0,o.kt)("p",null,"VS Code 1.46+ introduces the new JavaScript debugger behind a feature flag. The\nnew debugger does not require a ",(0,o.kt)("inlineCode",{parentName:"p"},"launch.json")," configuration. To use this:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Enable the preview debugger"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Open JSON settings and add ",(0,o.kt)("inlineCode",{parentName:"li"},'"debug.javascript.usePreview": true')),(0,o.kt)("li",{parentName:"ul"},"Open settings UI and enable the ",(0,o.kt)("inlineCode",{parentName:"li"},"Debug \u203a JavaScript: Use Preview")," setting"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Set a breakpoint in VS Code"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Use the ",(0,o.kt)("inlineCode",{parentName:"li"},"debugger")," keyword or set a breakpoint in the VS Code UI"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Run your Node.js script from the terminal"))),(0,o.kt)("h2",{id:"browser-developer-tools"},"Browser Developer Tools"),(0,o.kt)("p",null,"You can use browser developer tools in Chromium, Firefox and WebKit while running\na Playwright script. Developer tools help to:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Inspect the DOM tree and ",(0,o.kt)("strong",{parentName:"li"},"find element selectors")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"See console logs")," during execution (or learn how to ",(0,o.kt)("a",{parentName:"li",href:"/docs/1.5.0/verification#console-logs"},"read logs via API"),")"),(0,o.kt)("li",{parentName:"ul"},"Check ",(0,o.kt)("strong",{parentName:"li"},"network activity")," and other developer tools features")),(0,o.kt)("a",{href:"https://user-images.githubusercontent.com/284612/77234134-5f21a500-6b69-11ea-92ec-1c146e1333ec.png"},(0,o.kt)("img",{src:"https://user-images.githubusercontent.com/284612/77234134-5f21a500-6b69-11ea-92ec-1c146e1333ec.png",width:"500",alt:"Chromium Developer Tools"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("strong",{parentName:"p"},"For WebKit"),": Note that launching WebKit Inspector during the execution will\nprevent the Playwright script from executing any further.")),(0,o.kt)("h3",{id:"api-for-chromium"},"API for Chromium"),(0,o.kt)("p",null,"In Chromium, you can also open developer tools through a launch option."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"await chromium.launch({ devtools: true });\n")),(0,o.kt)("h2",{id:"run-in-debug-mode"},"Run in Debug Mode"),(0,o.kt)("p",null,"Set the ",(0,o.kt)("inlineCode",{parentName:"p"},"PWDEBUG")," environment variable to run your scripts in debug mode. This\nconfigures the browser for debugging."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"# Linux/macOS\n$ PWDEBUG=1 npm run test\n\n# Windows\n$ set PWDEBUG=1\n$ npm run test\n")),(0,o.kt)("h3",{id:"defaults"},"Defaults"),(0,o.kt)("p",null,"With PWDEBUG, the following defaults are configured for you:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Run in headful"),": With PWDEBUG, browsers always launch in headful mode"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Disables timeout"),": PWDEBUG sets timeout to 0 (= no timeout)"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Preserve DevTools preferences"),": When used with ",(0,o.kt)("inlineCode",{parentName:"li"},"devtools: true"),", PWDEBUG\npreserves the docked/undocked state of Chrome DevTools")),(0,o.kt)("h3",{id:"debugging-selectors"},"Debugging Selectors"),(0,o.kt)("p",null,"PWDEBUG configures a ",(0,o.kt)("inlineCode",{parentName:"p"},"playwright")," object in the browser to highlight\n",(0,o.kt)("a",{parentName:"p",href:"/docs/1.5.0/selectors"},"Playwright selectors"),". This can be used to verify text or\ncomposite selectors. To use this:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Setup a breakpoint to pause the execution"),(0,o.kt)("li",{parentName:"ol"},"Open the console panel in browser developer tools"),(0,o.kt)("li",{parentName:"ol"},"Use the ",(0,o.kt)("inlineCode",{parentName:"li"},"playwright")," API",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"playwright.$(selector)"),": Highlight the first occurrence of the selector. This reflects\nhow ",(0,o.kt)("inlineCode",{parentName:"li"},"page.$")," would see the page."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"playwright.$$(selector)"),": Highlight all occurrences of the selector. This reflects\nhow ",(0,o.kt)("inlineCode",{parentName:"li"},"page.$$")," would see the page."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"playwright.inspect(selector)"),": Inspect the selector in the Elements panel."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"playwright.clear()"),": Clear existing highlights.")))),(0,o.kt)("a",{href:"https://user-images.githubusercontent.com/284612/86857345-299abc00-c073-11ea-9e31-02923a9f0d4b.png"},(0,o.kt)("img",{src:"https://user-images.githubusercontent.com/284612/86857345-299abc00-c073-11ea-9e31-02923a9f0d4b.png",width:"500",alt:"Highlight selectors"})),(0,o.kt)("h3",{id:"evaluate-source-maps"},"Evaluate Source Maps"),(0,o.kt)("p",null,"PWDEBUG also enables source maps for ",(0,o.kt)("a",{parentName:"p",href:"/docs/1.5.0/core-concepts#evaluation"},(0,o.kt)("inlineCode",{parentName:"a"},"page.evaluate")," executions"),".\nThis improves the debugging experience for JavaScript executions in the page context."),(0,o.kt)("a",{href:"https://user-images.githubusercontent.com/284612/86857568-a6c63100-c073-11ea-82a4-bfd531a4ec87.png"},(0,o.kt)("img",{src:"https://user-images.githubusercontent.com/284612/86857568-a6c63100-c073-11ea-82a4-bfd531a4ec87.png",width:"500",alt:"Highlight selectors"})),(0,o.kt)("h2",{id:"verbose-api-logs"},"Verbose API logs"),(0,o.kt)("p",null,"Playwright supports verbose logging with the ",(0,o.kt)("inlineCode",{parentName:"p"},"DEBUG")," environment variable."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"# Linux/macOS\n$ DEBUG=pw:api npm run test\n\n# Windows\n$ set DEBUG=pw:api\n$ npm run test\n")))}p.isMDXComponent=!0}}]);
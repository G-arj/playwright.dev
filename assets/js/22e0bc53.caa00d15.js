"use strict";(self.webpackChunkplaywright_dev=self.webpackChunkplaywright_dev||[]).push([[45127],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return g}});var s=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,s)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,s,a=function(e,t){if(null==e)return{};var r,s,a={},n=Object.keys(e);for(s=0;s<n.length;s++)r=n[s],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(s=0;s<n.length;s++)r=n[s],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=s.createContext({}),p=function(e){var t=s.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=p(e.components);return s.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return s.createElement(s.Fragment,{},t)}},h=s.forwardRef((function(e,t){var r=e.components,a=e.mdxType,n=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),h=p(r),g=a,d=h["".concat(l,".").concat(g)]||h[g]||u[g]||n;return r?s.createElement(d,i(i({ref:t},c),{},{components:r})):s.createElement(d,i({ref:t},c))}));function g(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var n=r.length,i=new Array(n);i[0]=h;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var p=2;p<n;p++)i[p]=r[p];return s.createElement.apply(null,i)}return s.createElement.apply(null,r)}h.displayName="MDXCreateElement"},37446:function(e,t,r){r.r(t),r.d(t,{assets:function(){return f},contentTitle:function(){return g},default:function(){return w},frontMatter:function(){return h},metadata:function(){return d},toc:function(){return y}});var s=r(3905),a=Object.defineProperty,n=Object.defineProperties,i=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,c=(e,t,r)=>t in e?a(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,u=(e,t)=>{for(var r in t||(t={}))l.call(t,r)&&c(e,r,t[r]);if(o)for(var r of o(t))p.call(t,r)&&c(e,r,t[r]);return e};const h={id:"class-playwrightassertions",title:"PlaywrightAssertions"},g=void 0,d={unversionedId:"api/class-playwrightassertions",id:"version-1.18/api/class-playwrightassertions",title:"PlaywrightAssertions",description:"The [PlaywrightAssertions] class provides convenience methods for creating assertions that will wait until the expected condition is met.",source:"@site/versioned_docs/version-1.18/api/class-playwrightassertions.mdx",sourceDirName:"api",slug:"/api/class-playwrightassertions",permalink:"/docs/1.18/api/class-playwrightassertions",tags:[],version:"1.18",frontMatter:{id:"class-playwrightassertions",title:"PlaywrightAssertions"},sidebar:"version-1.18/api",previous:{title:"PageAssertions",permalink:"/docs/1.18/api/class-pageassertions"},next:{title:"Request",permalink:"/docs/1.18/api/class-request"}},f={},y=[{value:"playwrightAssertions.expect(response)",id:"playwright-assertions-expect-api-response",level:2},{value:"playwrightAssertions.expect(locator)",id:"playwright-assertions-expect-locator",level:2},{value:"playwrightAssertions.expect(page)",id:"playwright-assertions-expect-page",level:2}],m={toc:y};function w(e){var t,r=e,{components:a}=r,c=((e,t)=>{var r={};for(var s in e)l.call(e,s)&&t.indexOf(s)<0&&(r[s]=e[s]);if(null!=e&&o)for(var s of o(e))t.indexOf(s)<0&&p.call(e,s)&&(r[s]=e[s]);return r})(r,["components"]);return(0,s.kt)("wrapper",(t=u(u({},m),c),n(t,i({components:a,mdxType:"MDXLayout"}))),(0,s.kt)("p",null,"The ",(0,s.kt)("a",u({parentName:"p"},{href:"/docs/1.18/api/class-playwrightassertions",title:"PlaywrightAssertions"}),"PlaywrightAssertions")," class provides convenience methods for creating assertions that will wait until the expected condition is met."),(0,s.kt)("p",null,"Consider the following example:"),(0,s.kt)("pre",null,(0,s.kt)("code",u({parentName:"pre"},{className:"language-js"}),"import { test, expect } from '@playwright/test';\n\ntest('status becomes submitted', async ({ page }) => {\n  // ...\n  await page.click('#submit-button')\n  await expect(page.locator('.status')).toHaveText('Submitted');\n});\n")),(0,s.kt)("p",null,"Playwright will be re-testing the node with the selector ",(0,s.kt)("inlineCode",{parentName:"p"},".status")," until fetched Node has the ",(0,s.kt)("inlineCode",{parentName:"p"},'"Submitted"')," text. It will be re-fetching the node and checking it over and over, until the condition is met or until the timeout is reached. You can pass this timeout as an option."),(0,s.kt)("p",null,"By default, the timeout for assertions is set to 5 seconds."),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",u({parentName:"li"},{href:"/docs/1.18/api/class-playwrightassertions#playwright-assertions-expect-api-response"}),"playwrightAssertions.expect(response)")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",u({parentName:"li"},{href:"/docs/1.18/api/class-playwrightassertions#playwright-assertions-expect-locator"}),"playwrightAssertions.expect(locator)")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",u({parentName:"li"},{href:"/docs/1.18/api/class-playwrightassertions#playwright-assertions-expect-page"}),"playwrightAssertions.expect(page)"))),(0,s.kt)("h2",u({},{id:"playwright-assertions-expect-api-response"}),"playwrightAssertions.expect(response)"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"response"),(0,s.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"playwright-assertions-expect-api-response-option-response"})," ","<",(0,s.kt)("a",u({parentName:"li"},{href:"/docs/1.18/api/class-apiresponse",title:"APIResponse"}),"APIResponse"),">"," ",(0,s.kt)("a",u({parentName:"li"},{href:"/docs/1.18/api/class-apiresponse",title:"APIResponse"}),"APIResponse")," object to use for assertions.",(0,s.kt)("a",{href:"#playwright-assertions-expect-api-response-option-response",class:"list-anchor"},"#")),(0,s.kt)("li",{parentName:"ul"},"returns:",(0,s.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"playwright-assertions-expect-api-response-return"})," ","<",(0,s.kt)("a",u({parentName:"li"},{href:"/docs/1.18/api/class-apiresponseassertions",title:"APIResponseAssertions"}),"APIResponseAssertions"),">",(0,s.kt)("a",{href:"#playwright-assertions-expect-api-response-return",class:"list-anchor"},"#"))),(0,s.kt)("p",null,"Creates a ",(0,s.kt)("a",u({parentName:"p"},{href:"/docs/1.18/api/class-apiresponseassertions",title:"APIResponseAssertions"}),"APIResponseAssertions")," object for the given ",(0,s.kt)("a",u({parentName:"p"},{href:"/docs/1.18/api/class-apiresponse",title:"APIResponse"}),"APIResponse"),"."),(0,s.kt)("h2",u({},{id:"playwright-assertions-expect-locator"}),"playwrightAssertions.expect(locator)"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"locator"),(0,s.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"playwright-assertions-expect-locator-option-locator"})," ","<",(0,s.kt)("a",u({parentName:"li"},{href:"/docs/1.18/api/class-locator",title:"Locator"}),"Locator"),">"," ",(0,s.kt)("a",u({parentName:"li"},{href:"/docs/1.18/api/class-locator",title:"Locator"}),"Locator")," object to use for assertions.",(0,s.kt)("a",{href:"#playwright-assertions-expect-locator-option-locator",class:"list-anchor"},"#")),(0,s.kt)("li",{parentName:"ul"},"returns:",(0,s.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"playwright-assertions-expect-locator-return"})," ","<",(0,s.kt)("a",u({parentName:"li"},{href:"/docs/1.18/api/class-locatorassertions",title:"LocatorAssertions"}),"LocatorAssertions"),">",(0,s.kt)("a",{href:"#playwright-assertions-expect-locator-return",class:"list-anchor"},"#"))),(0,s.kt)("p",null,"Creates a ",(0,s.kt)("a",u({parentName:"p"},{href:"/docs/1.18/api/class-locatorassertions",title:"LocatorAssertions"}),"LocatorAssertions")," object for the given ",(0,s.kt)("a",u({parentName:"p"},{href:"/docs/1.18/api/class-locator",title:"Locator"}),"Locator"),"."),(0,s.kt)("h2",u({},{id:"playwright-assertions-expect-page"}),"playwrightAssertions.expect(page)"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"page"),(0,s.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"playwright-assertions-expect-page-option-page"})," ","<",(0,s.kt)("a",u({parentName:"li"},{href:"/docs/1.18/api/class-page",title:"Page"}),"Page"),">"," ",(0,s.kt)("a",u({parentName:"li"},{href:"/docs/1.18/api/class-page",title:"Page"}),"Page")," object to use for assertions.",(0,s.kt)("a",{href:"#playwright-assertions-expect-page-option-page",class:"list-anchor"},"#")),(0,s.kt)("li",{parentName:"ul"},"returns:",(0,s.kt)("a",{"aria-hidden":"true",tabindex:"-1",class:"list-anchor-link",id:"playwright-assertions-expect-page-return"})," ","<",(0,s.kt)("a",u({parentName:"li"},{href:"/docs/1.18/api/class-pageassertions",title:"PageAssertions"}),"PageAssertions"),">",(0,s.kt)("a",{href:"#playwright-assertions-expect-page-return",class:"list-anchor"},"#"))),(0,s.kt)("p",null,"Creates a ",(0,s.kt)("a",u({parentName:"p"},{href:"/docs/1.18/api/class-pageassertions",title:"PageAssertions"}),"PageAssertions")," object for the given ",(0,s.kt)("a",u({parentName:"p"},{href:"/docs/1.18/api/class-page",title:"Page"}),"Page"),"."))}w.isMDXComponent=!0}}]);
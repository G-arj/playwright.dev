"use strict";(self.webpackChunkplaywright_dev=self.webpackChunkplaywright_dev||[]).push([[679],{3905:function(e,t,a){a.d(t,{Zo:function(){return u},kt:function(){return d}});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},u=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),c=p(a),d=r,f=c["".concat(s,".").concat(d)]||c[d]||m[d]||i;return a?n.createElement(f,l(l({ref:t},u),{},{components:a})):n.createElement(f,l({ref:t},u))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=c;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var p=2;p<i;p++)l[p]=a[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},58215:function(e,t,a){a.d(t,{Z:function(){return r}});var n=a(67294);function r(e){var t=e.children,a=e.hidden,r=e.className;return n.createElement("div",{role:"tabpanel",hidden:a,className:r},t)}},9877:function(e,t,a){a.d(t,{Z:function(){return u}});var n=a(87462),r=a(67294),i=a(72389),l=a(29366),o=a(86010),s="tabItem_LplD";function p(e){var t,a,i,p=e.lazy,u=e.block,m=e.defaultValue,c=e.values,d=e.groupId,f=e.className,k=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),h=null!=c?c:k.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),N=(0,l.lx)(h,(function(e,t){return e.value===t.value}));if(N.length>0)throw new Error('Docusaurus error: Duplicate values "'+N.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var g=null===m?m:null!=(t=null!=m?m:null==(a=k.find((function(e){return e.props.default})))?void 0:a.props.value)?t:null==(i=k[0])?void 0:i.props.value;if(null!==g&&!h.some((function(e){return e.value===g})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+g+'" but none of its children has the corresponding value. Available values are: '+h.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var b=(0,l.UB)(),v=b.tabGroupChoices,y=b.setTabGroupChoices,w=(0,r.useState)(g),C=w[0],x=w[1],O=[],E=(0,l.o5)().blockElementScrollPositionUntilNextRender;if(null!=d){var T=v[d];null!=T&&T!==C&&h.some((function(e){return e.value===T}))&&x(T)}var j=function(e){var t=e.currentTarget,a=O.indexOf(t),n=h[a].value;n!==C&&(E(t),x(n),null!=d&&y(d,n))},D=function(e){var t,a=null;switch(e.key){case"ArrowRight":var n=O.indexOf(e.currentTarget)+1;a=O[n]||O[0];break;case"ArrowLeft":var r=O.indexOf(e.currentTarget)-1;a=O[r]||O[O.length-1]}null==(t=a)||t.focus()};return r.createElement("div",{className:"tabs-container"},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":u},f)},h.map((function(e){var t=e.value,a=e.label,i=e.attributes;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:C===t?0:-1,"aria-selected":C===t,key:t,ref:function(e){return O.push(e)},onKeyDown:D,onFocus:j,onClick:j},i,{className:(0,o.Z)("tabs__item",s,null==i?void 0:i.className,{"tabs__item--active":C===t})}),null!=a?a:t)}))),p?(0,r.cloneElement)(k.filter((function(e){return e.props.value===C}))[0],{className:"margin-vert--md"}):r.createElement("div",{className:"margin-vert--md"},k.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==C})}))))}function u(e){var t=(0,i.Z)();return r.createElement(p,(0,n.Z)({key:String(t)},e))}},79073:function(e,t,a){a.r(t),a.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return o},metadata:function(){return p},toc:function(){return m}});var n=a(87462),r=a(63366),i=(a(67294),a(3905)),l=(a(9877),a(58215),["components"]),o={id:"test-cli",title:"Command line"},s=void 0,p={unversionedId:"test-cli",id:"version-1.19/test-cli",title:"Command line",description:"- Examples",source:"@site/versioned_docs/version-1.19/test-cli.mdx",sourceDirName:".",slug:"/test-cli",permalink:"/docs/test-cli",tags:[],version:"1.19",frontMatter:{id:"test-cli",title:"Command line"},sidebar:"version-1.19/docs",previous:{title:"Authentication",permalink:"/docs/test-auth"},next:{title:"Configuration",permalink:"/docs/test-configuration"}},u={},m=[{value:"Examples",id:"examples",level:2},{value:"Reference",id:"reference",level:2}],c={toc:m};function d(e){var t=e.components,a=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#examples"},"Examples")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#reference"},"Reference"))),(0,i.kt)("h2",{id:"examples"},"Examples"),(0,i.kt)("p",null,"Here are the most common options available in the command line."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Run all the tests"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npx playwright test\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Run a single test file"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npx playwright test tests/todo-page.spec.ts\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Run a set of test files"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npx playwright test tests/todo-page/ tests/landing-page/\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Run files that have ",(0,i.kt)("inlineCode",{parentName:"p"},"my-spec")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"my-spec-2")," in the file name"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npx playwright test my-spec my-spec-2\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Run the test with the title"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'npx playwright test -g "add a todo item"\n'))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Run tests in headed browsers"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npx playwright test --headed\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Run tests in a particular browser (config-less mode)"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npx playwright test --browser=webkit\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Run tests in all browsers (config-less mode)"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npx playwright test --browser=all\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Disable ",(0,i.kt)("a",{parentName:"p",href:"/docs/test-parallel"},"parallelization")),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npx playwright test --workers=1\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Choose a ",(0,i.kt)("a",{parentName:"p",href:"/docs/test-reporters"},"reporter")),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npx playwright test --reporter=dot\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Run in debug mode with ",(0,i.kt)("a",{parentName:"p",href:"/docs/inspector"},"Playwright Inspector")),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npx playwright test --debug\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Ask for help"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npx playwright test --help\n")))),(0,i.kt)("h2",{id:"reference"},"Reference"),(0,i.kt)("p",null,"Complete set of Playwright Test options is available in the ",(0,i.kt)("a",{parentName:"p",href:"/docs/test-advanced"},"configuration file"),". Following options can be passed to a command line and take a priority over the configuration file:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--headed"),": Run tests in headed browsers. Useful for debugging."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--browser"),": Run test in a specific browser. Available options are  ",(0,i.kt)("inlineCode",{parentName:"li"},'"chromium"'),", ",(0,i.kt)("inlineCode",{parentName:"li"},'"firefox"'),", ",(0,i.kt)("inlineCode",{parentName:"li"},'"webkit"')," or ",(0,i.kt)("inlineCode",{parentName:"li"},'"all"')," to run tests in all three browsers at the same time."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--debug"),": Run tests with Playwright Inspector. Shortcut for ",(0,i.kt)("inlineCode",{parentName:"li"},"PWDEBUG=1")," environment variable and ",(0,i.kt)("inlineCode",{parentName:"li"},"--timeout=0 --maxFailures=1 --headed --workers=1")," options."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-c <file>")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"--config <file>"),": Configuration file. If not passed, defaults to ",(0,i.kt)("inlineCode",{parentName:"li"},"playwright.config.ts")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"playwright.config.js")," in the current directory."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-c <dir>")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"--config <dir>"),": Directory with the tests to run without configuration file."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--forbid-only"),": Whether to disallow ",(0,i.kt)("inlineCode",{parentName:"li"},"test.only"),". Useful on CI."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-g <grep>")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"--grep <grep>"),": Only run tests matching this regular expression. For example, this will run ",(0,i.kt)("inlineCode",{parentName:"li"},"'should add to cart'")," when passed ",(0,i.kt)("inlineCode",{parentName:"li"},'-g="add to cart"'),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--grep-invert <grep>"),": Only run tests ",(0,i.kt)("strong",{parentName:"li"},"not")," matching this regular expression. The opposite of ",(0,i.kt)("inlineCode",{parentName:"li"},"--grep"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--global-timeout <number>"),": Total timeout for the whole test run in milliseconds. By default, there is no global timeout. Learn more about ",(0,i.kt)("a",{parentName:"li",href:"/docs/test-timeouts"},"various timeouts"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--list"),": List all the tests, but do not run them."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--max-failures <N>")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"-x"),": Stop after the first ",(0,i.kt)("inlineCode",{parentName:"li"},"N")," test failures. Passing ",(0,i.kt)("inlineCode",{parentName:"li"},"-x")," stops after the first failure."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--output <dir>"),": Directory for artifacts produced by tests, defaults to ",(0,i.kt)("inlineCode",{parentName:"li"},"test-results"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--project <name>"),": Only run tests from one of the specified ",(0,i.kt)("a",{parentName:"li",href:"/docs/test-advanced#projects"},"projects"),". Defaults to running all projects defined in the configuration file."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--quiet"),": Whether to suppress stdout and stderr from the tests."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--repeat-each <N>"),": Run each test ",(0,i.kt)("inlineCode",{parentName:"li"},"N")," times, defaults to one."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--reporter <reporter>"),": Choose a reporter: minimalist ",(0,i.kt)("inlineCode",{parentName:"li"},"dot"),", concise ",(0,i.kt)("inlineCode",{parentName:"li"},"line")," or detailed ",(0,i.kt)("inlineCode",{parentName:"li"},"list"),". See ",(0,i.kt)("a",{parentName:"li",href:"/docs/test-reporters"},"reporters")," for more information."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--retries <number>"),": The maximum number of ",(0,i.kt)("a",{parentName:"li",href:"/docs/test-retries#retries"},"retries")," for flaky tests, defaults to zero (no retries)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--shard <shard>"),": ",(0,i.kt)("a",{parentName:"li",href:"/docs/test-parallel#shard-tests-between-multiple-machines"},"Shard")," tests and execute only selected shard, specified in the form ",(0,i.kt)("inlineCode",{parentName:"li"},"current/all"),", 1-based, for example ",(0,i.kt)("inlineCode",{parentName:"li"},"3/5"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--timeout <number>"),": Maximum timeout in milliseconds for each test, defaults to 30 seconds. Learn more about ",(0,i.kt)("a",{parentName:"li",href:"/docs/test-timeouts"},"various timeouts"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--update-snapshots")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"-u"),": Whether to update ",(0,i.kt)("a",{parentName:"li",href:"/docs/test-snapshots"},"snapshots")," with actual results instead of comparing them. Use this when snapshot expectations have changed."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--workers <number>")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"-j <number>"),": The maximum number of concurrent worker processes that run in ",(0,i.kt)("a",{parentName:"li",href:"/docs/test-parallel"},"parallel"),".")))}d.isMDXComponent=!0}}]);
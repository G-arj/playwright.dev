(window.webpackJsonp=window.webpackJsonp||[]).push([[522],{591:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return s})),a.d(t,"metadata",(function(){return c})),a.d(t,"toc",(function(){return o})),a.d(t,"default",(function(){return p}));var n=a(3),r=a(7),l=(a(0),a(599)),s={id:"assertions",title:"Assertions"},c={unversionedId:"assertions",id:"assertions",isDocsHomePage:!1,title:"Assertions",description:"The Playwright API can be used to read element contents and properties for test assertions. These values are fetched from the browser page and asserted in Node.js.",source:"@site/docs/assertions.md",slug:"/assertions",permalink:"/docs/next/assertions",version:"current",sidebar:"docs",previous:{title:"Actionability",permalink:"/docs/next/actionability"},next:{title:"Authentication",permalink:"/docs/next/auth"}},o=[{value:"Common patterns",id:"common-patterns",children:[]},{value:"Element Handles",id:"element-handles",children:[]},{value:"Custom assertions",id:"custom-assertions",children:[]}],i={toc:o};function p(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(l.b)("wrapper",Object(n.a)({},i,a,{components:t,mdxType:"MDXLayout"}),Object(l.b)("p",null,"The Playwright API can be used to read element contents and properties for test assertions. These values are fetched from the browser page and asserted in Node.js."),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#common-patterns"}),"Common patterns")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#element-handles"}),"Element Handles")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"#custom-assertions"}),"Custom assertions"))),Object(l.b)("h2",{id:"common-patterns"},"Common patterns"),Object(l.b)("p",null,"Playwright provides convenience APIs for common assertion tasks, like finding the text content of an element. These APIs require a ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/next/selectors"}),"selector")," to locate the element."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"// This example uses the Node.js's built-in `assert` module,\n// but any assertion library (Expect, Chai, etc.) will work.\n\n// Assert text content\nconst content = await page.textContent('nav:first-child');\nassert(content === 'home');\n\n// Assert inner text\nconst text = await page.innerText('.selected');\nassert(text === 'value');\n\n// Assert inner HTML\nconst html = await page.innerHTML('div.result');\nassert(html === '<p>Result</p>')\n\n// Assert `checked` attribute\nconst checked = await page.getAttribute('input', 'checked');\nassert(checked);\n")),Object(l.b)("h4",{id:"api-reference"},"API reference"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/next/api/class-page#pagetextcontentselector-options"}),"page.textContent(selector[, options])")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/next/api/class-page#pageinnertextselector-options"}),"page.innerText(selector[, options])")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/next/api/class-page#pageinnerhtmlselector-options"}),"page.innerHTML(selector[, options])")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/next/api/class-page#pagegetattributeselector-name-options"}),"page.getAttribute(selector, name[, options])")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/next/api/class-frame#frametextcontentselector-options"}),"frame.textContent(selector[, options])")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/next/api/class-frame#frameinnertextselector-options"}),"frame.innerText(selector[, options])")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/next/api/class-frame#frameinnerhtmlselector-options"}),"frame.innerHTML(selector[, options])")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/next/api/class-frame#framegetattributeselector-name-options"}),"frame.getAttribute(selector, name[, options])"))),Object(l.b)("br",null),Object(l.b)("h2",{id:"element-handles"},"Element Handles"),Object(l.b)("p",null,Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/next/api/class-elementhandle",title:"ElementHandle"}),"ElementHandle")," objects represent in-page DOM elements. They can be used to assert for multiple properties of the element."),Object(l.b)("p",null,"It is recommended to fetch the ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/next/api/class-elementhandle",title:"ElementHandle"}),"ElementHandle")," object with ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/next/api/class-page#pagewaitforselectorselector-options"}),"page.waitForSelector(selector[, options])")," or ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/next/api/class-frame#framewaitforselectorselector-options"}),"frame.waitForSelector(selector[, options])"),". These APIs wait for the element to be visible and then return an ",Object(l.b)("inlineCode",{parentName:"p"},"ElementHandle"),"."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"// Get the element handle\nconst elementHandle = page.waitForSelector('#box');\n\n// Assert bounding box for the element\nconst boundingBox = await elementHandle.boundingBox();\nassert(boundingBox.width === 100);\n\n// Assert attribute for the element\nconst classNames = await elementHandle.getAttribute('class');\nassert(classNames.includes('highlighted'));\n")),Object(l.b)("h4",{id:"api-reference-1"},"API reference"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/next/api/class-elementhandle#elementhandletextcontent"}),"elementHandle.textContent()")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/next/api/class-elementhandle#elementhandleinnertext"}),"elementHandle.innerText()")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/next/api/class-elementhandle#elementhandleinnerhtml"}),"elementHandle.innerHTML()")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/next/api/class-elementhandle#elementhandlegetattributename"}),"elementHandle.getAttribute(name)")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/next/api/class-elementhandle#elementhandleboundingbox"}),"elementHandle.boundingBox()"))),Object(l.b)("br",null),Object(l.b)("h2",{id:"custom-assertions"},"Custom assertions"),Object(l.b)("p",null,"With Playwright, you can also write custom JavaScript to run in the context of the browser. This is useful in situations where you want to assert for values that are not covered by the convenience APIs above."),Object(l.b)("p",null,"The following APIs do not auto-wait for the element. It is recommended to use ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/next/api/class-page#pagewaitforselectorselector-options"}),"page.waitForSelector(selector[, options])")," or ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/next/api/class-frame#framewaitforselectorselector-options"}),"frame.waitForSelector(selector[, options])"),"."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"// Assert local storage value\nconst userId = page.evaluate(() => window.localStorage.getItem('userId'));\nassert(userId);\n\n// Assert value for input element\nawait page.waitForSelector('#search');\nconst value = await page.$eval('#search', el => el.value);\nassert(value === 'query');\n\n// Assert computed style\nconst fontSize = await page.$eval('div', el => window.getComputedStyle(el).fontSize);\nassert(fontSize === '16px');\n\n// Assert list length\nconst length = await page.$$eval('li.selected', (items) => items.length);\nassert(length === 3);\n")),Object(l.b)("h4",{id:"api-reference-2"},"API reference"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/next/api/class-page#pageevaluatepagefunction-arg"}),"page.evaluate(pageFunction[, arg])")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/next/api/class-page#pageevalselector-pagefunction-arg"}),"page.$eval(selector, pageFunction[, arg])")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/next/api/class-page#pageevalselector-pagefunction-arg-1"}),"page.$$eval(selector, pageFunction[, arg])")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/next/api/class-frame#frameevaluatepagefunction-arg"}),"frame.evaluate(pageFunction[, arg])")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/next/api/class-frame#frameevalselector-pagefunction-arg"}),"frame.$eval(selector, pageFunction[, arg])")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/next/api/class-frame#frameevalselector-pagefunction-arg-1"}),"frame.$$eval(selector, pageFunction[, arg])")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/next/api/class-elementhandle#elementhandleevalselector-pagefunction-arg"}),"elementHandle.$eval(selector, pageFunction[, arg])")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/next/api/class-elementhandle#elementhandleevalselector-pagefunction-arg-1"}),"elementHandle.$$eval(selector, pageFunction[, arg])")),Object(l.b)("li",{parentName:"ul"},"[EvaluationArgument]")))}p.isMDXComponent=!0},599:function(e,t,a){"use strict";a.d(t,"a",(function(){return b})),a.d(t,"b",(function(){return d}));var n=a(0),r=a.n(n);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var i=r.a.createContext({}),p=function(e){var t=r.a.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},b=function(e){var t=p(e.components);return r.a.createElement(i.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,s=e.parentName,i=o(e,["components","mdxType","originalType","parentName"]),b=p(a),u=n,d=b["".concat(s,".").concat(u)]||b[u]||m[u]||l;return a?r.a.createElement(d,c(c({ref:t},i),{},{components:a})):r.a.createElement(d,c({ref:t},i))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,s=new Array(l);s[0]=u;var c={};for(var o in t)hasOwnProperty.call(t,o)&&(c[o]=t[o]);c.originalType=e,c.mdxType="string"==typeof e?e:n,s[1]=c;for(var i=2;i<l;i++)s[i]=a[i];return r.a.createElement.apply(null,s)}return r.a.createElement.apply(null,a)}u.displayName="MDXCreateElement"}}]);